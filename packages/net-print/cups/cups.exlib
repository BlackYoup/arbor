# Copyright 2008 Daniel Mierswa <impulze@impulze.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'cups-1.3.8-r1.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation.

require autotools eutils multilib options pam

SUMMARY="Common UNIX Printing System"
HOMEPAGE="http://www.${PN}.org"
DOWNLOADS="ftp://ftp.easysw.com/pub/${PN}/${PV}/${PNV}-source.tar.bz2"
DESCRIPTION="A portable printing layer for UNIXÂ®-based operating systems."

LICENCES="GPL-2"
SLOT="0"
MYOPTIONS="dbus debug gnutls jpeg pam perl png python ssl tiff threads xinetd"

LANGS="da de es et fi fr he id it ja ko nl no pl pt_BR pt ru sv zh zh_TW"

for lang in ${LANGS}; do
    MYOPTIONS+=" linguas:${lang}"
    option "linguas:${lang}" && CUPSLANGS="${lang} ${CUPSLANGS}"
done

[[ -z "${CUPSLANGS}" ]] && CUPSLANGS=none

# TODO:
# options: acl avahi/zeroconf java kerberos ldap php slp X
# features: maybe ppds?
# testing: that x86 / lib64 issue (see gentoo ebuild)
# probably better slotting to avoid rebuilding

DEPENDENCIES="
    build:
        dbus? ( dev-util/pkg-config )
    build+run:
        dbus? ( sys-apps/dbus )
        gnutls? ( dev-libs/gnutls )
        jpeg? ( media-libs/jpeg )
        pam? ( sys-libs/pam )
        perl? ( dev-lang/perl )
        png? ( media-libs/libpng )
        python? ( dev-lang/python )
        ssl? ( dev-libs/openssl )
        tiff? ( media-libs/tiff )
    post:
        xinetd? ( sys-apps/xinetd )
        app-text/ghostscript[cups]
"

UPSTREAM_DOCUMENTATION="http://www.cups.org/documentation.php"
UPSTREAM_RELEASE_NOTES="http://www.cups.org/documentation.php/whatsnew.html"
REMOTE_IDS="freshmeat:cups"

# interactive testsuite
RESTRICT="test"

SUPPORTED_AUTOMAKE=( 1.10 )
SUPPORTED_AUTOCONF=( 2.5 )

OPTION_DEPENDENCIES="
    (
      at-most-one-of:
        gnutls ssl
      message:
        only one SSL implementation possible, either openssl or gnutls
    )
"

DEFAULT_SRC_PREPARE_PATCHES+=(
    "${FILES}/${PN}-backend-https.patch"
)

DEFAULT_SRC_CONFIGURE_PARAMS+=(
    --enable-pdftops # see below
    --enable-raw-printing
    --enable-static
    --with-cups-user=lp
    --with-cups-group=lp
    --with-system-groups=lpadmin
    --libdir="/usr/$(get_libdir)"
    --localstatedir=/var
    --with-languages="${CUPSLANGS}"
    --with-docdir="/usr/share/doc/${PNVR}/handbook"
    DSOFLAGS="${LDFLAGS}"
)

DEFAULT_SRC_CONFIGURE_OPTION_ENABLES+=(
    dbus gnutls 'gnutls ssl' jpeg pam png ssl 'ssl openssl' tiff threads
    # acl 'kerberos glssapi' ldap slp
)

DEFAULT_SRC_CONFIGURE_OPTION_WITHS+=(
    perl python # java php
)

DEFAULT_SRC_INSTALL_PARAMS+=(
    BUILDROOT="${IMAGE}"
)

pkg_setup() {
    enewgroup lpadmin
}

src_prepare() {
    # remove default optimizations
    sed -e 's:OPTIM="-Os -g":OPTIM="":' \
        -i config-scripts/cups-compiler.m4 \
        || die "sed config-scripts/cups-compiler.m4 failed"

    # do not overwrite libdir if lib64 is found on the system and
    # don't use the library dir as server directory, since that'll
    # break multilib
    sed -e 's#libdir=".*"#:#' \
        -e '/CUPS_SERVERBIN="/s:lib/cups:libexec/cups:' \
        -i config-scripts/cups-directories.m4 \
        || die "sed config-scripts/cups-directories.m4 failed"

    # do not gzip manpages by default
    sed -e '/MAN[0-9]EXT=/s:\.gz::g' \
        -i config-scripts/cups-manpages.m4 \
        || die "sed config-scripts/cups-manpages.m4 failed"

    # disable the xinetd service by default
    if option xinetd ; then
        sed -e "s:^{:{\n\tdisable = yes:" \
            -i init/cups-lpd.in \
            || die "sed init/cups-lpd.in failed"
    fi

    AT_M4DIR=config-scripts
    autotools_src_prepare
}

src_configure() {
    # --without-xinetd is broken and installs files to '/no'
    option xinetd && \
        DEFAULT_SRC_CONFIGURE_PARAMS+=( --with-xinetd=/etc/xinetd.d )

    default
}

src_install() {
    default

    keepdir /usr/libexec/cups/driver /usr/share/cups/profiles \
            /var/cache/cups/rss /var/log/cups /var/run/cups/certs \
            /var/spool/cups/tmp

    keepdir /etc/cups/{interfaces,ppd,ssl}

    rm -r "${IMAGE}/etc"/{rc{0,2,3,5},init}.d

    # cups installs the xinetd script if /etc/xinetd.d exists
    option xinetd || rm -rf "${IMAGE}/etc/xinetd.d"

    # provide our own pam script
    if option pam ; then
        rm -f "${IMAGE}/etc/pam.d/cups"
        pamd_mimic_system cups auth account
    fi

    # add init.d dependencies to the cups init script
    local neededservices=
    option dbus && neededservices+=" dbus"

    newinitd "${FILES}/cups.init.d" cupsd

    [[ -n "${neededservices}" ]] && neededservices="need${neededservices}"

    sed -e "s:@neededservices@:${neededservices}:" \
        -i "${IMAGE}"/etc/init.d/cupsd \
        || die "sed cupsd failed"

    # Gentoo provides its own pdftops filter in ${FILES} which requires perl
    # at runtime and i couldn't find what's wrong with the cups one, so let's
    # see where this takes us :P
#    exeinto "/usr/$(get_libdir)/cups/filter"
#    newexe "${FILES}"/pdftops-1.20.gentoo pdftops

    echo "ServerName localhost" >> "${IMAGE}"/etc/cups/client.conf
}

