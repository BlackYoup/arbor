Source:
	http://bugs.gentoo.org/301312
	http://savannah.gnu.org/bugs/index.php?26786
	http://lists.gnu.org/archive/html/bug-wget/2009-03/msg00033.html
Upstream: Yes
Reason: Add TLS SNI support

---
 src/gnutls.c  |   11 ++++++++++-
 src/host.c    |   16 ++++++++++++++++
 src/host.h    |    2 ++
 src/http.c    |    2 +-
 src/openssl.c |   16 +++++++++++++++-
 src/ssl.h     |    2 +-
 6 files changed, 45 insertions(+), 4 deletions(-)

diff --git a/src/gnutls.c b/src/gnutls.c
index 82abcee..ab8ac6e 100644
--- a/src/gnutls.c
+++ b/src/gnutls.c
@@ -46,6 +46,7 @@ as that of the covered work.  */
 #include "connect.h"
 #include "url.h"
 #include "ssl.h"
+#include "host.h"
 
 #ifdef WIN32
 # include "w32sock.h"
@@ -238,13 +239,21 @@ static struct transport_implementation wgnutls_transport =
 };
 
 bool
-ssl_connect_wget (int fd)
+ssl_connect_wget (int fd, const char *hostname)
 {
   struct wgnutls_transport_context *ctx;
   gnutls_session session;
   int err;
   gnutls_init (&session, GNUTLS_CLIENT);
   gnutls_set_default_priority (session);
+
+  /* We set the server name but only if it's not an IP address. */
+  if (!is_ip_address(hostname))
+    {
+      gnutls_server_name_set (session, GNUTLS_NAME_DNS,
+         hostname, strlen(hostname));
+    }
+
   gnutls_credentials_set (session, GNUTLS_CRD_CERTIFICATE, credentials);
 #ifndef FD_TO_SOCKET
 # define FD_TO_SOCKET(X) (X)
diff --git a/src/host.c b/src/host.c
index 86f107a..c97471b 100644
--- a/src/host.c
+++ b/src/host.c
@@ -914,3 +914,19 @@ host_cleanup (void)
       host_name_addresses_map = NULL;
     }
 }
+
+/* Determine whether or not a hostname is an IP address that we recognise. */
+bool
+is_ip_address (const char *name)
+{
+  const char *endp;
+
+  endp = name + strlen(name);
+  if (is_valid_ipv4_address(name, endp))
+    return true;
+#ifdef ENABLE_IPV6
+  if (is_valid_ipv6_address(name, endp))
+    return true;
+#endif
+  return false;
+}
diff --git a/src/host.h b/src/host.h
index 3f4a02a..d9c1a26 100644
--- a/src/host.h
+++ b/src/host.h
@@ -103,4 +103,6 @@ bool sufmatch (const char **, const char *);
 
 void host_cleanup (void);
 
+bool is_ip_address(const char *);
+
 #endif /* HOST_H */
diff --git a/src/http.c b/src/http.c
index 247ba67..77c1b53 100644
--- a/src/http.c
+++ b/src/http.c
@@ -1909,7 +1909,7 @@ gethttp (struct url *u, struct http_stat *hs, int *dt, struct url *proxy,
 
       if (conn->scheme == SCHEME_HTTPS)
         {
-          if (!ssl_connect_wget (sock))
+          if (!ssl_connect_wget (sock, u->host))
             {
               fd_close (sock);
               return CONSSLERR;
diff --git a/src/openssl.c b/src/openssl.c
index 02bd2f4..da880da 100644
--- a/src/openssl.c
+++ b/src/openssl.c
@@ -45,6 +45,7 @@ as that of the covered work.  */
 #include "connect.h"
 #include "url.h"
 #include "ssl.h"
+#include "host.h"
 
 #ifdef WINDOWS
 # include <w32sock.h>
@@ -393,7 +394,7 @@ static struct transport_implementation openssl_transport = {
    Returns true on success, false on failure.  */
 
 bool
-ssl_connect_wget (int fd)
+ssl_connect_wget (int fd, const char *hostname)
 {
   SSL *conn;
   struct openssl_transport_context *ctx;
@@ -404,6 +405,19 @@ ssl_connect_wget (int fd)
   conn = SSL_new (ssl_ctx);
   if (!conn)
     goto error;
+
+#if OPENSSL_VERSION_NUMBER >= 0x0090806fL && !defined(OPENSSL_NO_TLSEXT)
+  /* If the SSL library was build with support for ServerNameIndication
+     then use it whenever we have a hostname.  If not, don't, ever. */
+  if (!is_ip_address(hostname))
+    {
+      if (!SSL_set_tlsext_host_name(conn, hostname)) {
+       DEBUGP (("Failed to set TLS server-name indication."));
+       goto error;
+      }
+    }
+#endif
+
 #ifndef FD_TO_SOCKET
 # define FD_TO_SOCKET(X) (X)
 #endif
diff --git a/src/ssl.h b/src/ssl.h
index 0532c40..f035cde 100644
--- a/src/ssl.h
+++ b/src/ssl.h
@@ -33,7 +33,7 @@ as that of the covered work.  */
 #define GEN_SSLFUNC_H
 
 bool ssl_init (void);
-bool ssl_connect_wget (int);
+bool ssl_connect_wget (int, const char *);
 bool ssl_check_certificate (int, const char *);
 
 #endif /* GEN_SSLFUNC_H */
-- 
1.7.6.1

