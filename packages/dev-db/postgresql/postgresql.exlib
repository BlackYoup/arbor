# Copyright 2008, 2009, 2010, 2011 Ingmar Vanhassel <ingmar@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

export_exlib_phases pkg_pretend src_prepare src_compile src_test src_install

require systemd-service [ systemd_files=[ postgresql.service ] ]

PSQL_MAJOR_VERSION=$(ever range 1-2)

SUMMARY="PostgreSQL is a powerful, open source relational database system"
DESCRIPTION="
PostgreSQL is a powerful, open source relational database system.
It has more than 15 years of active development and a proven architecture that has earned it
a strong reputation for reliability, data integrity, and correctness.
It runs on all major operating systems, including Linux, UNIX (AIX, BSD, HP-UX, SGI IRIX, Mac OS X, Solaris, Tru64), and Windows.
It is fully ACID compliant, has full support for foreign keys, joins, views, triggers, and stored procedures (in multiple languages).
It includes most SQL92 and SQL99 data types, including INTEGER, NUMERIC, BOOLEAN, CHAR, VARCHAR, DATE, INTERVAL, and TIMESTAMP.
It also supports storage of binary large objects, including pictures, sounds, or video.
It has native programming interfaces for C/C++, Java, .Net, Perl, Python, Ruby, Tcl, ODBC, among others,
and exceptional documentation.
"
HOMEPAGE="http://www.postgresql.org"

BUGS_TO="ingmar@exherbo.org"
REMOTE_IDS="freecode:pgsql"

UPSTREAM_DOCUMENTATION="
${HOMEPAGE}/docs/manuals/           [[ lang = en description = [ PostgreSQL Manuals ] ]]
${HOMEPAGE}/docs/faq/               [[ lang = en description = [ FAQ ] ]]
${HOMEPAGE}/support/security.html   [[ lang = en description = [ Security Information ] ]]
"
UPSTREAM_RELEASE_NOTES="
http://wiki.postgresql.org/wiki/WhatsNew${PSQL_MAJOR_VERSION//.}
${HOMEPAGE}/docs/${PSQL_MAJOR_VERSION}/static/release-${PSQL_MAJOR_VERSION//./-}.html
"
DOWNLOADS="mirror://${PN}/source/v${PV}/${PNV}.tar.bz2"

LICENCES="PostgreSQL"
SLOT="0"
MYOPTIONS="
    fuzzystrmatch [[ description = [ Extension with distance functions on text (mostly for phonetic comparisons) ] ]]
    hstore [[ description = [ Extension with the hstore data type ] ]]
    intarray [[ description = [ Extension with additional functions and indices for int arrays and int sets ] ]]
    ldap
    lo [[ description = [ Extension with the large object support functions and the vacuumlo command line utility ] ]]
    ltree [[ description = [ Extension with the ltree data type for hierarquical categorization ] ]]
    pam
    perl [[ description = [ Support for both PL/Perl and Pl/PerlU server-side programming languages ] ]]
    pg_trgm [[ description = [ Extension with trigram support for Full-Text Search ] ]]
    pg_upgrade [[ description = [ Command line utility to upgrade clusters between major versions ] ]]
    pgcrypto [[ description = [ Extension with cryptographic (hashing, {de,en}cryption, (de)compression etc) functions ] ]]
    python [[ description = [ Support for PL/Python (only the \"untrusted\" version) server-side programming language ] ]]
    readline [[ description = [ Used only by the client psql for history control and autocomplete funcionality ] ]]
    ssl
    tablefunc [[ description = [ Extension with some set returning functions (normal_rand, crosstab variations and connectby) ] ]]
    tcl [[ description = [ Support for both PL/Tcl and PL/TclU server-side programming languages ] ]]
    xml [[ description = [ Add core support for XML data type ] ]]
"

# The contrib directory is somewhat messy.
# It contains server-side administrative tools (usually very tightly coupled
# to the internal API and may or may not need a LOAD command in the db to be
# used), extensions (each versioned independently, loosely coupled to the
# internal API and needing a CREATE EXTENSION command in the db to be used),
# command line utilities (not coupled to the internal API, in fact, upstream
# recommends using the most recent available always instead of using the
# respective versions on each cluster) and also others.
OPTIONS_IN_CONTRIB=(
    fuzzystrmatch
    hstore
    intarray
    lo
    'lo vacuumlo'
    ltree
    pg_trgm
    pg_upgrade
    pgcrypto
    tablefunc
)

DEPENDENCIES="
    build:
        sys-devel/gettext
        sys-devel/flex
    build+run:
        group/postgres
        user/postgres
        ldap? ( net-directory/openldap )
        pam? ( sys-libs/pam )
        perl? ( dev-lang/perl:= )
        python? ( dev-lang/python:= )
        readline? ( sys-libs/readline )
        ssl? ( dev-libs/openssl )
        tcl? ( dev-lang/tcl:= )
        xml? (
            dev-libs/libxml2:=[>=2.6.23]
            dev-libs/libxslt
        )
"

DEFAULT_SRC_CONFIGURE_OPTION_WITHS=(
    # 'kerberos krb5'
    ldap pam perl python readline 'ssl openssl' tcl 'xml libxml' 'xml libxslt'
)
DEFAULT_SRC_CONFIGURE_PARAMS=(
    --hates=docdir
    --enable-nls
    --with-system-tzdata=/usr/share/zoneinfo
    --with-zlib
)

postgresql_pkg_pretend() {
    if [[ -z ${POSTGRESQL_MAJOR_UPGRADE} ]] && has_version --root ${CATEGORY}/${PN} && \
        ! has_version --root ${CATEGORY}/${PN}[=${PSQL_MAJOR_VERSION}*] ; then
        ewarn "To install a different major version of PostgreSQL, you have to dump/reload your database."
        ewarn "When you've done this, please set 'POSTGRESQL_MAJOR_UPGRADE=YesPlease', to continue the upgrade."
        ewarn "For more information visit http://www.postgresql.org/support/versioning."
        die "Dump your databases before doing a major version upgrade of PostgreSQL."
    fi

    if [[ -f "${ROOT}"/etc/tmpfiles.d/${PN}.conf ]] ; then
        ewarn "The configuration file /etc/tmpfiles.d/${PN}.conf has been moved to"
        ewarn "/usr/${LIBDIR}/tmpfiles.d/${PN}.conf and can be safely removed after upgrade"
        ewarn "if you did not make any changes to it."
    fi

    # Pending genesis integration:
    # Upgrading to any version requires starting/stopping the PostgreSQL server.
}

postgresql_src_prepare() {
    default
    # move CREATE TABLESPACE test (which is meant to fail) to ${WORK}
    edo sed -e "s:/no/such/location:${WORK}&:" -i src/test/regress/{input,output}/tablespace.source
}

postgresql_src_emake_contrib_one() {
    edo pushd "contrib/$1"
    emake DESTDIR="${IMAGE}" $2
    edo popd
}

postgresql_src_emake_contrib() {
    for o in "${OPTIONS_IN_CONTRIB[@]}"; do
        option $o || continue
        local c=$(option $o)
        postgresql_src_emake_contrib_one ${c:-$o} $1
    done

    # most people want these built into the server but they only realize
    # it in the worst times, so let's get them ready upfront
    postgresql_src_emake_contrib_one adminpack $1
    postgresql_src_emake_contrib_one pg_stat_statements $1
    postgresql_src_emake_contrib_one pg_upgrade_support $1
    postgresql_src_emake_contrib_one pgrowlocks $1
}

postgresql_src_compile() {
    default

    postgresql_src_emake_contrib
}

# XXX: See http://wiki.postgresql.org/wiki/Detailed_installation_guides
# postgresql_pkg_config()

postgresql_src_install() {
    default

    if option systemd; then
        install_systemd_files
        insinto /usr/${LIBDIR}/tmpfiles.d
        hereins postgresql.conf <<EOF
d /run/postgresql 0770 postgres postgres
EOF
    fi

    postgresql_src_emake_contrib install
}

postgresql_src_test() {
    esandbox allow_net 'unix:/tmp/.s.PGSQL.*'
    esandbox allow_net --connect 'unix:/tmp/.s.PGSQL.*'

    default

    esandbox allow_net "unix:${WORK}/contrib/pg_upgrade/.s.PGSQL.*"
    esandbox allow_net --connect "unix:${WORK}/contrib/pg_upgrade/.s.PGSQL.*"
    postgresql_src_emake_contrib check
    esandbox disallow_net "unix:${WORK}/contrib/pg_upgrade/.s.PGSQL.*"
    esandbox disallow_net --connect "unix:${WORK}/contrib/pg_upgrade/.s.PGSQL.*"

    esandbox disallow_net 'unix:/tmp/.s.PGSQL.*'
    esandbox disallow_net --connect 'unix:/tmp/.s.PGSQL.*'
}

