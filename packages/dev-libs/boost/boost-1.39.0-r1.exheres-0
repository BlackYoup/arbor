# Copyright 2008, 2009 Ingmar Vanhassel <ingmar@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

MY_PNV=${PN}_$(ever replace_all '_')

require cmake

SUMMARY="Boost Libraries for C++"
HOMEPAGE="http://www.boost.org/"
DOWNLOADS="mirror://sourceforge/${PN}/${MY_PNV}.tar.bz2"

LICENCES="freedist Boost-1.0"
SLOT="0"
PLATFORMS="~amd64 ~x86"
MYOPTIONS="debug doc"

# All tests are slow, run only slow tests
# RESTRICT="test"

DEPENDENCIES="
    build:
        doc? (
            app-arch/unzip      [[ note = [ tools/build/CMake/BoostDocs.cmake ] ]]
            app-doc/doxygen     [[ note = [ tools/build/CMake/BoostDocs.cmake ] ]]
            dev-libs/libxslt    [[ note = [ tools/build/CMake/BoostDocs.cmake ] ]]
        )   [[ note = [ tools/build/CMake/BoostDocs.cmake ] ]]
    build+run:
        dev-lang/python:=
        dev-libs/expat
        dev-libs/icu
"


REMOTE_IDS="freshmeat:${PN}"
UPSTREAM_CHANGELOG="${HOMEPAGE}/users/news/version_${PV//./_}"

WORK="${WORKBASE}/${PN}_${PV//./_}"

DEFAULT_SRC_PREPARE_PATCHES=(
    "${FILES}/${PNV}-Fix-compilation-when-fno-exceptions-is-used.patch"
    "${FILES}/${PNV}-accumulators-example.patch"
    "${FILES}/${PNV}-libdir.patch"
)

CMAKE_SRC_CONFIGURE_PARAMS=(
    -DCMAKE_IS_EXPERIMENTAL=YES_I_KNOW
    -DBUILD_BCP:BOOL=FALSE # Fails with undefined references to 'main'
    -DBUILD_SINGLE_THREADED:BOOL=TRUE
    -DBUILD_STATIC:BOOL=FALSE
    -DMPI_FOUND:BOOL=FALSE # Avoid automagic dependency
)
CMAKE_SRC_CONFIGURE_OPTION_BUILDS=(
    DEBUG
    'doc DOCUMENTATION'
    'doc DOCUMENTATION_HTML'
)

src_prepare() {
    default

    sed -e '/BOOST_VERSION_MINOR/s/38/39/' -i CMakeLists.txt || die "Couldn't fix version"
}

src_compile() {
    pushd "${ECMAKE_BUILD_DIR}" || die "Could not enter ${PN}_build"

    # See https://svn.boost.org/trac/boost/ticket/2189
    emake modularize

    cmake_src_compile
}

# FIXME https://svn.boost.org/trac/boost/wiki/CMakeTesting
# Some tests need static libs
# cmake -DBUILD_TESTING:BOOL=TRUE fails with CMake 2.6.4
# src_test_expensive() { ctest ; }

src_install() {
    cmake_src_install

    rmdir "${IMAGE}"/usr/include/boost/interprocess/containers/detail || die "Couldn't nuke empty dir"

    if option doc ; then
        # FIXME Should really be handled by boosts buildsystem
        local f
        find doc/ libs/ -depth -iname 'test' -o -iname 'src' -o -iname 'CMakeLists.txt' -o -iname '*.cmake' -o -iname 'Jamfile.v2' -o -iname 'proj' -o -iname '*.vcproj' | while read f ; do
            echo "rm -r ${f}"
            rm -r "${f}" || die "Couldn't delete ${f}"
        done
        find . -type d -empty -delete || die "Couldn't remove empty directories"

        insinto /usr/share/doc/${PNVR}/html
        doins -r doc libs more people wiki

        dosym /usr/include/${PN} /usr/share/doc/${PNVR}/html/${PN}
    fi
}

