# Copyright 2007 Bryan Ã˜stergaard
# Distributed under the terms of the GNU General Public License v2

require multiarch [ in_tree_build=true ]

SUMMARY="Open source SSL and TLS implementation and cryptographic library"
HOMEPAGE="http://www.openssl.org"
DOWNLOADS="${HOMEPAGE}/source/${PNV}.tar.gz"

REMOTE_IDS="freecode:${PN}"

UPSTREAM_CHANGELOG="${HOMEPAGE}/news/changelog.html [[ lang = en ]]"
UPSTREAM_DOCUMENTATION="${HOMEPAGE}/docs/ [[ lang = en ]]"
UPSTREAM_RELEASE_NOTES="${HOMEPAGE}/news/announce.html [[ lang = en ]]"

LICENCES="${PN}"
SLOT="0"
PLATFORMS="~amd64 ~arm ~ia64 ~ppc64 ~x86"
MYOPTIONS="
    hosts:
        arm-exherbo-linux-gnueabi
        i686-pc-linux-gnu
        x86_64-pc-linux-gnu
"

DEPENDENCIES=""

DEFAULT_SRC_PREPARE_PATCHES=( "${FILES}/${PN}-0.9.8o-CFLAGS.patch" )
# Tests don't run in parallel
DEFAULT_SRC_TEST_PARAMS=( -j1 )

_openssl_host_os() {
    case "${host}" in
    arm-exherbo-linux-gnueabi)
        echo linux-armv4
    ;;
    i686-pc-linux-gnu)
        echo linux-elf
    ;;
    x86_64-pc-linux-gnu)
        echo linux-x86_64
    ;;
    *)
        die "unknown OpenSSL host/os for ${host}"
    ;;
    esac
}

perform_multiarch_configure() {
    local host_cflags_var=${host//-/_}_CFLAGS
    local host_ldflags_var=${host//-/_}_LDFLAGS

    AR=${host}-ar                   \
    CC=${host}-gcc                  \
    RANLIB=${host}-ranlib           \
    CFLAGS=${!host_cflags_var}      \
    LDFLAGS=${!host_ldflags_var}    \
        edo ${WORK}/Configure $(_openssl_host_os) \
            --test-sanity

    AR=${host}-ar                   \
    CC=${host}-gcc                  \
    RANLIB=${host}-ranlib           \
    CFLAGS=${!host_cflags_var}      \
    LDFLAGS=${!host_ldflags_var}    \
        edo ${WORK}/Configure $(_openssl_host_os) \
            --prefix=/usr/${host} --openssldir=/etc/ssl shared threads
}

perform_multiarch_compile() {
    # TODO(compnerd) fix parallel build
    emake -j1 LIBDIR=lib MANDIR=/usr/share/man
}

perform_multiarch_install() {
    emake -j1 INSTALL_PREFIX="${IMAGE}" LIBDIR=lib MANDIR=/usr/share/man install
}

src_install() {
    multiarch_src_install
    keepdir /etc/ssl/{certs,private}
    emagicdocs
}

