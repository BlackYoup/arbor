Source: Upstream
Upstream: Yes
Reason: Build with SQLite 3.6.17

From 3e2d5fa4ac549a04c8620a55796c66d7217251ca Mon Sep 17 00:00:00 2001
From: dajobe <dajobe@27353237-cb09-0410-ac87-bdc2a03cb76d>
Date: Wed, 12 Aug 2009 22:10:02 +0000
Subject: [PATCH] Change define SQLITE_API to REDLAND_SQLITE_API to allow redland to
 compile with sqlite 3.6.17 or newer where the SQLITE_API macro is
 defined.  Thanks to Samuli Suominen for the report and fix.

git-svn-id: http://svn.librdf.org/repository/librdf/trunk@15404 27353237-cb09-0410-ac87-bdc2a03cb76d
---
 configure.ac             |    2 +-
 src/rdf_storage_sqlite.c |   80 +++++++++++++++++++++++-----------------------
 src/win32_rdf_config.h   |    2 +-
 3 files changed, 42 insertions(+), 42 deletions(-)

diff --git a/configure.ac b/configure.ac
index 9cc5abf..f754a34 100644
--- a/configure.ac
+++ b/configure.ac
@@ -675,7 +675,7 @@ if test "X$sqlite_api_version" != Xno ; then
     SQLITE_CONFIG="$PKG_CONFIG sqlite"
   fi
   sqlite_version=`$SQLITE_CONFIG --modversion 2>/dev/null`
-  AC_DEFINE_UNQUOTED(SQLITE_API, $sqlite_api_version, [SQLite API version])
+  AC_DEFINE_UNQUOTED(REDLAND_SQLITE_API, $sqlite_api_version, [SQLite API version])
 
   storages_available="$storages_available sqlite($sqlite_version)"
   sqlite_storage_available=yes
diff --git a/src/rdf_storage_sqlite.c b/src/rdf_storage_sqlite.c
index 9b0a009..30c6f15 100644
--- a/src/rdf_storage_sqlite.c
+++ b/src/rdf_storage_sqlite.c
@@ -45,7 +45,7 @@
 #include <rdf_storage.h>
 
 
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
 #include <sqlite3.h>
 #define sqlite_DB sqlite3
 #define sqlite_STATEMENT sqlite3_stmt
@@ -57,7 +57,7 @@
 #define sqlite_last_insert_rowid sqlite3_last_insert_rowid
 #endif
 
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
 #include <sqlite.h>
 #define sqlite_DB sqlite
 #define sqlite_STATEMENT sqlite_vm
@@ -68,11 +68,11 @@
 #endif
 
 
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
   #define GET_COLUMN_VALUE_TEXT(vm, col) sqlite3_column_text(vm, col)
   #define GET_COLUMN_VALUE_INT(vm, col) sqlite3_column_int(vm, col)
 #endif
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
   #define GET_COLUMN_VALUE_TEXT(vm, col) (unsigned char*)pazValue[col]
   #define GET_COLUMN_VALUE_INT(vm, col) atoi(pazValue[col])
 #endif
@@ -791,7 +791,7 @@ librdf_storage_sqlite_open(librdf_storage* storage, librdf_model* model)
   librdf_storage_sqlite_instance* context=(librdf_storage_sqlite_instance*)storage->instance;
   int rc=SQLITE_OK;
   char *errmsg=NULL;
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
   int mode=0;
 #endif
   int db_file_exists=0;
@@ -804,13 +804,13 @@ librdf_storage_sqlite_open(librdf_storage* storage, librdf_model* model)
   if(context->is_new && db_file_exists)
     unlink(context->name);
 
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
   context->db=NULL;
   rc=sqlite3_open(context->name, &context->db);
   if(rc != SQLITE_OK)
     errmsg=(char*)sqlite3_errmsg(context->db);
 #endif
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
   context->db=sqlite_open(context->name, mode, &errmsg);
   if(context->db == NULL)
     rc=SQLITE_ERROR;
@@ -819,7 +819,7 @@ librdf_storage_sqlite_open(librdf_storage* storage, librdf_model* model)
     librdf_log(storage->world, 0, LIBRDF_LOG_ERROR, LIBRDF_FROM_STORAGE, NULL,
                "SQLite database %s open failed - %s", 
                context->name, errmsg);
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
     sqlite_FREE(errmsg);
 #endif
     librdf_storage_sqlite_close(storage);
@@ -1279,7 +1279,7 @@ librdf_storage_sqlite_serialise(librdf_storage* storage)
 
   LIBRDF_DEBUG2("SQLite prepare '%s'\n", request);
 
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
   status=sqlite3_prepare(context->db,
                          (const char*)request,
                          raptor_stringbuffer_length(sb),
@@ -1288,7 +1288,7 @@ librdf_storage_sqlite_serialise(librdf_storage* storage)
   if(status != SQLITE_OK)
     errmsg=(char*)sqlite3_errmsg(context->db);
 #endif
-#if SQLITE_API == 2  
+#if REDLAND_SQLITE_API == 2  
   status=sqlite_compile(context->db,
                         (const char*)request,
                         &scontext->zTail,
@@ -1328,7 +1328,7 @@ librdf_storage_sqlite_get_next_common(librdf_storage_sqlite_instance* scontext,
                                       librdf_statement **statement,
                                       librdf_node **context_node) {
   int status=SQLITE_BUSY;
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
   int pN;
   const char **pazValue;   /* Column data */
   const char **pazColName; /* Column names and datatypes */
@@ -1342,10 +1342,10 @@ librdf_storage_sqlite_get_next_common(librdf_storage_sqlite_instance* scontext,
    * SQLITE_MISUSE.
   */
   do {
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
     status=sqlite3_step(vm);
 #endif
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
     status=sqlite_step(vm, &pN, &pazValue, &pazColName);
 #endif
     if(status == SQLITE_BUSY) {
@@ -1479,12 +1479,12 @@ librdf_storage_sqlite_get_next_common(librdf_storage_sqlite_instance* scontext,
   if(status == SQLITE_ERROR) {
     char *errmsg=NULL;
 
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
     status=sqlite3_finalize(vm);
     if(status != SQLITE_OK)
       errmsg=(char*)sqlite3_errmsg(scontext->db);
 #endif
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
     status=sqlite_finalize(vm, &errmsg);
 #endif
     if(status != SQLITE_OK) {
@@ -1492,7 +1492,7 @@ librdf_storage_sqlite_get_next_common(librdf_storage_sqlite_instance* scontext,
                  0, LIBRDF_LOG_ERROR, LIBRDF_FROM_STORAGE, NULL,
                  "SQLite database %s finalize failed - %s (%d)", 
                  scontext->name, errmsg, status);
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
       sqlite_FREE(errmsg);
 #endif
     }
@@ -1583,12 +1583,12 @@ librdf_storage_sqlite_serialise_finished(void* context)
     char *errmsg=NULL;
     int status;
     
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
     status=sqlite3_finalize(scontext->vm);
     if(status != SQLITE_OK)
       errmsg=(char*)sqlite3_errmsg(scontext->sqlite_context->db);
 #endif
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
     status=sqlite_finalize(scontext->vm, &errmsg);
 #endif
     if(status != SQLITE_OK) {
@@ -1596,7 +1596,7 @@ librdf_storage_sqlite_serialise_finished(void* context)
                  0, LIBRDF_LOG_ERROR, LIBRDF_FROM_STORAGE, NULL,
                  "SQLite database %s finalize failed - %s (%d)", 
                  scontext->sqlite_context->name, errmsg, status);
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
       sqlite_FREE(errmsg);
 #endif
     }
@@ -1734,7 +1734,7 @@ librdf_storage_sqlite_find_statements(librdf_storage* storage,
 
   LIBRDF_DEBUG2("SQLite prepare '%s'\n", request);
 
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
   status=sqlite3_prepare(context->db,
                          (const char*)request,
                          raptor_stringbuffer_length(sb),
@@ -1743,7 +1743,7 @@ librdf_storage_sqlite_find_statements(librdf_storage* storage,
   if(status != SQLITE_OK)
     errmsg=(char*)sqlite3_errmsg(context->db);
 #endif
-#if SQLITE_API == 2  
+#if REDLAND_SQLITE_API == 2  
   status=sqlite_compile(context->db,
                         (const char*)request,
                         &scontext->zTail, 
@@ -1856,12 +1856,12 @@ librdf_storage_sqlite_find_statements_finished(void* context)
     char *errmsg=NULL;
     int status;
     
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
     status=sqlite3_finalize(scontext->vm);
     if(status != SQLITE_OK)
       errmsg=(char*)sqlite3_errmsg(scontext->sqlite_context->db);
 #endif
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
     status=sqlite_finalize(scontext->vm, &errmsg);
 #endif
     if(status != SQLITE_OK) {
@@ -1869,7 +1869,7 @@ librdf_storage_sqlite_find_statements_finished(void* context)
                  0, LIBRDF_LOG_ERROR, LIBRDF_FROM_STORAGE, NULL,
                  "SQLite database %s finalize failed - %s (%d)", 
                  scontext->sqlite_context->name, errmsg, status);
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
       sqlite_FREE(errmsg);
 #endif
     }
@@ -2180,7 +2180,7 @@ librdf_storage_sqlite_context_serialise(librdf_storage* storage,
 
   LIBRDF_DEBUG2("SQLite prepare '%s'\n", request);
 
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
   status=sqlite3_prepare(context->db,
                          (const char*)request,
                          raptor_stringbuffer_length(sb),
@@ -2189,7 +2189,7 @@ librdf_storage_sqlite_context_serialise(librdf_storage* storage,
   if(status != SQLITE_OK)
     errmsg=(char*)sqlite3_errmsg(context->db);
 #endif
-#if SQLITE_API == 2  
+#if REDLAND_SQLITE_API == 2  
   status=sqlite_compile(context->db,
                         (const char*)request,
                         &scontext->zTail,
@@ -2303,12 +2303,12 @@ librdf_storage_sqlite_context_serialise_finished(void* context)
     char *errmsg=NULL;
     int status;
     
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
     status=sqlite3_finalize(scontext->vm);
     if(status != SQLITE_OK)
       errmsg=(char*)sqlite3_errmsg(scontext->sqlite_context->db);
 #endif
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
     status=sqlite_finalize(scontext->vm, &errmsg);
 #endif
     if(status != SQLITE_OK) {
@@ -2316,7 +2316,7 @@ librdf_storage_sqlite_context_serialise_finished(void* context)
                  0, LIBRDF_LOG_ERROR, LIBRDF_FROM_STORAGE, NULL,
                  "SQLite database %s finalize failed - %s (%d)", 
                  scontext->sqlite_context->name, errmsg, status);
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
       sqlite_FREE(errmsg);
 #endif
     }
@@ -2360,7 +2360,7 @@ librdf_storage_sqlite_get_next_context_common(librdf_storage_sqlite_instance* sc
                                               sqlite_STATEMENT *vm,
                                               librdf_node **context_node) {
   int status=SQLITE_BUSY;
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
   int pN;
   const char **pazValue;   /* Column data */
   const char **pazColName; /* Column names and datatypes */
@@ -2374,10 +2374,10 @@ librdf_storage_sqlite_get_next_context_common(librdf_storage_sqlite_instance* sc
    * SQLITE_MISUSE.
   */
   do {
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
     status=sqlite3_step(vm);
 #endif
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
     status=sqlite_step(vm, &pN, &pazValue, &pazColName);
 #endif
     if(status == SQLITE_BUSY) {
@@ -2429,12 +2429,12 @@ librdf_storage_sqlite_get_next_context_common(librdf_storage_sqlite_instance* sc
   if(status == SQLITE_ERROR) {
     char *errmsg=NULL;
 
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
     status=sqlite3_finalize(vm);
     if(status != SQLITE_OK)
       errmsg=(char*)sqlite3_errmsg(scontext->db);
 #endif
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
     status=sqlite_finalize(vm, &errmsg);
 #endif
     if(status != SQLITE_OK) {
@@ -2442,7 +2442,7 @@ librdf_storage_sqlite_get_next_context_common(librdf_storage_sqlite_instance* sc
                  0, LIBRDF_LOG_ERROR, LIBRDF_FROM_STORAGE, NULL,
                  "SQLite database %s finalize failed - %s (%d)", 
                  scontext->name, errmsg, status);
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
       sqlite_FREE(errmsg);
 #endif
     }
@@ -2541,12 +2541,12 @@ librdf_storage_sqlite_get_contexts_finished(void* iterator)
     char *errmsg=NULL;
     int status;
     
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
     status=sqlite3_finalize(icontext->vm);
     if(status != SQLITE_OK)
       errmsg=(char*)sqlite3_errmsg(icontext->sqlite_context->db);
 #endif
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
     status=sqlite_finalize(icontext->vm, &errmsg);
 #endif
     if(status != SQLITE_OK) {
@@ -2554,7 +2554,7 @@ librdf_storage_sqlite_get_contexts_finished(void* iterator)
                  0, LIBRDF_LOG_ERROR, LIBRDF_FROM_STORAGE, NULL,
                  "SQLite database %s finalize failed - %s (%d)", 
                  icontext->sqlite_context->name, errmsg, status);
-#if SQLITE_API == 2
+#if REDLAND_SQLITE_API == 2
       sqlite_FREE(errmsg);
 #endif
     }
@@ -2619,7 +2619,7 @@ librdf_storage_sqlite_get_contexts(librdf_storage* storage)
 
   LIBRDF_DEBUG2("SQLite prepare '%s'\n", request);
 
-#if SQLITE_API == 3
+#if REDLAND_SQLITE_API == 3
   status=sqlite3_prepare(context->db,
                          (const char*)request,
                          raptor_stringbuffer_length(sb),
@@ -2628,7 +2628,7 @@ librdf_storage_sqlite_get_contexts(librdf_storage* storage)
   if(status != SQLITE_OK)
     errmsg=(char*)sqlite3_errmsg(context->db);
 #endif
-#if SQLITE_API == 2  
+#if REDLAND_SQLITE_API == 2  
   status=sqlite_compile(context->db,
                         (const char*)request,
                         &icontext->zTail,
diff --git a/src/win32_rdf_config.h b/src/win32_rdf_config.h
index 909ad45..7f0d553 100644
--- a/src/win32_rdf_config.h
+++ b/src/win32_rdf_config.h
@@ -249,7 +249,7 @@ extern "C" {
 #define SIZEOF_UNSIGNED_LONG_LONG 8
 
 /* SQLite API version */
-#define SQLITE_API 3
+#define REDLAND_SQLITE_API 3
 
 /* Define to 1 if you have the ANSI C header files. */
 #define STDC_HEADERS 1
-- 
1.6.5.1.163.gf46a2

