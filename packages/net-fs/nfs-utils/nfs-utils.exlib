# Copyright 2008-2012 Wulf C. Krueger <philantrop@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require sourceforge [ project=nfs ] systemd-service

export_exlib_phases pkg_pretend src_install pkg_postinst

SUMMARY="NFS client and server daemons"
DESCRIPTION="
nfs-utils provides the required support programs for using the Linux kernel's NFS
support, either as a client or as a server (or as both).
"

BUGS_TO="philantrop@exherbo.org"
REMOTE_IDS="freecode:${PN}"

LICENCES="GPL-2"
SLOT="0"
MYOPTIONS="
    baselayout
    caps
    gss [[ description = [ Enable the Generic Security Services Application Program Interface  ] ]]
    ipv6
    nfsv4 [[ description = [ Enable support for NFSv4, including 4.1 ] ]]
    tcpd
"
# FIXME: kerberos

# The test were broken in 1.2.6.
RESTRICT="test"

DEPENDENCIES="
    build+run:
        net-libs/libtirpc
        sys-apps/keyutils
        sys-apps/util-linux[>=2.20]
        sys-fs/e2fsprogs[>=1.40.9]
        caps? ( sys-libs/libcap )
        gss? ( net-libs/libgssglue )
        nfsv4? (
                dev-db/sqlite:3
                dev-libs/libevent[>=1.0b]
                net-libs/libnfsidmap[>=0.16]
                sys-fs/lvm2
        )
        tcpd? ( sys-apps/tcp-wrappers[>=7.6] )
    run:
        net-nds/rpcbind
"

DEFAULT_SRC_PREPARE_PATCHES=( "${FILES}"/${PN}-1.2.2-cpp_path.patch )

DEFAULT_SRC_CONFIGURE_PARAMS=(
    --mandir=/usr/share/man
    --enable-largefile
    --enable-libmount-mount
    --enable-mount
    --enable-mountconfig
    --enable-tirpc
    --with-statduser=nobody
    --with-statedir=/var/lib/nfs
)

DEFAULT_SRC_CONFIGURE_OPTION_WITHS=( "tcpd tcp-wrappers" )

DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=(
    caps
    gss
    ipv6
    nfsv4
    "nfsv4 nfsv41"
    "nfsv4 nfsdcld"
)

DEFAULT_SRC_INSTALL_EXTRA_DOCS=( KNOWNBUGS NEW )
DEFAULT_SRC_INSTALL_EXTRA_SUBDIRS=( linux-nfs )

nfs-utils_pkg_pretend() {
    if [[ -f "${ROOT}"/etc/tmpfiles.d/${PN}.conf ]] ; then
        ewarn "The configuration file /etc/tmpfiles.d/${PN}.conf has been moved to"
        ewarn "/usr/${LIBDIR}/tmpfiles.d/${PN}.conf and can be safely removed after upgrade"
        ewarn "if you did not make any changes to it."
    fi
}

nfs-utils_src_install() {
    dodir /sbin

    default

    install_systemd_files
    option systemd && ! option gss && edo rm "${IMAGE}"/${SYSTEMDSYSTEMUNITDIR}/rpcgssd.service

    if option systemd; then
        insinto /usr/${LIBDIR}/tmpfiles.d
        hereins ${PN}.conf <<EOF
d /var/lib/nfs/rpc_pipefs 0755 root root
d /var/lib/nfs/v4recovery 0755 root root
d /var/lib/nfs/v4root 0755 root root
EOF
    fi

    # Don't overwrite existing xtab/etab, install the original
    # versions somewhere safe. cf. pkg_postinst.
    dodir /usr/${LIBDIR}/nfs
    keepdir /var/lib/nfs/{sm,sm.bak}
    edo mv "${IMAGE}"/var/lib/nfs/* "${IMAGE}"/usr/${LIBDIR}/nfs
    keepdir /var/lib/nfs

    if option baselayout ; then
        local f list=""
        option nfsv4 && list+="rpc.idmapd"

        for f in nfs nfsmount rpc.statd ${list} ; do
            newinitd "${FILES}"/${f}.initd ${f}
        done
        newconfd "${FILES}"/nfs.confd nfs
    fi
}

nfs-utils_pkg_postinst() {
    # Install default xtab and friends if there's none existing.
    # In src_install we put them in /usr/${LIBDIR}/nfs for safe-keeping, but
    # the daemons actually use the files in /var/lib/nfs. cf. Gentoo bug 30486.
    local f
    for f in "${ROOT}"/usr/${LIBDIR}/nfs/*; do
        [[ -e ${ROOT}/var/lib/nfs/${f##*/} ]] && continue
        nonfatal edo cp -pPR "${f}" "${ROOT}"/var/lib/nfs/ || ewarn "cp failed"
    done
    [[ -e ${ROOT}/etc/exports ]] || touch "${ROOT}"/etc/exports
}

