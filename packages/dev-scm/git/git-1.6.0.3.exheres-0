# Copyright 2007-2008 Mike Kelly <pioto@exherbo.org>
# Copyright 2008 Ingmar Vanhassel <ingmar@exherbo.org>
# Distributed under the terms of the GPLv2

require multilib perl-module bash-completion common-metadata

PLATFORMS="~amd64 ~ppc64 ~x86"
MYOPTIONS="curl doc ipv6 threads vim-syntax webdav" # tk

DEPENDENCIES="
    build+run:
        dev-lang/perl:=
        dev-libs/openssl
        sys-libs/zlib
        curl? ( net-misc/curl )
        webdav? ( dev-libs/expat )
    run:
        dev-perl/Error
    post,suggested:
        dev-scm/cvsps               [[ description = [ Dependency for 'git cvsimport' ] ]]
        dev-lang/python:*           [[ description = [ Dependency for 'git p4' ] ]]
        dev-scm/subversion[perl]    [[ description = [ Dependency for 'git svn' ] ]]
        dev-perl/libwww-perl        [[ description = [ Dependency for 'git svn' ] ]]
        dev-perl/TermReadKey        [[ description = [ Dependency for 'git svn' ] ]]
        dev-perl/Authen-SASL        [[ description = [ Dependency for 'git send-email' ] ]]
        dev-perl/Net-SMTP-SSL       [[ description = [ Dependency for 'git send-email' ] ]]
        virtual/mta                 [[ description = [ Dependency for 'git send-email' ] ]]
        net-misc/openssh            [[ description = [ Enables support for ssh:// URIs ] ]]
        net-misc/rsync              [[ description = [ Enables support for rsync:// URIs ] ]]
        curl? ( net-misc/curl[ssl]  [[ description = [ Enables support for https:// URIs ] ]] )
"

#   tk? ( dev-lang/tk )

pkg_pretend() {
    if ! option curl && option webdav; then
        die 'OPTION="webdav" needs the "curl" option'
    fi
}

src_unpack() {
    unpack ${PNV}.tar.bz2
    cd "${WORK}"
    unpack ${PN}-manpages-${PV}.tar.bz2
    if option doc; then
        cd Documentation && unpack ${PN}-htmldocs-${PV}.tar.bz2
    fi
}

# No option: mozsha1/ppcsha1
src_configure() {
    myoptions+=" NO_TCLTK=YesPlease"
    option curl || myoptions+=" NO_CURL=YesPlease"
    option ipv6 || myoptions+=" NO_IPV6=YesPlease"
    option threads && myoptions+=" THREADED_DELTA_SEARCH=YesPlease"
    option webdav || myoptions+=" NO_EXPAT=YesPlease"
#   option tk || myoptions+=" NO_TCLTK=YesPlease"
}

myemake() {
    emake \
        DESTDIR="${IMAGE}" \
        prefix=/usr \
        gitexecdir=/usr/libexec/${PN} \
        template_dir=/usr/share/${PN}/templates \
        INSTALLSITELIB=${VENDOR_LIB} \
        CFLAGS="${CFLAGS} -Wall" \
        LDFLAGS="${LDFLAGS}" \
        ${myoptions} \
        "${@}"
}

src_compile() {
    perlinfo
    myemake all
}

src_test() {
    # default_src_test executes the wrong target, "make check", first
    myemake test
}

src_install() {
    myemake install

    doman man?/*

    dodoc README Documentation/{SubmittingPatches,CodingGuidelines}
    for d in / /howto/ /technical/ ; do
        docinto ${d}
        dodoc Documentation${d}*.txt
        if option doc; then
            dodir /usr/share/doc/${PNVR}/html/
            insinto /usr/share/doc/${PNVR}/html/
            doins Documentation${d}*.html
        fi
    done
    docinto /

    dobashcompletion contrib/completion/git-completion.bash

    if option vim-syntax; then
        insinto /usr/share/vim/vimfiles/syntax/
        doins "${WORK}"/contrib/vim/syntax/gitcommit.vim
        insinto /usr/share/vim/vimfiles/doc/
        newins "${WORK}"/contrib/vim/README gitcommit.txt
    fi

    exeinto /usr/libexec/${PN}
    doexe contrib/fast-import/git-p4
    dodoc contrib/fast-import/git-p4.txt

    dodir /usr/libexec/gitweb
    insinto /usr/libexec/gitweb
    doins gitweb/gitweb.{cgi,css} gitweb/git-{favicon,logo}.png
    fperms 0755 /usr/libexec/gitweb/gitweb.cgi
    docinto /gitweb/
    dodoc gitweb/{INSTALL,README}

    fixlocalpod

    keepdir /usr/share/${PN}/templates/branches
}

