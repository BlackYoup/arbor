# Copyright 2008 Markus Rothe <markus@unixforces.net>
# Distributed under the terms of the GNU General Public License v2

require multilib

SUMMARY="Skeleton filesystem layout"
HOMEPAGE="http://www.exherbo.org/"
SOURCES=""

LICENCES="GPL-2"
SLOT="0"
PLATFORMS="~amd64 ~x86"
MYOPTIONS=""

DEPENDENCIES=""

create_root_owned_directory() {
    if [[ ! -e "$1" ]]; then
        echo "mkdir -p ${1}"
        mkdir -p "${1}" || die "mkdir $1 failed"
        echo "chown root:root ${1}"
        chown root:root "${1}" || die "chown root:root $1 failed"
    fi
}

pkg_pretend() {
    local x
    if [[ ${SYMLINK_LIB} == "yes" ]]; then
        for x in {,/usr,/usr/local}/lib; do
            if [[ -e "${ROOT}${x}" && ! -L "${ROOT}${x}" ]]; then
                die "${x}: Expected a symlink but found a directory"
            fi
        done
    fi
}

pkg_postinst() {
    libdir="lib"
    [[ ${SYMLINK_LIB} == "yes" ]] && libdir=$(get_abi_LIBDIR "${DEFAULT_ABI}")

    local x
    # create directory structure. for readability leave out /usr and /var
    # structures and create them separately.
    for x in /bin /boot /dev{,/pts,/shm} /etc{,/opt} /home /${libdir} /mnt \
        /opt /proc /root /sbin /sys /tmp; do
            create_root_owned_directory "${ROOT}${x}"
    done

    # /usr structure
    for x in /usr{,/bin,/include,/${libdir},/sbin,/share,/src}; do
        create_root_owned_directory "${ROOT}${x}"
    done

    # /usr/local structure
    for x in /usr/local{,/bin,/etc,/games,/${libdir},/man,/sbin,/share}; do
        create_root_owned_directory "${ROOT}${x}"
    done

    # /var structure
    for x in /var{,/cache,/empty,/lib,/local,/lock,/log,/opt,/run,/spool,/tmp}; do
        create_root_owned_directory "${ROOT}${x}"
    done

    # create lib -> lib64 symlinks if needed
    if [[ ${SYMLINK_LIB} == yes ]]; then
        for x in {,/usr,/usr/local}/lib; do
            if [[ ! -e "${ROOT}${x}" ]]; then
                echo "ln -s ${libdir} ${ROOT}${x}"
                ln -s "${libdir}" "${ROOT}${x}" || die "creation of symlink ${x} failed"
            elif [[ ! -L "${ROOT}${x}" ]]; then
                die "${x}: Expected a symlink but found a directory"
            fi
        done
    fi

    chmod 0700 "${ROOT}"/root
    chmod 1777 "${ROOT}"/tmp
    chmod 1777 "${ROOT}"/var/lock
    chmod 1777 "${ROOT}"/var/tmp
}
