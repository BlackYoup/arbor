# Copyright 2008 Markus Rothe <markus@unixforces.net>
# Distributed under the terms of the GNU General Public License v2

require multilib

SUMMARY="Skeleton filesystem layout"
HOMEPAGE="http://www.exherbo.org/"
DOWNLOADS=""

LICENCES="GPL-2"
SLOT="0"
PLATFORMS="~amd64 ~ppc64 ~x86"
MYOPTIONS=""

DEPENDENCIES=""

create_root_owned_directory() {
    if [[ ! -e "${1}" ]]; then
        echo "mkdir -p ${1}"
        mkdir -p "${1}" || die "mkdir ${1} failed"
    fi
    echo "chown root:root ${1}"
    chown root:root "${1}" || die "chown root:root ${1} failed"
    echo "chmod ${2:-0755} ${1}"
    chmod ${2:-0755} "${1}" || die "chmod ${2:-0755} ${1} failed"
}

create_device_node() {
    local node=${1} major=${2} minor=${3} owner=${4} perms=${5}
    if [[ ! -e ${ROOT}dev/${node} ]]; then
        echo "mknod ${ROOT}dev/${node} c ${major} ${minor}"
        mknod "${ROOT}dev/${node}" c ${major} ${minor} || die "mknod /dev/${node} failed"
    fi
    echo "chown ${owner} ${ROOT}dev/${node}"
    chown ${owner} "${ROOT}dev/${node}" || die "chown /dev/${node} failed"
    echo "chmod ${perms} ${ROOT}dev/${node}"
    chmod ${perms} "${ROOT}dev/${node}" || die "chmod /dev/${node} failed"
}

src_install() {
    insinto /etc
    hereins exherbo-release <<EOF
Exherbo unreleased development version -- Get off our lawn!
EOF
}

pkg_pretend() {
    local x
    if [[ ${SYMLINK_LIB} == "yes" ]]; then
        for x in {,/usr,/usr/local}/lib; do
            if [[ -e "${ROOT}${x}" && ! -L "${ROOT}${x}" ]]; then
                die "${x}: Expected a symlink but found a directory"
            fi
        done
    fi
}

pkg_postinst() {
    libdir=$(get_libdir)

    local x
    # create directory structure. for readability leave out /usr and /var
    # structures and create them separately.
    for x in bin boot dev{,/pts,/shm} etc{,/opt} home ${libdir} mnt \
        opt proc sbin sys; do
            create_root_owned_directory "${ROOT}${x}"
    done

    # create device nodes
    create_device_node console 5 1 root:root 0600
    create_device_node null    1 3 root:root 0666

    # /usr structure
    for x in usr{,/bin,/include,/${libdir},/sbin,/share,/src}; do
        create_root_owned_directory "${ROOT}${x}"
    done

    # /usr/local structure
    for x in usr/local{,/bin,/etc,/${libdir},/man,/sbin,/share{,/man}}; do
        create_root_owned_directory "${ROOT}${x}"
    done

    # /var structure
    for x in var{,/cache,/empty,/lib,/local,/lock,/log,/run,/spool}; do
        create_root_owned_directory "${ROOT}${x}"
    done

    # directories with special permissions
    create_root_owned_directory "${ROOT}root" 0700
    for x in var/{lock,tmp} tmp; do
        create_root_owned_directory "${ROOT}${x}" 1777
    done

    # create lib -> lib64 symlinks if needed
    if [[ ${SYMLINK_LIB} == yes ]]; then
        for x in {,usr/,usr/local/}lib; do
            if [[ ! -e "${ROOT}${x}" ]]; then
                echo "ln -s ${libdir} ${ROOT}${x}"
                ln -s "${libdir}" "${ROOT}${x}" || die "creation of symlink ${x} failed"
            elif [[ ! -L "${ROOT}${x}" ]]; then
                die "${x}: Expected a symlink but found a directory"
            fi
        done
    fi
}
