Source: Bo Ã˜rsted Andresen <zlin@exherbo.org>
Upstream: No.
Reason: This crappy code causes cwd to be added to SANDBOX_WRITE when not using portage
	(specifically when PORTAGE_TMPDIR isn't set) which is rather unfortunate. Paludis
	already adds builddir to SANDBOX_WRITE so it isn't required at all.

diff --git a/libsbutil/sbutil.h b/libsbutil/sbutil.h
index d45ee09..a02c4a5 100644
--- a/libsbutil/sbutil.h
+++ b/libsbutil/sbutil.h
@@ -37,7 +37,6 @@
 #define LIB_NAME               "libsandbox.so"
 #define BASHRC_NAME            "sandbox.bashrc"
 #define TMPDIR                 "/tmp"
-#define PORTAGE_TMPDIR         "/var/tmp/portage"
 #define SANDBOX_LOG_LOCATION   "/var/log/sandbox"
 #define LOG_FILE_PREFIX        "/sandbox-"
 #define DEBUG_LOG_FILE_PREFIX  "/sandbox-debug-"
@@ -47,7 +46,6 @@
 
 #define ENV_EBUILD             "EBUILD"
 #define ENV_TMPDIR             "TMPDIR"
-#define ENV_PORTAGE_TMPDIR     "PORTAGE_TMPDIR"
 
 #define ENV_BASH_ENV           "BASH_ENV"
 
diff --git a/src/environ.c b/src/environ.c
index e1002cc..e62722e 100644
--- a/src/environ.c
+++ b/src/environ.c
@@ -202,9 +202,6 @@ static int setup_cfg_vars(struct sandbox_info_t *sandbox_info)
 
 	if (-1 == setup_access_var(ENV_SANDBOX_WRITE))
 		return -1;
-	if ((NULL == getenv(ENV_SANDBOX_WRITE)) &&
-	    (NULL != sandbox_info->work_dir))
-		setenv(ENV_SANDBOX_WRITE, sandbox_info->work_dir, 1);
 
 	if (-1 == setup_access_var(ENV_SANDBOX_PREDICT))
 		return -1;
diff --git a/src/sandbox.c b/src/sandbox.c
index 3c782ca..f16a361 100644
--- a/src/sandbox.c
+++ b/src/sandbox.c
@@ -28,18 +28,6 @@ static const char sandbox_footer[] = "------------------------------------------
 
 static int setup_sandbox(struct sandbox_info_t *sandbox_info, bool interactive)
 {
-	if (NULL != getenv(ENV_PORTAGE_TMPDIR)) {
-		/* Portage handle setting SANDBOX_WRITE itself. */
-		sandbox_info->work_dir[0] = '\0';
-	} else {
-		if (NULL == getcwd(sandbox_info->work_dir, SB_PATH_MAX)) {
-			sb_pwarn("failed to get current directory");
-			return -1;
-		}
-		if (interactive)
-			setenv(ENV_SANDBOX_WORKDIR, sandbox_info->work_dir, 1);
-	}
-
 	if (-1 == get_tmp_dir(sandbox_info->tmp_dir)) {
 		sb_pwarn("failed to get tmp_dir");
 		return -1;
@@ -267,11 +255,6 @@ int main(int argc, char **argv)
 	/* set up the required environment variables */
 	dputs("Setting up the required environment variables.");
 
-	/* If not in portage, cd into it work directory */
-	if ('\0' != sandbox_info.work_dir[0])
-		if (chdir(sandbox_info.work_dir))
-			sb_perr("chdir(%s) failed", sandbox_info.work_dir);
-
 	/* Setup the child environment stuff.
 	 * XXX:  We free this in spawn_shell(). */
 	sandbox_environ = setup_environ(&sandbox_info, print_debug);
diff --git a/src/sandbox.h b/src/sandbox.h
index e25a206..41bfe66 100644
--- a/src/sandbox.h
+++ b/src/sandbox.h
@@ -18,7 +18,6 @@ struct sandbox_info_t {
 	char sandbox_debug_log[SB_PATH_MAX];
 	char sandbox_lib[SB_PATH_MAX];
 	char sandbox_rc[SB_PATH_MAX];
-	char work_dir[SB_PATH_MAX];
 	char tmp_dir[SB_PATH_MAX];
 	char *home_dir;
 };

