Source: Bo Ã˜rsted Andresen <zlin@exherbo.org>
Upstream: No.
Reason: This crappy code causes cwd to be added to SANDBOX_WRITE when not using portage
	(specifically when PORTAGE_TMPDIR isn't set) which is rather unfortunate. Paludis
	already adds builddir to SANDBOX_WRITE so it isn't required at all.

diff -ur sandbox-1.2.18.1/src/sandbox.c sandbox-1.2.18.1/src/sandbox.c
--- sandbox-1.2.18.1/src/sandbox.c	2005-12-05 14:15:45.000000000 +0100
+++ sandbox-1.2.18.1/src/sandbox.c	2008-05-26 17:51:12.000000000 +0200
@@ -33,7 +33,6 @@
 	char sandbox_debug_log[SB_PATH_MAX];
 	char sandbox_lib[SB_PATH_MAX];
 	char sandbox_rc[SB_PATH_MAX];
-	char work_dir[SB_PATH_MAX];
 	char var_tmp_dir[SB_PATH_MAX];
 	char tmp_dir[SB_PATH_MAX];
 	char *home_dir;
@@ -46,16 +45,6 @@
 
 int sandbox_setup(struct sandbox_info_t *sandbox_info)
 {
-	if (NULL != getenv(ENV_PORTAGE_TMPDIR)) {
-		/* Portage handle setting SANDBOX_WRITE itself. */
-		sandbox_info->work_dir[0] = '\0';
-	} else {
-		if (NULL == getcwd(sandbox_info->work_dir, SB_PATH_MAX)) {
-			perror("sandbox:  Failed to get current directory");
-			return -1;
-		}
-	}
-	
 	/* Do not resolve symlinks, etc .. libsandbox will handle that. */
 	if (1 != is_dir(VAR_TMPDIR, 1)) {
 		perror("sandbox:  Failed to get var_tmp_dir");
@@ -176,7 +165,7 @@
 
 	/* these could go into make.globals later on */
 	retval = snprintf(buf, SB_BUF_LEN,
-		 "%s:%s/.gconfd/lock:%s/.bash_history:%s:%s:%s:%s",
+		 "%s:%s/.gconfd/lock:%s/.bash_history:%s:%s:%s",
 		 "/dev/zero:/dev/null:/dev/fd:/proc/self/fd:/dev/pts/:"
 		 "/dev/vc/:/dev/pty:/dev/tty:/dev/tts:/dev/console:"
 		 "/dev/shm:/dev/shm/ngpt:/var/log/scrollkeeper.log:"
@@ -184,8 +173,6 @@
 		 "/usr/lib32/conftest:/usr/lib64/conftest:"
 		 "/usr/tmp/cf:/usr/lib/cf:/usr/lib32/cf:/usr/lib64/cf",
 		 sandbox_info->home_dir, sandbox_info->home_dir,
-		 sandbox_info->work_dir[0] != '\0' ? sandbox_info->work_dir
-		                                   : "",
 		 sandbox_info->tmp_dir, sandbox_info->var_tmp_dir,
 		 "/tmp/:/var/tmp/");
 	if (SB_BUF_LEN <= retval) {
@@ -469,10 +456,6 @@
 		exit(EXIT_FAILURE);
 	}
 
-	/* If not in portage, cd into it work directory */
-	if ('\0' != sandbox_info.work_dir[0])
-		chdir(sandbox_info.work_dir);
-
 	argv_bash = (char **)malloc(6 * sizeof(char *));
 	argv_bash[0] = strdup("/bin/bash");
 	argv_bash[1] = strdup("-rcfile");
