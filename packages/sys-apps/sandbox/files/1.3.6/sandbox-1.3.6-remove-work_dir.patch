Source: Bo Ã˜rsted Andresen <zlin@exherbo.org>
Upstream: No.
Reason: This crappy code causes cwd to be added to SANDBOX_WRITE when not using portage
	(specifically when PORTAGE_TMPDIR isn't set) which is rather unfortunate. Paludis
	already adds builddir to SANDBOX_WRITE so it isn't required at all.

	The last hunk tries to source /etc/make.conf and /etc/make.globals
	during src_test which obviously fails without portage. We don't need it.

diff --git a/libsbutil/sbutil.h b/libsbutil/sbutil.h
index d45ee09..a02c4a5 100644
--- a/libsbutil/sbutil.h
+++ b/libsbutil/sbutil.h
@@ -37,7 +37,6 @@
 #define LIB_NAME               "libsandbox.so"
 #define BASHRC_NAME            "sandbox.bashrc"
 #define TMPDIR                 "/tmp"
-#define PORTAGE_TMPDIR         "/var/tmp/portage"
 #define SANDBOX_LOG_LOCATION   "/var/log/sandbox"
 #define LOG_FILE_PREFIX        "/sandbox-"
 #define DEBUG_LOG_FILE_PREFIX  "/sandbox-debug-"
@@ -47,7 +46,6 @@
 
 #define ENV_EBUILD             "EBUILD"
 #define ENV_TMPDIR             "TMPDIR"
-#define ENV_PORTAGE_TMPDIR     "PORTAGE_TMPDIR"
 
 #define ENV_BASH_ENV           "BASH_ENV"
 
diff --git a/src/environ.c b/src/environ.c
index e1002cc..e62722e 100644
--- a/src/environ.c
+++ b/src/environ.c
@@ -202,9 +202,6 @@ static int setup_cfg_vars(struct sandbox_info_t *sandbox_info)
 
 	if (-1 == setup_access_var(ENV_SANDBOX_WRITE))
 		return -1;
-	if ((NULL == getenv(ENV_SANDBOX_WRITE)) &&
-	    (NULL != sandbox_info->work_dir))
-		setenv(ENV_SANDBOX_WRITE, sandbox_info->work_dir, 1);
 
 	if (-1 == setup_access_var(ENV_SANDBOX_PREDICT))
 		return -1;
diff --git a/src/sandbox.c b/src/sandbox.c
index 3c782ca..f16a361 100644
--- a/src/sandbox.c
+++ b/src/sandbox.c
@@ -28,18 +28,6 @@ static const char sandbox_footer[] = "------------------------------------------
 
 static int setup_sandbox(struct sandbox_info_t *sandbox_info, bool interactive)
 {
-	if (NULL != getenv(ENV_PORTAGE_TMPDIR)) {
-		/* Portage handle setting SANDBOX_WRITE itself. */
-		sandbox_info->work_dir[0] = '\0';
-	} else {
-		if (NULL == getcwd(sandbox_info->work_dir, SB_PATH_MAX)) {
-			sb_pwarn("failed to get current directory");
-			return -1;
-		}
-		if (interactive)
-			setenv(ENV_SANDBOX_WORKDIR, sandbox_info->work_dir, 1);
-	}
-
 	if (-1 == get_tmp_dir(sandbox_info->tmp_dir)) {
 		sb_pwarn("failed to get tmp_dir");
 		return -1;
@@ -267,11 +255,6 @@ int main(int argc, char **argv)
 	/* set up the required environment variables */
 	dputs("Setting up the required environment variables.");
 
-	/* If not in portage, cd into it work directory */
-	if ('\0' != sandbox_info.work_dir[0])
-		if (chdir(sandbox_info.work_dir))
-			sb_perr("chdir(%s) failed", sandbox_info.work_dir);
-
 	/* Setup the child environment stuff.
 	 * XXX:  We free this in spawn_shell(). */
 	sandbox_environ = setup_environ(&sandbox_info, print_debug);
diff --git a/src/sandbox.h b/src/sandbox.h
index e25a206..41bfe66 100644
--- a/src/sandbox.h
+++ b/src/sandbox.h
@@ -18,7 +18,6 @@ struct sandbox_info_t {
 	char sandbox_debug_log[SB_PATH_MAX];
 	char sandbox_lib[SB_PATH_MAX];
 	char sandbox_rc[SB_PATH_MAX];
-	char work_dir[SB_PATH_MAX];
 	char tmp_dir[SB_PATH_MAX];
 	char *home_dir;
 };
--- a/data/sandbox.bashrc	2009-02-12 14:22:59.000000000 +0100
+++ b/data/sandbox.bashrc	2009-02-12 14:25:47.000000000 +0100
@@ -51,41 +51,6 @@
 		)
 	fi
 
-	# do ebuild environment loading ... detect if we're in portage
-	# build area or not ... uNF uNF uNF
-	#sbs_pdir=$(portageq envvar PORTAGE_TMPDIR)/portage/ #portageq takes too long imo
-	if [[ -z ${PORTAGE_TMPDIR} ]] ; then
-		sbs_gpdir=$( source /etc/make.globals && echo $PORTAGE_TMPDIR 2> /dev/null)
-		sbs_cpdir=$( source /etc/make.conf && echo $PORTAGE_TMPDIR 2> /dev/null)
-		[[ -z ${sbs_cpdir} ]] \
-			&& sbs_pdir=${sbs_gpdir} \
-			|| sbs_pdir=${sbs_cpdir}
-	else
-		sbs_pdir=${PORTAGE_TMPDIR}
-	fi
-	[[ -z ${sbs_pdir} ]] && sbs_pdir=/var/tmp
-	sbs_pdir=${sbs_pdir}/portage/
-
-	if [[ ${PWD:0:${#sbs_pdir}} == "${sbs_pdir}" ]] ; then
-		sbs_bdir=$(echo ${PWD:${#sbs_pdir}} | cut -d/ -f1)
-		sbs_tmpenvfile=${sbs_pdir}${sbs_bdir}/temp/environment
-		if [[ -e ${sbs_tmpenvfile} ]] ; then
-			echo "Found environment at ${sbs_tmpenvfile}"
-			printf " * Would you like to enter the portage environment ? "
-			read env
-			sbs_PREPWD=${PWD}
-			if [[ ${env} == "y" ]] ; then
-				# First try to source variables and export them ...
-				eval $(sed -e '/^[[:alnum:]_-]*=/s:^:export :' \
-				           -e '/^[[:alnum:]_-]* ()/Q' "${sbs_tmpenvfile}") 2>/dev/null
-				# Then grab everything (including functions)
-				source "${sbs_tmpenvfile}" 2> /dev/null
-				export SANDBOX_WRITE=${SANDBOX_WRITE}:${sbs_pdir}${sbs_bdir}:${sbs_pdir}/homedir
-			fi
-			PWD=${sbs_PREPWD}
-		fi
-	fi
-
 	unset sbs_gpdir sbs_cpdir sbs_pdir sbs_bdir sbs_tmpenvfile sbs_PREPWD env
 
 	cd "${PWD}"
