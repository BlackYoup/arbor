# Copyright 1999-2008 Ciaran McCreesh
# Distributed under the terms of the GNU General Public License v2

require python bash-completion flag-o-matic zsh-completion

SUMMARY="Paludis, the one true package mangler"
HOMEPAGE="http://paludis.pioto.org/"
DOWNLOADS="http://paludis.pioto.org/download/${PNV}.tar.bz2"

MYOPTIONS="doc python ruby vim-syntax
    gemcutter    [[ description = [ Enable Gemcutter-based support for ruby gems ] ]]
    pbin         [[ description = [ Experimental binary package support ] ]]
    pink         [[ description = [ Use an obnoxious girly colour scheme ] ]]
    search-index [[ description = [ Enable cave search --index ] ]]
    xml          [[ description = [ Enable parsing of xml files, for GLSA and metadata.xml support, only useful with Gentoo repositories ] ]]
"
LICENCES="GPL-2 vim-syntax? ( vim )"
SLOT="0"

DEPENDENCIES="
    build:
        app-doc/asciidoc
        app-text/xmlto
        dev-util/pkg-config
        doc? (
            app-doc/doxygen
            python? (
                dev-python/epydoc
                dev-python/Pygments
            )
            ruby? (
                dev-ruby/allison
                dev-ruby/syntax
            )
        )
    build+run:
        user/paludisbuild
        app-admin/eclectic
        app-shells/bash[>=4]
        dev-libs/pcre[>=7.8]
        sys-apps/file
        gemcutter? ( dev-libs/jansson[>=1.3] )
        pbin? (
            app-arch/libarchive[>=2.8.4][-xattr]
        )
        python? (
            dev-lang/python:=
            dev-libs/boost
        )
        ruby? ( dev-lang/ruby )
        search-index? ( dev-db/sqlite:3 )
        xml? ( dev-libs/libxml2[>=2.6] )
    run:
        net-misc/wget
        net-misc/rsync
        sys-apps/sydbox[>=0.6.2]
        bash-completion? (  app-shells/bash-completion[>=1.1] )
    post:
        vim-syntax? ( app-editors/vim-runtime:*[>=7] )"

pkg_setup() {
    replace-flags -Os -O2
}

src_configure() {
    local clients environments repositories
    clients=$(echo default accerso cave instruo | tr -s \  ,)
    environments="default"
    repositories=$(echo default accounts $(optionv gemcutter) repository | tr -s \  ,)

    econf \
        $(option_enable doc doxygen) \
        $(option doc && option python && echo '--enable-python-doc') \
        $(option doc && option ruby && echo '--enable-ruby-doc') \
        $(option_enable pbin pbins) \
        $(option_enable pink) \
        $(option_enable python) \
        $(option_enable ruby) \
        $(option_enable search-index) \
        $(option_enable vim-syntax vim ) \
        $(option_enable xml) \
        --with-vim-install-dir=/usr/share/vim/vimfiles \
        --enable-visibility \
        --with-clients=${clients} \
        --with-environments=${environments} \
        --with-repositories=${repositories} \
        --with-default-distribution=exherbo \
        --with-config-framework=eclectic \
        --hates=disable-silent-rules
}

src_compile() {
    # zsh and libtool hate each other
    unset path
    default
}

src_test() {
    # 'make --dry-run check' fails so don't use default here.
    if ! nonfatal emake check ; then
        eerror "Tests failed. Looking for files for you to add to your bug report..."
        find "${WORK}" -type f -name 'test-suite.log' -or -name '*.epicfail' | while read file ; do
            if [[ ${file} == *.log ]] ; then
                grep -q FAIL "${file}" || continue
            fi

            eerror "    ${file}"
        done
        die "Make check failed"
    fi
}

src_install() {
    default

    option python && python_bytecompile

    local bashcomp bashcompletions
    bashcompletions="accerso cave instruo"
    for bashcomp in ${bashcompletions}; do
        dobashcompletion bash-completion/"${bashcomp}" "${bashcomp}"
    done

    dozshcompletion "${WORK}"/zsh-completion/_cave
    keepdir /var/lib/exherbo/news
    edo rm -rf "${IMAGE}"/var/lib/gentoo
}

