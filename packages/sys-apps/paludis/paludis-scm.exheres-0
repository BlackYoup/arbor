# Copyright 1999-2008 Ciaran McCreesh
# Distributed under the terms of the GNU General Public License v2

require eutils bash-completion flag-o-matic

SUMMARY="paludis, the other package mangler"
HOMEPAGE="http://paludis.pioto.org/"
DOWNLOADS=""

SCM_REPOSITORY="git://git.pioto.org/paludis"
require scm-git

MYOPTIONS="cran doc glsa inquisitio pink python qa ruby vim-syntax"
LICENCES="GPL-2 vim-syntax? ( vim )"
SLOT="0"
PLATFORMS="~amd64 ~ia64 ~ppc64 ~x86"

DEPENDENCIES="
    build:
        dev-util/pkg-config
        sys-devel/autoconf:2.5
        sys-devel/automake:1.10
        doc? (
            app-doc/doxygen
            python? (
                python-doc/epydoc
                python-doc/pygments
            )
            ruby? (
                dev-ruby/allison
                dev-ruby/syntax
            )
        )
    build+run:
        >=app-admin/eselect-1.0.2
        >=app-admin/eselect-news-20071201
        >=app-shells/bash-3
        glsa? ( >=dev-libs/libxml2-2.6 )
        inquisitio? ( dev-libs/pcre++ )
        python? (
            dev-lang/python:=
            dev-libs/boost
        )
        qa? (
            app-crypt/gnupg
            >=dev-libs/libxml2-2.6
            dev-libs/pcre++
        )
        ruby? ( dev-lang/ruby )
    run:
        net-misc/wget
        net-misc/rsync
        sys-apps/sandbox
    post:
        vim-syntax? ( >=app-editors/vim-runtime-7:* )"

create-paludis-user() {
    enewgroup "paludisbuild"
    enewuser "paludisbuild" -1 -1 "/var/tmp/paludis" "paludisbuild"
}

pkg_setup() {
    replace-flags -Os -O2
    replace-flags -O3 -O2
    create-paludis-user
}

src_prepare() {
    default
    ./autogen.bash || die "autogen.bash failed"
}

src_configure() {
    local clients environments repositories
    clients=$(echo default accerso adjutrix cave importare $(optionv inquisitio ) \
        instruo paludis reconcilio | tr -s \  ,)
    environments="default"
    repositories=$(echo default unavailable unpackaged $(optionv cran ) | tr -s \  ,)
    econf \
        $(option_enable doc doxygen) \
        $(option doc && option python && echo '--enable-python-doc') \
        $(option doc && option ruby && echo '--enable-ruby-doc') \
        $(option_enable glsa) \
        $(option_enable pink) \
        $(option_enable qa) \
        $(option_enable ruby) \
        $(option_enable python) \
        $(option_enable vim-syntax vim ) \
        --with-vim-install-dir=/usr/share/vim/vimfiles \
        --enable-visibility \
        --enable-sandbox \
        --enable-threads \
        --with-clients=${clients} \
        --with-environments=${environments} \
        --with-repositories=${repositories} \
        --with-default-distribution=exherbo
}

src_test() {
    # Work around Sandbox bugs
    export PALUDIS_DO_NOTHING_SANDBOXY="sandbox sucks"
    export BASH_ENV=/dev/null

    # 'make --dry-run check' fails so don't use default here.
    # emake dies by default (making the if ! code unreachable), and nonfatal breaks e_repository_TEST
    echo make ${MAKEOPTS} check
    if ! make ${MAKEOPTS} check ; then
        eerror "Tests failed. Looking for files for you to add to your bug report..."
        find "${WORK}" -type f -name '*.epicfail' -or -name '*.log' | while read a ; do
            eerror "    $a"
        done
        die "Make check failed"
    fi
}

src_install() {
    default

    local bashcomp bashcompletions
    bashcompletions="accerso adjutrix
        importare $(optionv inquisitio) instruo
        $(optionq qa && echo qualudis) paludis reconcilio"
    for bashcomp in ${bashcompletions}; do
        dobashcompletion bash-completion/"${bashcomp}" "${bashcomp}"
    done
}

pkg_preinst() {
    create-paludis-user
}

pkg_postinst() {
    # Remove the symlink created by app-admin/eselect-news
    if [[ -L "${ROOT}/var/lib/paludis/news" ]] ; then
        rm "${ROOT}/var/lib/paludis/news"
    fi
}
