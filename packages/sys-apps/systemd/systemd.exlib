# Copyright 2010-2012 Wulf C. Krueger <philantrop@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

if ever is_scm ; then
    SCM_REPOSITORY="git://git.freedesktop.org/git/systemd/systemd.git"
    require scm-git
elif [[ ${PV} == 37 ]]; then
    DOWNLOADS="http://www.freedesktop.org/software/${PN}/${PNV}.tar.bz2"
else
    DOWNLOADS="http://www.freedesktop.org/software/${PN}/${PNV}.tar.xz"
fi

require autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ 1.11 ] ] alternatives bash-completion

export_exlib_phases pkg_pretend src_prepare src_install pkg_postinst

SUMMARY="${PN} is a(n) (init) system and session manager for Linux"
DESCRIPTION="
${PN} is a(n) (init) system and session manager for Linux. It provides aggressive
parallelization capabilities, uses socket and D-Bus activation for starting services,
offers on-demand starting of daemons, keeps track of processes using Linux cgroups,
supports snapshotting and restoring of the system state, maintains mount and
automount points and implements an elaborate transactional dependency-based service
control logic.
SysVinit compatibility is deactivated in our package because we don't want it nor
do we support it.
"
HOMEPAGE="http://www.freedesktop.org/wiki/Software/${PN}"
BUGS_TO="philantrop@exherbo.org"

LICENCES="GPL-2"
SLOT="0"
MYOPTIONS="
    acl
    bash-completion
    cryptsetup [[ description = [ Enable systemd's minimal cryptsetup unit generator ] ]]
    gtk [[ description = [ Build systemadm, the GTK+ GUI for systemd's services ] ]]
    plymouth [[ description = [ Enable Plymouth (graphical boot splash) integration ] ]]
    simple-net [[ description = [ Include an extremely simple service for static networking ] ]]
    tcpd
"

DEPENDENCIES="
    build:
        dev-libs/libxslt
        dev-util/intltool[>=0.40.0]
        dev-util/pkg-config[>=0.20]
        sys-devel/gettext
    build+run:
        app-arch/xz
        dev-libs/glib:2[>=2.26]
        dev-util/gperf
        sys-apps/dbus[>=1.4.0][systemd]
        sys-apps/skeleton-filesystem-layout
        sys-fs/udev[>=172][systemd]
        sys-libs/libcap
        sys-libs/pam[>=1.1.2]
        acl? ( sys-apps/acl )
        cryptsetup? ( sys-fs/cryptsetup )
        gtk? (
            base/libgee:1.0
            x11-libs/gtk+:2[>=2.20]
            x11-libs/libnotify[>=0.7.0]
        )
        plymouth? ( sys-boot/plymouth )
        tcpd? ( sys-apps/tcp-wrappers )
    run:
        sys-apps/coreutils
        sys-apps/kbd[>=1.15.2-r1]
        || ( sys-apps/sysvinit-tools sys-apps/sysvinit )
        sys-apps/util-linux[>=2.18_p20101120]
        group/lock [[ note = [ Required for var-lock service ] ]]
        simple-net? ( sys-apps/net-tools )
    post:
        sys-apps/module-init-tools
    suggestion:
        sys-apps/kexec-tools [[ description = [ Support for systemctl kexec - booting a kernel immediately, skipping the BIOS ] ]]
        sys-apps/rsyslog     [[ description = [ Provides a standard syslog daemon ] ]]
"

if ever is_scm ; then
    DEPENDENCIES+="
        build:
            dev-lang/vala:0.12
    "
fi

DEFAULT_SRC_CONFIGURE_PARAMS=(
    --prefix=
    --with-rootlibdir=/${LIBDIR}
    --libdir=/usr/${LIBDIR}
    --includedir=/usr/include
    --libexecdir=/usr/libexec
    --localstatedir=/var
    --enable-binfmt
    --enable-hostnamed
    --enable-localed
    --enable-logind
    --enable-pam
    --enable-quotacheck
    --enable-randomseed
    --enable-readahead
    --enable-timedated
    --enable-vconsole
    --enable-xz
    --disable-audit
    --disable-selinux
    --with-distro=other
    --with-pamlibdir=/${LIBDIR}/security
    --with-rootdir=
    --with-rootprefix=
    --with-rootlibdir=/${LIBDIR}
    --with-sysvinit-path=""
    --with-sysvrcd-path=""
    --with-udevrulesdir=/${LIBDIR}/udev/rules.d
)

DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=(
    acl
    "cryptsetup libcryptsetup"
    gtk
    plymouth
    "tcpd tcpwrap"
)

AT_M4DIR=( m4 )

systemd_pkg_pretend() {
    local kv=$(uname -r)

    if [[ ${kv} < 2.6.36 ]] ; then
        ewarn "You MUST install a kernel >= 2.6.36-rc1 to use systemd."
        ewarn "This check is based upon the kernel currently running, thus, if you already"
        ewarn "installed a suitable kernel and just need to boot it, you can disregard this."
    fi

    if [[ ${kv} < 2.6.39 ]] ; then
        ewarn "You SHOULD install a kernel >= 2.6.39 to get the best results."
    fi

    if [[ -f "${ROOT}"/etc/tmpfiles.d/legacy.conf ]] ; then
        ewarn "The configuration file /etc/tmpfiles.d/legacy.conf has been moved to"
        ewarn "/${LIBDIR}/tmpfiles.d/legacy.conf and can be safely removed after upgrade"
        ewarn "if you did not make any changes to it."
    fi
}

systemd_src_prepare() {
    if [[ ${PV} == 37 || ${PV} == 38 ]]; then
        expatch "${FILES}"/${PNV}_tmpfiles-binfmt-unprefixed.patch
    fi

    # Set the correct libdir if necessary.
    if [[ ${LIBDIR} != lib ]]; then
        edo sed -i -e "/rootlibexecdir=\$(rootdir)/s:/lib/:/${LIBDIR}/:" Makefile.am
        edo sed -i -e "/rootlibexecdir=\$(rootprefix)/s:/lib/:/${LIBDIR}/:" Makefile.am
        edo sed -i -e "/systemunitdir=/s:lib:${LIBDIR}:" Makefile.am
        edo sed -i -e "/userunitdir=\$(prefix)/s:/lib/:/${LIBDIR}/:" Makefile.am
        edo sed -i -e "/tmpfilesdir=\$(prefix)/s:/lib/:/${LIBDIR}/:" Makefile.am
        edo sed -i -e "/binfmtdir=\$(prefix)/s:/lib/:/${LIBDIR}/:" Makefile.am
        edo sed -i -e "/\$(DESTDIR)\$(prefix)/s:/lib/:/${LIBDIR}/:" Makefile.am

        autotools_src_prepare
        edo intltoolize
    elif ever is_scm; then
        autotools_src_prepare
        edo intltoolize
    else
        default
    fi
}

systemd_src_install() {
    default

    dodoc "${FILES}"/README.exherbo

    # alternatives
    dodir /sbin
    local a t alternatives=( init ${PN} 10 )
    for a in halt poweroff reboot runlevel shutdown telinit; do
        dosym ../bin/systemctl /sbin/${a}
        alternatives+=(
            /sbin/${a} ${PN}.${a}
            /usr/share/man/man8/${a}.8 ${PN}.${a}.8
        )
    done
    dosym ../bin/systemd /sbin/init
    alternatives+=(
        /sbin/init ${PN}.init
        /usr/share/man/man1/init.1 ${PN}.init.1
    )
    alternatives_for "${alternatives[@]}"

    # Handle bash-completion
    if option bash-completion ; then
        if [[ ${PV} == 37 ]]; then
            dobashcompletion "${IMAGE}"/etc/bash_completion.d/systemctl-bash-completion.sh
        else
            dobashcompletion "${IMAGE}"/etc/bash_completion.d/systemd-bash-completion.sh
        fi
    fi
    edo rm -r "${IMAGE}"/etc/bash_completion.d

    # Install basic.service
    insinto /${LIBDIR}/systemd/system
    doins "${FILES}"/basic.service

    # Install simple-net if requested
    if option simple-net; then
        doins "${FILES}"/network.service
        insinto /etc/conf.d
        doins "${FILES}"/network.conf
    fi

    # Install the legacy.conf tmpdirs.d config file.
    # systemd does not install it itself if SysV compatibility is not enabled.
    insinto /${LIBDIR}/tmpfiles.d
    doins "${WORK}"/tmpfiles.d/legacy.conf

    insinto /etc

    # Install a sample vconsole file
    hereins vconsole.conf <<EOF
# The console font to use.
FONT="lat9w-16"
# The charset map file to use. Look in /usr/share/consoletrans for map files.
#FONT_MAP=""
#FONT_UNIMAP=""
# The keyboard layout to use.
KEYMAP="us"
#KEYMAP_TOGGLE=""
EOF

    # Install a default hostname file
    hereins hostname <<EOF
localhost
EOF

    # Install a default machine-info file
    hereins machine-info <<EOF
# A human-readable UTF-8 machine identifier string. This should contain a name like
# "Wulf's Notebook" which should be similar to the hostname (e. g. "wulfs-notebook")
# but may differ if you prefer because it's used for presentation only (e. g. in GDM/KDM).
PRETTY_HOSTNAME="My Computer"
# An icon identifying this machine according to the XDG Icon Naming Specification.
# http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html
# The default value "computer" is the most basic fallback, you could use e. g.
# "computer-laptop" or "computer-desktop".
ICON_NAME=computer
EOF

    # Install a default *system* locale file
    hereins locale.conf <<EOF
# Here you configure the *system* locale, i. e. the locale daemons and other non-
# interactive processes get. *Never* change anything here if you don't know *exactly*
# what you're doing. For your user's locale, use an /etc/env.d file instead.
# You must not use LC_ALL here.
LANG=
LC_CTYPE=en_US.UTF-8
LC_NUMERIC=C
LC_TIME=C
LC_COLLATE=C
LC_MONETARY=C
LC_MESSAGES=C
LC_PAPER=C
LC_NAME=C
LC_ADDRESS=C
LC_TELEPHONE=C
LC_MEASUREMENT=C
LC_IDENTIFICATION=C
EOF

    # keepdir some stuff
    keepdir /etc/systemd/session
    keepdir /etc/systemd/system/graphical.target.wants
    keepdir /etc/systemd/system/local-fs.target.wants
    keepdir /etc/systemd/system/sysinit.target.wants
    keepdir /etc/systemd/user
    keepdir /${LIBDIR}/systemd/system/graphical.target.wants
    keepdir /${LIBDIR}/systemd/system-generators
    keepdir /${LIBDIR}/systemd/system-shutdown
    keepdir /usr/libexec/systemd/user-generators
    keepdir /usr/${LIBDIR}/systemd/system-shutdown
    keepdir /usr/${LIBDIR}/systemd/system/graphical.target.wants

    # Make sure /etc/machine-id exists.
    [[ -f /etc/machine-id ]] || edo touch "${IMAGE}"/etc/machine-id

    # Module names in /etc/modules-load.d/?*.conf get read and the modules loaded.
    keepdir /etc/modules-load.d
    keepdir /${LIBDIR}/modules-load.d

    # Files in /etc/sysctl.d/?*.conf get read and applied via sysctl. Can be used
    # in combination with sysctl.conf (sysctl.conf takes precedence over sysctl.d).
    keepdir /etc/sysctl.d
    keepdir /${LIBDIR}/sysctl.d

    # Files in /etc/binfmt.d/?*.conf contain a list of binfmt_misc kernel binary
    # format rules. Those are used to configure additional binary formats to register
    # during boot in the kernel.
    keepdir /etc/binfmt.d
    keepdir /${LIBDIR}/binfmt.d

    # Files in /etc/tmpfiles.d/?*.conf contain a list of files and/or directories.
    # Those are automatically (re)created, removed, truncated,... during boot or after a specified time
    # with specified owner, group and access mode.
    keepdir /etc/tmpfiles.d
    keepdir /${LIBDIR}/tmpfiles.d

    # From here on, we're creating a basic configuration.
    dodir /etc/systemd/system/basic.target.wants

    # Enable basic.service
    dosym ../../../../${LIBDIR}/systemd/system/basic.service /etc/systemd/system/basic.target.wants/basic.service
}

systemd_pkg_postinst() {
    default

    if [[ ${ROOT} == / ]]; then
        nonfatal edo /bin/systemd-machine-id-setup || ewarn "systemd-machine-id-setup failed"
        nonfatal edo mkdir -p /var/lib/dbus || ewarn "mkdir /var/lib/dbus failed"
        nonfatal edo ln -snf /etc/machine-id /var/lib/dbus/machine-id || ewarn "creating machine-id symlink failed"
    fi

    local cruft=( /etc/init.d/sysinit.bash )
    for file in ${cruft[@]}; do
        if [[ -f ${file} || -L ${file} ]]; then
            nonfatal edo rm "${file}" || ewarn "removing ${file} failed"
        fi
    done

    local renamed=( /etc/locale /etc/vconsole )
    for file in ${renamed[@]}; do
        if [[ -f ${file} ]] ; then
            nonfatal edo mv "${file}" "${file}".conf || ewarn "moving ${file} failed"
        fi
    done

    alternatives_pkg_postinst
}

