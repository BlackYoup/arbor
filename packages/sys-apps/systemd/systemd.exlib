# Copyright 2010 Wulf C. Krueger <philantrop@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

if [[ ${PV} == "scm" ]] ; then
    SCM_REPOSITORY="git://anongit.freedesktop.org/systemd"
    require scm-git
else
    DOWNLOADS="http://www.freedesktop.org/software/${PN}/${PNV}.tar.bz2"
fi

require autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ 1.11 ] ] multilib alternatives

export_exlib_phases src_prepare src_install pkg_postinst

SUMMARY="${PN} is a system and session manager for Linux"
DESCRIPTION="
${PN} is a system and session manager for Linux, compatible with SysV and LSB
init scripts. ${PN} provides aggressive parallelization capabilities, uses
socket and D-Bus activation for starting services, offers on-demand starting of
daemons, keeps track of processes using Linux cgroups, supports snapshotting and
restoring of the system state, maintains mount and automount points and implements
an elaborate transactional dependency-based service control logic. It can work as
a drop-in replacement for sysvinit.
"
HOMEPAGE="http://www.freedesktop.org/wiki/Software/${PN}"
BUGS_TO="philantrop@exherbo.org"

LICENCES="GPL-2"
SLOT="0"
MYOPTIONS="
    gtk [[ description = [ Build systemadm, the GTK+ GUI for systemd's services ] ]]
    tcpd
    simple-net [[ description = [ Include an extremely simple service for static networking ] ]]
    tmpwatch [[ description = [ Enable watching /tmp for unused files to delete ] ]]
"

# 7. 9. 2010: You'll need at least kernel v2.6.36-rc1.
# We don't support metalog as a syslogger (yet) so we do NOT use virtual/syslog here.
DEPENDENCIES="
    build:
        dev-libs/libxslt
        dev-util/pkg-config[>=0.20]
    build+run:
        dev-lang/vala[>=0.9.0]
        dev-libs/dbus-glib[>=0.86]
        dev-libs/glib:2[>=2.25.9]
        sys-apps/dbus[>=1.3.2][systemd(-)]
        || ( sys-apps/rsyslog sys-apps/syslog-ng )
        sys-apps/skeleton-filesystem-layout
        sys-fs/udev[systemd(-)][>=162]
        sys-libs/libcap
        sys-libs/pam
        gtk? (
            x11-libs/gtk+:2[>=2.20]
            x11-libs/libnotify
        )
    run:
        sys-apps/busybox
        sys-apps/coreutils
        sys-apps/kbd[>=1.15.2-r1]
        sys-apps/util-linux-ng
        group/lock [[ note = [ Required for var-lock service ] ]]
        simple-net? ( sys-apps/net-tools )
        tmpwatch? ( app-admin/tmpwatch )
    post:
        sys-apps/module-init-tools
"

DEFAULT_SRC_PREPARE_PATCHES=(
    "${FILES}"/0001-Add-Exherbo-distribution.patch
    "${FILES}"/0002-Add-basic-services-for-Exherbo.patch
    "${FILES}"/0003-Add-Exherbo-welcome-message.patch
)

DEFAULT_SRC_CONFIGURE_PARAMS=(
    --prefix=/
    --exec-prefix=/
    --libdir=/$(get_libdir)
    --enable-pam
    --disable-audit
    --disable-selinux
    --with-distro=exherbo
    --with-pamlibdir=/$(get_libdir)/security
    --with-rootdir=/
    --with-udevrulesdir=/$(get_libdir)/udev/rules.d
)

DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=(
    gtk
    "tcpd tcpwrap"
)

AT_M4DIR=m4

systemd_src_prepare() {
    # Set the correct libdir.
    edo sed -i -e "/rootlibexecdir=/s:/lib/:/$(get_libdir)/:" Makefile.am
    edo sed -i -e "/systemunitdir=/s:lib:$(get_libdir):" Makefile.am

    autotools_src_prepare
}

systemd_src_install() {
    default

    # alternatives
    dodir /sbin
    local a t alternatives=( init ${PN} 10 )
    for a in halt poweroff reboot runlevel shutdown telinit; do
        dosym /bin/systemctl /sbin/${a}
        alternatives+=(
            /sbin/${a} ${PN}.${a}
            /usr/share/man/man8/${a}.8 ${PN}.${a}.8
        )
    done
    dosym /bin/systemd /sbin/init
    alternatives+=(
        /sbin/init ${PN}.init
        /usr/share/man/man1/init.1 ${PN}.init.1
    )
    alternatives_for "${alternatives[@]}"

    # Install basic services
    insinto /$(get_libdir)/systemd/system
    doins "${FILES}"/basic.service
    doins "${FILES}"/fsck.service
    exeinto /$(get_libdir)/systemd
    doexe "${FILES}"/fsck.bash
    edo sed -i -e "s:LIBDIR:$(get_libdir):" "${IMAGE}"/$(get_libdir)/systemd/system/fsck.service

    if option simple-net; then
        doins "${FILES}"/network.service
        insinto /etc/conf.d
        doins "${FILES}"/network.conf
    fi

    keepdir /etc/systemd/session
    keepdir /etc/systemd/system/graphical.target.wants

    # We're not some other OS so we disable that shortcut.
    edo rm "${IMAGE}"/$(get_libdir)/systemd/system/ctrl-alt-del.target

    # Using tmpwatch should be optional.
    if ! option tmpwatch; then
        edo rm "${IMAGE}"/$(get_libdir)/systemd/system/basic.target.wants/tmpwatch.service
        edo rm "${IMAGE}"/$(get_libdir)/systemd/system/basic.target.wants/tmpwatch.timer
    fi

    insinto /etc

    # Install a sample vconsole file
    hereins vconsole.conf <<EOF
FONT="lat9w-16"
KEYMAP="us"
EOF

    # Install a default hostname file
    hereins hostname <<EOF
localhost
EOF

    # Install a default *system* locale file
    hereins locale.conf <<EOF
LANG=
LC_CTYPE=C
LC_NUMERIC=C
LC_TIME=C
LC_COLLATE=C
LC_MONETARY=C
LC_MESSAGES=C
LC_PAPER=C
LC_NAME=C
LC_ADDRESS=C
LC_TELEPHONE=C
LC_MEASUREMENT=C
LC_IDENTIFICATION=C
LC_ALL=
EOF

    # Module names in /etc/modules-load.d/?*.conf get read and the modules loaded.
    keepdir /etc/modules-load.d

    # From here on, we're creating a basic configuration.
    dodir /etc/systemd/system/basic.target.wants

    # Enable basic services
    dosym /$(get_libdir)/systemd/system/basic.service /etc/systemd/system/basic.target.wants/basic.service
    dosym /$(get_libdir)/systemd/system/fsck.service /etc/systemd/system/basic.target.wants/fsck.service
    dosym /$(get_libdir)/systemd/system/fsck.target /etc/systemd/system/basic.target.wants/fsck.target
    dosym /$(get_libdir)/systemd/system/tmp.mount /etc/systemd/system/basic.target.wants/tmp.mount

    # Enable syslog
    dosym /$(get_libdir)/systemd/system/syslog.service /etc/systemd/system/multi-user.target.wants/syslog.service
    if [[ -e /$(get_libdir)/systemd/system/syslog.socket ]]; then
        dosym /$(get_libdir)/systemd/system/syslog.socket /etc/systemd/system/multi-user.target.wants/syslog.socket
    fi
}

systemd_pkg_postinst() {
    default

    local cruft=(
        /etc/init.d/sysinit.bash
        /etc/systemd/system/basic.target.wants/sysinit.service
        /etc/systemd/system/local-fs.target.wants/tmp.service
        /etc/systemd/system/sysinit.target.wants/remount-rootfs.service
        /etc/systemd/system/sysinit.target.wants/sysinit.service
    )
    for file in ${cruft[@]}; do
        if [[ -f ${file} ]] || [[ -L ${file} ]]; then
            nonfatal edo rm "${file}" || ewarn "removing ${file} failed"
        fi
    done

    local renamed=( /etc/locale /etc/vconsole )
    for file in ${renamed[@]}; do
        if [[ -f ${file} ]] ; then
            nonfatal edo mv "${file}" "${file}".conf || ewarn "moving ${file} failed"
        fi
    done
}

