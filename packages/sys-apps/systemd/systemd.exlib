# Copyright 2010-2014 Wulf C. Krueger <philantrop@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

if ever is_scm ; then
    SCM_REPOSITORY="git://git.freedesktop.org/git/systemd/systemd.git"
    require scm-git
else
    DOWNLOADS="
        http://www.freedesktop.org/software/${PN}/${PNV}.tar.xz
    "
fi

require autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ 1.13 1.12 1.11 ] ] \
        alternatives \
        easy-multibuild \
        kernel \
        test-dbus-daemon \
        udev-rules \
        pam \
        python [ blacklist="3.1" python_opts="[multibuild_c:*(-)?]" multibuild=false with_opt=true ]

export_exlib_phases pkg_pretend pkg_setup src_prepare src_install pkg_postinst

SUMMARY="${PN} is a(n) (init) system and session manager for Linux"
DESCRIPTION="
${PN} is a(n) (init) system and session manager for Linux. It provides aggressive
parallelization capabilities, uses socket and D-Bus activation for starting services,
offers on-demand starting of daemons, keeps track of processes using Linux cgroups,
supports snapshotting and restoring of the system state, maintains mount and
automount points and implements an elaborate transactional dependency-based service
control logic.
SysVinit compatibility is deactivated in our package because we don't want it nor
do we support it.
"
HOMEPAGE="http://www.freedesktop.org/wiki/Software/${PN}"
BUGS_TO="philantrop@exherbo.org"
LICENCES="
    LGPL-2.1        [[ note = [ Everything but ] ]]
    GPL-2           [[ note = [ src/udev, ] ]]
    MIT             [[ note = [ sd-readahead.[ch], ] ]]
    public-domain   [[ note = [ src/shared/MurmurHash2.c, src/shared/siphash24.c, src/journal/lookup3.c ] ]]
"
SLOT="0"
MYOPTIONS="
    acl
    bash-completion
    bootchart [[ description = [ Enable integrated bootchart by Auke Kok ] ]]
    cryptsetup [[ description = [ Enable systemd's minimal cryptsetup unit generator ] ]]
    efi [[
        description = [ EFI information in various tools and mounting of efivars during boot ]
        note = [ Needs (U)EFI compatible hardware and a fairly recent kernel with proper configuration ]
    ]]
    gcrypt [[ description = [ Enable cryptographically secured journal files ] ]]
    gobject-introspection
    gtk-doc
    journal-gateway [[ description = [ Enable journal gateway daemon to access the journal via HTTP and JSON ] ]]
    polkit [[ description = [ Use PolicyKit for privileged operations ] ]]
    python [[ description = [ Build the man page index and systemd-python (bindings) ] ]]
    qrencode [[ description = [ For transferring the journal verification key to a smartphone ] ]]
    simple-net [[ description = [ Include an extremely simple service for static networking ] ]]
    static-net [[ description = [ Include a simple service for static networking ] ]]
    tcpd
    xattr
    zsh-completion
"

if ever at_least 209; then
    MYOPTIONS+="
        kdbus [[ description = [ HIGHLY EXPERIMENTAL, INSECURE: Use the kernel D-Bus implementation ] ]]
        seccomp [[ description = [ System call filtering support via seccomp ] ]]
    "
fi

MYOPTIONS+="
    multibuild_c: 32 64
"

DEPENDENCIES="
    build:
        dev-libs/libxslt [[ note = [ for creating the man pages ] ]]
        dev-util/gperf[>=3.0.4] [[ note = [ for keymap ] ]]
        dev-util/intltool[>=0.40.0]
        sys-devel/gettext
        virtual/pkg-config[>=0.20]
        gtk-doc? (
            app-doc/gtk-doc-autotools[>=1.18]
            dev-libs/libxslt
        )
    build+run:
        app-arch/xz[multibuild_c:*(-)?]
        dev-libs/glib:2[>=2.26][multibuild_c:*(-)?]
        sys-apps/kmod[>=15][multibuild_c:*(-)?]
        sys-apps/pciutils
        sys-apps/skeleton-filesystem-layout
        sys-apps/usbutils[>=0.82]
        sys-apps/util-linux[>=2.22][multibuild_c:*(-)?]
        sys-kernel/linux-headers[>=2.6.39]
        sys-libs/libcap[multibuild_c:*(-)?]
        sys-libs/pam[>=1.1.2][multibuild_c:*(-)?]
        !net-dns/nss-myhostname [[
            description = [ Included and enabled in systemd >= 197 ]
            resolution = uninstall-blocked-after
        ]]
        !sys-fs/udev [[
            description = [ udev is now part of systemd. ]
            resolution = uninstall-blocked-after
        ]]
        acl? ( sys-apps/acl[multibuild_c:*(-)?] )
        cryptsetup? ( sys-fs/cryptsetup[>=1.6.0][multibuild_c:*(-)?] )
        gcrypt? ( dev-libs/libgcrypt[multibuild_c:*(-)?] )
        gobject-introspection? ( gnome-desktop/gobject-introspection:1[>=1.31.1] )
        journal-gateway? (
            net-libs/libmicrohttpd[>=0.9.5][multibuild_c:*(-)?]
            user/systemd-journal-gateway
            group/systemd-journal-gateway
        )
        polkit? ( sys-auth/polkit:1[multibuild_c:*(-)?] )
        qrencode? ( media-libs/qrencode[multibuild_c:*(-)?] )
        tcpd? ( sys-apps/tcp-wrappers[multibuild_c:*(-)?] )
        xattr? ( sys-apps/attr[multibuild_c:*(-)?] )
    run:
        sys-apps/coreutils
        sys-apps/kbd[>=1.15.2-r1]
        group/dialout
        group/lock [[ note = [ Required for var-lock service ] ]]
        group/systemd-journal [[ note = [ Required for journal access by non-root users ] ]]
        simple-net? ( sys-apps/net-tools[>=1.60_p20120127084908] )
        static-net? ( sys-apps/iproute2 )
    suggestion:
        app-admin/systemd-ui [[ description = [ Optional (G)UI tools for systemd ] ]]
        (
            gnome-bindings/pygobject:3
            gnome-desktop/gobject-introspection:1
        ) [[ description = [ Required for systemd-analyze - analyze the boot performance of your system ] ]]
        dev-python/lxml [[ description = [ For a prettier directive index (man systemd.directives) ] ]]
        dev-python/pycairo [[ description = [ Get fancy svgs about the boot process through systemd-analyze plot  ] ]]
        sys-apps/kexec-tools [[ description = [ Support for systemctl kexec - booting a kernel immediately, skipping the BIOS ] ]]
        sys-boot/dracut [[ description = [ Easily create an initramfs (if in doubt, don't take this) ] ]]
        efi? (
            sys-boot/gummiboot [[
                note = [ Systemd can receive performance data and other information from supported bootloaders ]
                url  = [ http://www.freedesktop.org/wiki/Software/systemd/BootLoaderInterface ]
            ]]
        )
"

if ever at_least 209; then
    DEPENDENCIES+="
        build+run:
            seccomp? ( sys-libs/libseccomp[>=1.0.0][multibuild_c:*(-)?] )
        run:
            sys-apps/dbus[>=1.4.0][multibuild_c:*(-)?]
    "
else
    DEPENDENCIES+="
        build+run:
            sys-apps/dbus[>=1.4.0][multibuild_c:*(-)?]
    "
fi

AT_M4DIR=( m4 )

systemd_pkg_pretend() {
    if ! kernel_version_at_least 3.0 ; then
        ewarn "You MUST install a kernel >= 3.0 to use systemd."
        ewarn "This check is based upon the kernel currently running, thus, if you already"
        ewarn "installed a suitable kernel and just need to boot it, you can disregard this."
    fi

    if ! kernel_version_at_least 3.8 ; then
        ewarn "You SHOULD install a kernel >= 3.8 to get the best results."
        ewarn "Read http://cgit.freedesktop.org/systemd/systemd/plain/README for details."
    fi

    if [[ -f "${ROOT}"/etc/tmpfiles.d/legacy.conf ]] ; then
        ewarn "The configuration file /etc/tmpfiles.d/legacy.conf has been moved to"
        ewarn "/usr/${LIBDIR}/tmpfiles.d/legacy.conf and can be safely removed after upgrade"
        ewarn "if you did not make any changes to it."
    fi
}

systemd_pkg_setup() {
    exdirectory --allow /etc/binfmt.d
    exdirectory --allow /etc/modules-load.d
    exdirectory --allow /etc/sysctl.d
    exdirectory --allow /etc/systemd/system
    exdirectory --allow /etc/tmpfiles.d
    exdirectory --allow /etc/udev/rules.d
}

systemd_src_prepare() {
    if [[ -d ${FILES}/patches ]]; then
        expatch -p1 "${FILES}"/patches
    fi

    # Set the correct libdir if necessary.
    if [[ ${LIBDIR} != lib ]]; then
        edo sed -i \
            -e "/^rootlibexecdir=/s:/lib/:/${LIBDIR}/:" \
            -e "/^udevlibexecdir=/s:/lib/:/${LIBDIR}/:" \
            -e "/^systemunitdir=/s:lib:${LIBDIR}:" \
            -e "/^userunitdir=/s:/lib/:/${LIBDIR}/:" \
            -e "/^tmpfilesdir=/s:/lib/:/${LIBDIR}/:" \
            -e "/^sysctldir=/s:/lib/:/${LIBDIR}/:" \
            -e "/^networkdir=/s:/lib/:/${LIBDIR}/:" \
            -e "/^usergeneratordir=/s:/lib/:/${LIBDIR}/:" \
            -e "/^catalogdir=/s:/lib/:/${LIBDIR}/:" \
            -e "/^kernelinstalldir = /s:/lib/:/${LIBDIR}/:" \
            -e "/\$(DESTDIR)\$(prefix)/s:/lib/:/${LIBDIR}/:" \
            -e "/\$(INSTALL_DIRS)/s:\$(INSTALL_DIRS):\$(subst /lib/,/${LIBDIR}/,&):" \
            Makefile.am
    fi

    if option gtk-doc ; then
        edo gtkdocize --copy --docdir docs/
    else
        edo echo 'EXTRA_DIST =' > docs/gtk-doc.make
    fi

    if ! option gcrypt ; then
        edo sed -i -e "/man page index/ a AC_DEFUN([AM_PATH_LIBGCRYPT],/bin/false)" configure.ac
    fi

    # Paludis really hates the progress bar so let's disable it.
    edo sed -i -e "/journal_file_verify/s:true:false:" src/journal/test-journal-verify.c

    # Disable tests that need root privs.
    edo sed -i -e '/test-unit-name/s:test-unit-name:$(NULL):' Makefile.am
    edo sed -i -e '/test-unit-file/s:test-unit-file:$(NULL):' Makefile.am
    edo sed -i -e '/test-sched-prio/s:test-sched-prio:$(NULL):' Makefile.am

    # Broken.
    #    edo sed -i -e '/test-hashmap/s:test-hashmap:$(NULL):' Makefile.am

    edo intltoolize --force --automake
    autotools_src_prepare
}

configure_one_multibuild() {
    local myconfig=(
        --prefix=/usr
        --libdir=/usr/${LIBDIR}
        --includedir=/usr/include
        --libexecdir=/usr/${LIBDIR}
        --localstatedir=/var
        --enable-backlight
        --enable-binfmt
        --enable-blkid
        --enable-coredump
        --enable-gudev
        --enable-hostnamed
        --enable-kmod
        --enable-localed
        --enable-logind
        --enable-machined
        --enable-manpages
        --enable-myhostname
        --enable-pam
        --enable-quotacheck
        --enable-randomseed
        --enable-readahead
        # This adds /sbin and /bin to PATH for systemd units again.
        --enable-split-usr
        --enable-tmpfiles
        --enable-timedated
        --enable-vconsole
        --enable-xz
        --disable-audit
        --disable-chkconfig
        --disable-ima
        --disable-selinux
        --disable-smack
        --with-debug-tty=/dev/tty9
        --with-firmware-path=/${LIBDIR}/firmware/updates:/${LIBDIR}/firmware
        --with-kbd-loadkeys=/bin/loadkeys
        --with-kbd-setfont=/bin/setfont
        --with-pamconfdir=/etc/pam.d
        --with-pamlibdir=/${LIBDIR}/security
        # Disable SysV init compatibility.
        --with-rc-local-script-path-start=""
        --with-rc-local-script-path-stop=""
        --with-sysvinit-path=""
        --with-sysvrcnd-path=""
        --with-tty-gid=5
        $(option_enable acl)
        $(option_enable bootchart)
        $(option_enable cryptsetup libcryptsetup)
        $(option_enable efi)
        $(option_enable gcrypt)
        $(option_enable gobject-introspection introspection)
        $(option_enable gtk-doc)
        $(option_enable journal-gateway microhttpd)
        $(option_enable polkit)
        $(option_enable python python-devel)
        $(option_enable qrencode)
        $(option_enable tcpd tcpwrap)
        $(option_enable xattr)
        $(option_with bash-completion bashcompletiondir /usr/share/bash-completion/completions)
        $(option_with python)
        $(option_with zsh-completion zshcompletiondir /usr/share/zsh/site-functions)
    )

    if ever at_least 209; then
        myconfig+=(
            --enable-compat-libs
            --enable-dbus
            --enable-multi-seat-x
            --enable-networkd
            --enable-rfkill
            $(option_enable kdbus)
            $(option_enable seccomp)
        )
    fi

    edo mkdir -p src/gudev

    if ever at_least 209; then
        if option simple-net || option static-net ; then
            ewarn "WARNING: Both the simple-net and the static-net options will be removed in favour"
            ewarn "of systemd-networkd in a few releases."
        fi
    fi

    econf "${myconfig[@]}"
}

test_one_multibuild() {
    # Note to self & whoever else reads this: Don't even *think* about
    # RESTRICT=userpriv in order to enable more expensive udev tests.
    # Enabling those tests can (and most likely will) mess up your running system
    # completely and require you to reboot. You've been warned.
    if [[ -f /etc/machine-id ]]; then
        # The tests currently fail if run under sydbox.
        esandbox disable
        esandbox disable_net
        test-dbus-daemon_src_test
        esandbox enable
        esandbox enable_net
    else
        ewarn "The tests require a valid, initialised /etc/machine-id which you don't seem to"
        ewarn "have. Please run /usr/bin/systemd-machine-id-setup and re-install systemd if you"
        ewarn "want to run the tests."
    fi
}

install_one_multibuild() {
    default

    keepdir /usr/${LIBDIR}/systemd/user-generators
    keepdir /usr/${LIBDIR}/udev/devices
}

systemd_src_install() {
    easy-multibuild_src_install

    # alternatives
    dodir /sbin
    local a t alternatives=( init ${PN} 10 )
    for a in halt poweroff reboot runlevel shutdown telinit; do
        dosym ../usr/bin/systemctl /sbin/${a}
        alternatives+=(
            /sbin/${a} ${PN}.${a}
            /usr/share/man/man8/${a}.8 ${PN}.${a}.8
        )
    done
    dosym ../usr/${LIBDIR}/systemd/systemd /sbin/init
    alternatives+=(
        /sbin/init ${PN}.init
        /usr/share/man/man1/init.1 ${PN}.init.1
    )
    alternatives_for "${alternatives[@]}"

    # Compatibility symlink for some tools that try to use /bin/systemctl.
    dodir /bin
    dosym ../usr/bin/systemctl /bin/systemctl

    # Don't install funny RPM macros.
    if [[ -d "${IMAGE}"/etc/rpm ]]; then
        edo rm -r "${IMAGE}"/etc/rpm
    fi

    if [[ -d "${IMAGE}"/usr/lib/rpm ]]; then
        edo rm -r "${IMAGE}"/usr/lib/rpm

        # breaks non ~amd64 systems
        if [[ ${LIBDIR} != lib ]]; then
            edo rmdir "${IMAGE}"/usr/lib
        fi
    fi

    # Install simple-net if requested
    if option simple-net; then
        insinto /usr/${LIBDIR}/systemd/system
        doins "${FILES}"/network.service
        insinto /etc/conf.d
        doins "${FILES}"/network.conf
    fi

    if option static-net; then
        insinto /usr/${LIBDIR}/systemd/system
        doins "${FILES}"/network4@.service
        doins "${FILES}"/gateway4.service
        doins "${FILES}"/network6@.service
        doins "${FILES}"/gateway6.service
        insinto /etc/conf.d
        doins "${FILES}"/network-gateway.conf
        doins "${FILES}"/network-lo.conf
        doins "${FILES}"/network-eth0.conf
    fi

    if [[ -d "${IMAGE}"/no ]]; then
        edo rm -r "${IMAGE}"/no
    fi

    # Install the legacy.conf tmpdirs.d config file.
    # systemd does not install it itself if SysV compatibility is not enabled.
    insinto /usr/${LIBDIR}/tmpfiles.d
    doins "${WORK}"/tmpfiles.d/legacy.conf

    insinto /etc

    # Install a sample vconsole file
    hereins vconsole.conf <<EOF
# The console font to use.
# If you want to use your kernel's defaults, comment out everything here.
#FONT=
FONT="lat9w-16"
# The charset map file to use. Look in /usr/share/consoletrans for map files.
#FONT_MAP=""
#FONT_UNIMAP=""
# The keyboard layout to use.
KEYMAP="us"
#KEYMAP_TOGGLE=""
EOF

    # Install a default hostname file
    hereins hostname <<EOF
localhost
EOF

    # Install a default machine-info file
    hereins machine-info <<EOF
# A human-readable UTF-8 machine identifier string. This should contain a name like
# "Wulf's Notebook" which should be similar to the hostname (e. g. "wulfs-notebook")
# but may differ if you prefer because it's used for presentation only (e. g. in GDM/KDM).
PRETTY_HOSTNAME="My Computer"
# An icon identifying this machine according to the XDG Icon Naming Specification.
# http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html
# The default value "computer" is the most basic fallback, you could use e. g.
# "computer-laptop" or "computer-desktop".
ICON_NAME=computer
EOF

    # Install a default *system* locale file
    hereins locale.conf <<EOF
# Here you configure the *system* locale, i. e. the locale daemons and other non-
# interactive processes get. *Never* change anything here if you don't know *exactly*
# what you're doing. For your user's locale, use an /etc/env.d file instead.
# You must not use LC_ALL here.
LANG=
LC_CTYPE=en_US.UTF-8
LC_NUMERIC=C
LC_TIME=C
LC_COLLATE=C
LC_MONETARY=C
LC_MESSAGES=C
LC_PAPER=C
LC_NAME=C
LC_ADDRESS=C
LC_TELEPHONE=C
LC_MEASUREMENT=C
LC_IDENTIFICATION=C
EOF

    nonfatal edo mv "${IMAGE}"/var/${LIBDIR} "${IMAGE}"/var/lib

    if ! ever at_least 209 || ever at_least scm; then
        # Don't create /var/log/journal, the user should do that
        edo rmdir "${IMAGE}"/var/log/{journal,}
    fi

    # keepdir some stuff
    keepdir /etc/systemd/session
    keepdir /etc/systemd/system/graphical.target.wants
    keepdir /etc/systemd/system/local-fs.target.wants
    keepdir /etc/systemd/system/sysinit.target.wants
    keepdir /etc/systemd/user
    keepdir /etc/udev/hwdb.d
    keepdir /usr/${LIBDIR}/systemd/system/graphical.target.wants
    keepdir /usr/${LIBDIR}/systemd/system-generators
    keepdir /usr/${LIBDIR}/systemd/system-shutdown
    keepdir /usr/${LIBDIR}/systemd/user-generators
    keepdir /var/lib/systemd

    # Make sure /etc/machine-id exists.
    [[ -f /etc/machine-id ]] || edo touch "${IMAGE}"/etc/machine-id

    # Module names in /etc/modules-load.d/?*.conf get read and the modules loaded.
    keepdir /etc/modules-load.d
    keepdir /usr/${LIBDIR}/modules-load.d

    # Files in /etc/sysctl.d/?*.conf get read and applied via sysctl. Can be used
    # in combination with sysctl.conf (sysctl.conf takes precedence over sysctl.d).
    keepdir /etc/sysctl.d
    keepdir /usr/${LIBDIR}/sysctl.d

    # Files in /etc/binfmt.d/?*.conf contain a list of binfmt_misc kernel binary
    # format rules. Those are used to configure additional binary formats to register
    # during boot in the kernel.
    keepdir /etc/binfmt.d
    keepdir /usr/${LIBDIR}/binfmt.d

    # Files in /etc/tmpfiles.d/?*.conf contain a list of files and/or directories.
    # Those are automatically (re)created, removed, truncated,... during boot or after a specified time
    # with specified owner, group and access mode.
    keepdir /etc/tmpfiles.d
    keepdir /usr/${LIBDIR}/tmpfiles.d

    # Helper dirs for the kernel-install utility.
    keepdir /etc/kernel/install.d
    keepdir /usr/${LIBDIR}/kernel/install.d

    # ntp units in ntp-units.d/?*.conf get read and the services started.
    keepdir /etc/systemd/ntp-units.d
    keepdir /usr/${LIBDIR}/systemd/ntp-units.d
    keepdir /usr/${LIBDIR}/systemd/system-sleep

    # udev link-config rules files
    keepdir /etc/systemd/network
    keepdir /usr/${LIBDIR}/systemd/network

    # Keep the administrator's udev rules dir.
    keepdir /etc/udev/rules.d

    # Keep the administrator's udev hardware database dir.
    keepdir /etc/udev/hwdb.d

    # module loading configuration
    insinto /etc/modprobe.d
    doins "${FILES}"/blacklist.conf

    # config protection
    hereenvd 20udev <<EOT
CONFIG_PROTECT_MASK="${UDEVRULESDIR}"
EOT

    # Create compatibility symlinks
    dosym /usr/${LIBDIR}/systemd/systemd-udevd /sbin/udevd
    dosym /usr/bin/udevadm /sbin/udevadm

    # Exclude /var/tmp/paludis/build from cleaning
    edo echo "x /var/tmp/paludis/build" >> "${IMAGE}"/usr/${LIBDIR}/tmpfiles.d/tmp.conf

    if option python ; then
        python_bytecompile
    fi
}

systemd_pkg_postinst() {
    default

    if [[ ${ROOT} == / ]]; then
        nonfatal edo /usr/bin/systemd-machine-id-setup || ewarn "systemd-machine-id-setup failed"
        nonfatal edo mkdir -p /var/lib/dbus || ewarn "mkdir /var/lib/dbus failed"
        nonfatal edo ln -snf /etc/machine-id /var/lib/dbus/machine-id || ewarn "creating machine-id symlink failed"

        # if the root of init does not match our root, we are in a chroot and should not perform the
        # restart of the udev process
        if [[ -r /proc/1/root && /proc/1/root -ef /proc/self/root/ ]]; then
            if [[ -S /run/systemd/private ]]; then
                # We are running systemd, use systemctl
                esandbox allow_net --connect unix:/run/systemd/private
                nonfatal edo systemctl --system daemon-reexec
                nonfatal edo systemctl --system restart systemd-udevd.service
                nonfatal edo systemctl --system restart systemd-journald.service
                nonfatal edo systemctl --system restart systemd-logind.service
            else
                # No need to ewarn or something because udevd might not be running.
                nonfatal edo pkill -TERM udevd
                nonfatal edo sleep 1
                nonfatal edo pkill -KILL udevd

                case "$(esandbox api)" in
                1)
                    esandbox exec /sbin/udevd --daemon || ewarn "udevd couldn't be restarted"
                    ;;
                0)
                    # Change the wait mode to wait/eldest so
                    # sydbox doesn't wait for udevd to exit.
                    esandbox wait_eldest
                    # Allow access to /run/udev/control for udevd
                    esandbox allow_net unix:/run/udev/control
                    nonfatal edo /sbin/udevd --daemon || ewarn "udevd couldn't be restarted."
                    ;;
                esac
            fi
        fi
    fi

    # Update the hwdb index
    nonfatal edo /sbin/udevadm hwdb --root="${ROOT}" --update || ewarn "Updating hwdb failed (udevadm hwdb --update)"

    # Update the message catalogue index
    nonfatal edo /usr/bin/journalctl --root="${ROOT}" --update-catalog || ewarn "Updating journal message catalogue failed (journalctl --update-catalog)"

    if has_version 'sys-apps/system[>=209]' && [[ -L ${ROOT}/etc/udev/rules.d/80-net-name-slot.rules ]]; then
        ewarn "You're not using predictable network interface names (bad choice!). If you want"
        ewarn "to keep using those, you need to mask 80-net-setup-link.rules since systemd-209"
        ewarn "now. cf. http://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/"
    fi

    local cruft=(
        "${ROOT}"/etc/init.d/sysinit.bash
        "${ROOT}"/etc/rpm/macros.systemd
        "${ROOT}"/etc/systemd/{systemd-journald.conf,systemd-logind.conf}
    )
    for file in "${cruft[@]}"; do
        if [[ -f ${file} || -L ${file} ]]; then
            nonfatal edo rm "${file}" || ewarn "removing ${file} failed"
        fi
    done

    local renamed=( "${ROOT}"/etc/locale "${ROOT}"/etc/vconsole )
    for file in "${renamed[@]}"; do
        if [[ -f ${file} ]] ; then
            nonfatal edo mv "${file}" "${file}".conf || ewarn "moving ${file} failed"
        fi
    done

    alternatives_pkg_postinst
}

