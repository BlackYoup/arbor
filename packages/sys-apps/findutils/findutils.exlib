# Copyright 2009 Bryan Ã˜stergaard
# Distributed under the terms of the GNU General Public License v2

if (( $(ever range 2) % 2 )); then
    require gnu [ alpha=true suffix=gz ]
else
    require gnu [ suffix=gz ]
fi
require alternatives
require multiarch

export_exlib_phases src_test_expensive

SUMMARY="Basic directory searching utilities"

REMOTE_IDS="freecode:${PN}"

LICENCES="GPL-3"
SLOT="0"
MYOPTIONS="
hosts:
    arm-exherbo-linux-gnueabi
    i686-pc-linux-gnu
    x86_64-pc-linux-gnu
"

RESTRICT="test"

DEPENDENCIES="
    test-expensive:
        dev-util/dejagnu[hosts:*(-)?]
"

DEFAULT_SRC_PREPARE_PATCHES=( "${FILES}/${PNV}-no-gets.patch" )

DEFAULT_SRC_CONFIGURE_PARAMS=( '--enable-d_type-optimisation' '--enable-leaf-optimisation'
                               '--enable-nls' '--without-included-regex' '--without-selinux' )

src_prepare() {
    default

    # TODO(compnerd) do this properly via autotools
    edo sed -e '/^AR =/c AR = @host@-ar'        \
            -i "${WORK}/gnulib/lib/Makefile.in" \
            -i "${WORK}/gnulib/Makefile.in"     \
            -i "${WORK}/lib/Makefile.in"        \
            -i "${WORK}/find/Makefile.in"
}

perform_multiarch_configure() {
    default_multiarch_src_configure "--libexecdir=/usr/${host}/libexec/${PN}"
}

findutils_src_test_expensive() {
    emake "${DEFAULT_SRC_TEST_PARAMS[@]}" check
}

perform_multiarch_install() {
    default
    alternatives+=(
        /usr/${host}/bin/locate        ${PN}.locate
        /usr/${host}/bin/updatedb      ${PN}.updatedb
    )
}

src_install() {
    local alternatives=(
        locate ${PN} 10

        /usr/share/man/man1/locate.1    /usr/share/man/man1/${PN}.locate.1
        /usr/share/man/man1/updatedb.1  /usr/share/man/man1/${PN}.updatedb.1
        /usr/share/man/man5/locatedb.5  /usr/share/man/man5/${PN}.locatedb.5
    )

    multiarch_src_install

    alternatives_for "${alternatives[@]}"

    edo rmdir "${IMAGE}/var"
}

