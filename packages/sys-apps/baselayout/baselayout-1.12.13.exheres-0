# Copyright 2008, 2009 Ingmar Vanhassel <ingmar@exherbo.org>
# Copyright 2008 Bo Ã˜rsted Andresen <zlin@exherbo.org>
# Copyright 2008, 2009 Wulf C. Krueger <philantrop@exherbo.org>
# Copyright 2008 Bernd Steinhauser <berniyh@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'baselayout-1.12.12.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation.

require flag-o-matic multilib

SUMMARY="Filesystem baselayout and init scripts"
HOMEPAGE="http://www.gentoo.org/"
DOWNLOADS="mirror://gentoo/${PNV}.tar.bz2"

LICENCES="GPL-2"
SLOT="0"
PLATFORMS="~amd64 ~arm ~ppc64 ~x86"
MYOPTIONS="" # static || Always build statically

DEPENDENCIES="
    build+run:
        sys-apps/skeleton-filesystem-layout
    run:
        sys-apps/coreutils[>=6.11-r1]
        sys-apps/sysvinit[>=2.86-r1][baselayout]
        sys-fs/udev[>=120]
        sys-apps/gawk[>=3.1.6-r1]
    post:
        sys-apps/module-init-tools
"

DEFAULT_SRC_PREPARE_PATCHES=(
    "${FILES}/${PN}-1.12.12-runlevels.patch"
    "${FILES}/${PNV}-paths.patch"
    "${FILES}/${PNV}-branding.patch"
    "${FILES}/${PN}-1.12.12-update-modules.patch"
    "${FILES}/${PN}-1.12.12-dhcpcd-4.x-compatibility.patch"
    "${FILES}/${PN}-1.12.12-exherbify.patch"
    "${FILES}/${PNV}-arping-path.patch"
)

pkg_pretend() {
    if [[ -e "${ROOT}"/etc/modprobe.conf ]]; then
        eerror "You have a file /etc/modprobe.conf. Please check if you need parts of it"
        eerror "(put these in a file in /etc/modprobe.d) and remove it. For further"
        eerror "information see \"man modprobe.conf\"."
        die "Found /etc/modprobe.conf."
    fi

    if [[ -e "${ROOT}"/etc/modules.d ]] || [[ -e "${ROOT}"/etc/modules.conf ]]; then
        eerror "/etc/modules.conf and /etc/modules.d are obsolete, please migrate to"
        eerror "modprobe.d and remove them. For further information see \"man modprobe.conf\"."
        die "Found modules.conf or modules.d."
    fi
}

src_prepare() {
    libdir=$(get_libdir)
    # Use correct path to filefuncs.so on multilib systems
    edo sed -e "s:/lib/rcscripts:/${libdir}/rcscripts:g" \
        -i "${WORK}"/src/awk/cachedepends.awk \
        -i "${WORK}"/sbin/functions.sh \
        -i "${WORK}"/init.d/halt.sh \
        -i "${WORK}"/lib/rcscripts/net/udhcpc.sh \
        -i "${WORK}"/sbin/functions.sh \
        -i "${WORK}"/sbin/rc

    # Use correct paths for wpa_cli, wpa_supplicant
    edo sed -e "s:/sbin/wpa_supplicant:/usr/sbin/wpa_supplicant:" \
        -e "s:/bin/wpa_cli:/usr/bin/wpa_cli:" \
        -i lib/rcscripts/net/wpa_supplicant.sh

    edo sed -e 's/dependancies/dependencies/g' \
        -i lib/rcscripts/net/*.sh \
        -i bin/rc-status

    # Switch default editor to vim
    # /etc/conf.d/xdm now called /etc/conf.d/displaymanager
    edo sed -e '/nano/s:^:#:' \
        -e '/vim/s:^#::' \
        -e '/# DISPLAYMANAGER has moved to/s:xdm:displaymanager:' \
        -i etc/rc.conf

    # Make EDITOR default to vim
    edo sed -e 's:/bin/nano:/usr/bin/vim:' -i etc/profile

    # Remove lesspipe references
    edo sed -e '/LESSOPEN/d' -i etc/env.d/00basic

    default
}

src_compile() {
    append-ldflags -static

    edo cd "${WORK}/src"
    emake \
        CC="${CC}" \
        LD="${CC} ${LDFLAGS}" \
        CFLAGS="${CFLAGS}" \
        LIBDIR="${libdir}"
}

src_install() {
    local x rcscripts_dir=/${libdir}/rcscripts

    dodir /etc/runlevels
    keepdir /etc/runlevels

    insinto /etc
    doins -r "${WORK}"/etc/*

    dodir /etc/init.d
    # doinitd doesnt respect symlinks
    edo cp -P "${WORK}"/init.d/* "${IMAGE}"/etc/init.d/

    insinto /usr/share/baselayout
    doins "${WORK}"/rc-lists/*

    into /
    dosbin "${WORK}"/sbin/{MAKEDEV,rc,rc-update,runscript.sh,functions.sh,depscan.sh}
    dobin "${WORK}"/bin/{rc-status,checkpath}

    exeinto ${rcscripts_dir}/sh
    doexe "${WORK}"/sbin/{rc-services.sh,rc-daemon.sh,rc-help.sh}

    insinto ${rcscripts_dir}/awk
    doins "${WORK}"/src/awk/*.awk

    insinto ${rcscripts_dir}/net
    doins "${WORK}"/lib/rcscripts/net/*
    edo chown -R root:0 "${IMAGE}"${rcscripts_dir}

    doman "${WORK}"/man/*.*
    dodoc "${WORK}"/ChangeLog

    # Compat symlinks between /etc/init.d and /sbin
    # (some stuff have hardcoded paths)
    dosym ../../sbin/depscan.sh /etc/init.d/depscan.sh
    dosym ../../sbin/runscript.sh /etc/init.d/runscript.sh
    dosym ../../sbin/functions.sh /etc/init.d/functions.sh

    edo cd "${WORK}/src"
    emake DESTDIR="${IMAGE}" LIBDIR="${libdir}" install

    edo rm -rf "${IMAGE}"/dev/pts
    edo rm "${IMAGE}"/etc/modules.autoload.d/kernel-2.4

    # Remove basic /etc files and dirs now installed by skeleton-filesystem-layout.
    for x in \
        /etc/filesystems \
        /etc/passwd \
        /etc/protocols \
        /etc/networks \
        /etc/hosts \
        /etc/shadow \
        /etc/env.d/00basic \
        /etc/shells \
        /etc/sysctl.conf \
        /etc/fstab \
        /etc/issue \
        /etc/group \
        /etc/inputrc \
        /etc/issue.devfix \
        /etc/services \
        /etc/profile \
        /etc/modprobe.d/i386.conf \
        /etc/modprobe.d/aliases.conf ;
    do
        edo rm "${IMAGE}${x}"
    done
    rmdir "${IMAGE}"/etc/env.d "${IMAGE}"/etc/modprobe.d
}

pkg_preinst() {
    # 2008-08-20: safety measure to prevent removal of directories that were part
    # of CONTENTS in 1.12.12 and below (before sys-apps/skeleton-filesystem-layout)
    local x target
    for x in /boot /dev/shm /var/lock; do
        edo touch "${ROOT}"${x}/.keep_do_not_break_me
    done

    if [[ $(get_libdir) != lib ]]; then
        for x in {,/usr,/usr/local}/lib; do
            if [[ -L ${ROOT}${x} ]]; then
                target=$(readlink "${ROOT}${x}") || die "rewriting ${ROOT}${x} failed"
                edo rm "${ROOT}${x}"
                edo ln -s "${target}" "${ROOT}${x}"
            fi
        done
    fi
}

pkg_postinst() {
    local x y
    local cruft=( "${ROOT}"/etc/issue.logo )
    for file in ${cruft[@]}; do
        if test -f "${file}" ; then
            nonfatal edo rm "${file}" || eerror "removing ${file} failed"
        fi
    done

    if [[ -z $(ls "${ROOT}"/etc/runlevels 2>/dev/null) ]]; then
        for x in "${ROOT}"/usr/share/baselayout/*; do
            edo mkdir -p "${ROOT}"/etc/runlevels/${x##*/}
            for y in $(<"${x}"); do
                if [[ ! -e ${ROOT}/etc/init.d/${y} ]]; then
                    die "/etc/init.d/${y} not found"
                else
                    edo ln -sfn ../../init.d/${y} "${ROOT}"/etc/runlevels/${x##*/}
                fi
            done
        done
    fi

    if [[ ${ROOT} == / ]]; then
        edo /sbin/depscan.sh --update &>/dev/null
    else
        edo rm -f "${ROOT}"/etc/modules.conf
    fi
}

