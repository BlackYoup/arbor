# Copyright 2007-2009 Bryan Ã˜stergaard
# Copyright 2009 Ingmar Vanhassel
# Distributed under the terms of the GNU General Public License v2

require gnu [ suffix=xz ]
require alternatives

SUMMARY="Core file, shell and text utilities expected to be on any system."

LICENCES="GPL-3"
SLOT="0"
MYOPTIONS="acl caps gmp xattr
    gmp [[ description = [ The utilities time, factor and expr support arbitrarily large numbers ] ]]
"

DEPENDENCIES="
    build:
        sys-devel/gettext[>=0.18.1]
    build+run:
        acl? ( sys-apps/acl )
        caps? ( sys-libs/libcap )
        gmp? ( dev-libs/gmp:= )
        xattr? ( sys-apps/attr )
"

DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=( acl 'caps libcap' xattr )
DEFAULT_SRC_CONFIGURE_OPTION_WITHS=( gmp )
DEFAULT_SRC_CONFIGURE_PARAMS=( '--enable-install-program=arch,hostname' '--enable-largefile' )

src_configure() {
    # Configuration takes a million years without this hack.
    esandbox hack_toolong
    default
    esandbox nohack_toolong
}

src_test() {
    if exhost --is-native -q; then
        esandbox allow /dev/full
        default
        esandbox disallow /dev/full
    else
        echo "cross compiled host, skipping tests"
    fi
}

src_test_expensive() {
    if exhost --is-native -q; then
        local -a expensive_tests
        edo cd tests
        expensive_tests=($( find . -type f | xargs grep -E --files-with-matches '^(very_|)expensive_$' | sed -e 's:^\./::g'))
        expensive_tests=("${expensive_tests[@]:-expensive_tests_grep_broke}")
        emake check RUN_{VERY_,}EXPENSIVE_TESTS=yes TESTS="${expensive_tests[*]}"
    else
        echo "cross compiled host, skipping tests"
    fi
}

src_install() {
    default

    # NOTE(compnerd) do not provide a link for hostname.  /bin is part of ${PATH} by default, and
    # allows for overloading of hostname from inetutils for a more feature-rich version if users
    # desire.  Install the manpage as hostname.coreutils to avoid conflicting with inetutils since
    # this command does not really support any arguments.
    edo mv "${IMAGE}/usr/$(exhost --target)/bin/hostname" "${IMAGE}/usr/$(exhost --target)/bin/hostname.${PN}"
    edo mv "${IMAGE}/usr/share/man/man1/hostname.1" "${IMAGE}/usr/share/man/man1/hostname.${PN}.1"

    alternatives_for hostname ${PN} 100 \
        /usr/$(exhost --target)/bin/hostname /usr/$(exhost --target)/bin/hostname.${PN} \
        /usr/share/man/man1/hostname.1 /usr/share/man/man1/hostname.${PN}.1

    insinto /etc
    newins "${WORK}/src/dircolors.hin" DIR_COLORS
}

pkg_preinst() {
    if exhost --is-native -q && [[ $(readlink -f "${ROOT##/}"/bin) == ${ROOT##/}/bin ]] ; then
        # NOTE(compnerd) preserve legacy paths for paludis
        for bin in bin/pwd bin/rm {,usr/}bin/readlink usr/bin/env ; do
            nonfatal edo rm "${ROOT}"/${bin} &&
            nonfatal edo cp "${IMAGE}"/usr/${CHOST}/bin/$(basename ${bin}) "${ROOT}"/${bin} ||
                eerror "Copying /${bin} failed"
        done
    fi
}

