# Copyright 2007 Bryan Ã˜stergaard
# Distributed under the terms of the GNU General Public License v2

require multilib gnu

export_exlib_phases src_unpack src_prepare src_configure src_compile src_install

SUMMARY="Collection of binary tools including ld and as"

LICENCES="GPL-2"
SLOT="0"
MYOPTIONS=""

DEPENDENCIES=""

# Tests require expect
# Tests run, and fail if expect is installed
RESTRICT="test"

DEFAULT_SRC_PREPARE_PATCHES=(
    "${FILES}/76_all_use-new-ld-dtags.patch"
)

binutils_src_unpack() {
    local multibuild_c_target

    for multibuild_c_target in ${MULTIBUILD_C_TARGETS} ; do
        mkdir -p "${WORK}/${multibuild_c_target}" || die "mkdir ${multibuild_c_target} failed"
        cd "${WORK}/${multibuild_c_target}" || die "entering ${multibuild_c_target} failed"
        default
    done
}

binutils_src_prepare() {
    local multibuild_c_target

    for multibuild_c_target in ${MULTIBUILD_C_TARGETS} ; do
        multibuild_switch_build_target C ${multibuild_c_target}

        cd "${WORK}/${multibuild_c_target}/${PNV}" || die "entering ${multibuild_c_target}/${PNV} failed"

        default

        if [[ ${multibuild_c_target} != ${MULTIBUILD_C_DEFAULT_TARGET} ]] ; then
            sed -e "s,^LIB_PATH = @LIB_PATH@,LIB_PATH = /usr/local/${LIBDIR}:/${LIBDIR}:/usr/${LIBDIR}:@LIB_PATH@," \
                -i "ld/Makefile.in" || die "failed to fix LIBDIR for non-default C build target (${multibuild_c_target})"
        fi
    done
}

binutils_src_configure() {
    local multibuild_c_target

    for multibuild_c_target in ${MULTIBUILD_C_TARGETS} ; do
        multibuild_switch_build_target C ${multibuild_c_target}

        cd "${WORK}/${multibuild_c_target}/${PNV}" || die "entering ${multibuild_c_target} failed"

        econf --enable-serial-configure --libdir=/usr/${LIBDIR} --hates=docdir
    done
}

binutils_src_compile() {
    local multibuild_c_target

    for multibuild_c_target in ${MULTIBUILD_C_TARGETS} ; do
        multibuild_switch_build_target C ${multibuild_c_target}

        cd "${WORK}/${multibuild_c_target}/${PNV}" || die "entering ${multibuild_c_target} failed"

        default
    done
}

binutils_src_install() {
    local multibuild_c_target

    for multibuild_c_target in ${MULTIBUILD_C_TARGETS} ; do
        multibuild_switch_build_target C ${multibuild_c_target}

        cd "${WORK}/${multibuild_c_target}/${PNV}" || die "entering ${multibuild_c_target} failed"

        default

        local maybe_empty_dir=( ${IMAGE}/usr/${LIBDIR}/* )
        if [[ ! -e ${maybe_empty_dir[0]} ]] ; then
            echo "rmdir ${IMAGE}/usr/${LIBDIR}"
            rmdir "${IMAGE}/usr/${LIBDIR}" || die "rmdir ${IMAGE}/usr/${LIBDIR}"
        fi

    done

    multibuild_switch_build_target C ${MULTIBUILD_C_DEFAULT_TARGET}

    for f in "${IMAGE}"/usr/${CHOST}/bin/* ; do
        target=${f#${IMAGE}}
        name=${f##*/}
        dosym ${target} /usr/bin/${CHOST}-${name}
        dosym ${target} /usr/bin/${name}
    done
}

