# Copyright 2007 Bryan Ã˜stergaard <kloeri@exherbo.org>
# Copyright 2008 Ingmar Vanhassel <ingmar@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'gcc.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation.

require multilib

SUMMARY="GNU Compiler Collection"
HOMEPAGE="http://gcc.gnu.org"
SOURCES="mirror://gnu/${PN}/${P}/${P}.tar.bz2"

LICENCES="GPL-2"
SLOT="${PV}"
MYOPTIONS="ada fortran java objc obj-c++ nls propolice"

DEPENDENCIES="
    build:
        sys-devel/make"
#   build: doc? ( app-doc/doxygen )

S="${T}/${CHOST}"
ECONF_SOURCE="${WORKDIR}"/${P}

src_configure() {
    LANGS="c++"
    for i in ada fortran objc obj-c++ java; do
        option ${i} && LANGS+=" ${i}"
    done
    LANGS="${LANGS/ /,}"

    DEFAULT_SRC_CONFIGURE_PARAMS=(
        --build=${CHOST}
        --disable-multilib
        --enable-languages="${LANGS[@]}"
    )
    DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=(
        "nls" "propolice libssp"
    )

    default
}

DEFAULT_SRC_COMPILE_PARAMS=( bootstrap )

# We should probably run default_src_test() here but that breaks for a reason I haven't figured out yet.
src_test() {
    :
}

src_install() {
    default

    cd "${D}"

    # Precompile headers, FIXME:
    # - Should use gcc version from $D instead of old system gcc
    # - We probably just need to pcecompile /usr/include/c++/4.3.1/x86_64-pc-linux-gnu/bits/stdc++.h
    #   gcc ./usr/include/c++/${PV}/${CHOST}/bits/stdc++.h
    # - ./configure --enable-libstdcxx-pch

    find . -name *.h -exec gcc {} \; || die "Precompiling headers failed"
    find . -name *.hpp -exec gcc {} \; || die "Precompiling headers failed"

    # Needed for fortan.
    keepdir /usr/$(get_libdir)/${PN}/${CHOST}/${PV}/finclude

    # if option doc; then
    #     cd "${CTARGET}"/libstdc++-v3
    #     emake doxygen-man
    # fi
}

pkg_postinst() {
    if [[ ! -e ${ROOT}/usr/bin/cc ]]; then
        ln -s "${ROOT}"/usr/bin/{g,}cc || echo "Failed to link ${ROOT}/usr/bin/cc to ${ROOT}/usr/bin/gcc."
    fi
}

