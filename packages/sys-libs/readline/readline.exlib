# Copyright 2007 Bryan Ã˜stergaard
# Copyright 2009, 2010 Ingmar Vanhassel
# Distributed under the terms of the GNU General Public License v2

MY_PV=${PV%_p*}
MY_PNV=${PN}-${MY_PV}

if [[ ${PV} == *_p* ]] ; then
    PATCH_LEVEL=${PNV##*_p}
else
    PATCH_LEVEL=0
fi

require flag-o-matic gnu [ suffix=gz ]

export_exlib_phases src_prepare src_configure src_compile

SUMMARY="GNU command line editing and history library"
DESCRIPTION="
The GNU Readline library provides a set of functions for use by applications that allow users to
edit command lines as they are typed in. Both Emacs and vi editing modes are available.
The Readline library includes additional functions to maintain a list of previously-entered command
lines, to recall and perhaps reedit those lines, and perform csh-like history expansion on previous
commands.
"
HOMEPAGE="http://cnswww.cns.cwru.edu/php/chet/${PN}/rltop.html"

if (( PATCH_LEVEL )) ; then
    DOWNLOADS+="
    $(for (( i=1; i<=PATCH_LEVEL; i++ )); do
        printf "ftp://ftp.cwru.edu/pub/bash/${MY_PNV}-patches/${PN}$(ever delete_all ${MY_PV})-%03d\n" ${i}
    done)"
fi

REMOTE_IDS="freecode:gnu${PN}"
UPSTREAM_CHANGELOG="http://cnswww.cns.cwru.edu/php/chet/${PN}/CHANGES"

LICENCES="GPL-3"
SLOT="0"
MYOPTIONS="
hosts:
    arm-exherbo-linux-gnueabi
    i686-pc-linux-gnu
    x86_64-pc-linux-gnu
"

DEPENDENCIES="
    build+run:
        sys-libs/ncurses[hosts:*?]
"

DEFAULT_SRC_INSTALL_PARAMS=(
    htmldir="/usr/share/doc/${PNVR}/html"

    # only affects where examples go and only when static is enabled
    installdir="/usr/share/doc/${PNVR}/examples"
)

readline_src_prepare() {
    if (( PATCH_LEVEL )) ; then
        local i patches=( -p0 )

        for (( i=1; i<=PATCH_LEVEL; i++ )) ; do
            patches+=( "${FETCHEDDIR}/${PN}$(ever delete_all ${MY_PV})-$(printf "%03d" ${i})" )
        done

        expatch "${patches[@]}"
    fi

    # Gentoo #71420
    edo sed -e 's:^SHLIB_LIBS=:SHLIB_LIBS=-lncurses:' -i support/shobj-conf

    default
}

readline_src_configure() {
    local host=

    for host in ${CROSS_COMPILE_TARGETS} ; do
        if option !hosts:${host} ; then
            echo "    Cross-Compile Host: ${host} (disabled)"
            continue
        fi

        echo "    Cross-Compile Host: ${host}"

        edo mkdir -p "${WORKBASE}/build/${host}"
        edo cd "${WORKBASE}/build/${host}"

        edo "${WORKBASE}/${MY_PNV}/configure"   \
                --build=${CHOST}                \
                --host=${host}                  \
                --prefix=/usr/${host}           \
                --datarootdir=/usr/share        \
                --localstatedir=/var            \
                --sysconfdir=/etc               \
        || die
    done
}

readline_src_compile() {
    local host=

    for host in ${CROSS_COMPILE_TARGETS} ; do
        if option !hosts:${host} ; then
            echo "    Cross-Compile Host: ${host} (disabled)"
            continue
        fi

        echo "    Cross-Compile Host: ${host}"
        edo cd "${WORKBASE}/build/${host}"

        default
    done
}

readline_src_install() {
    local host=

    for host in ${CROSS_COMPILE_TARGETS} ; do
        if option !hosts:${host} ; then
            echo "    Cross-Compile Host: ${host} (disabled)"
            continue
        fi

        echo "    Cross-Compile Host: ${host}"
        edo cd "${WORKBASE}/build/${host}"

        default
        edo rmdir "${IMAGE}/usr/${host}/bin"
    done
}

