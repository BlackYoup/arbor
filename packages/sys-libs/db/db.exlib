# Copyright 2008 Bryan Ã˜stergaard
# Copyright 2008, 2009, 2010 Ingmar Vanhassel
# Distributed under the terms of the GNU General Public License v2

MY_PNV=${PV%_p*}
PATCH_LEVEL=${PNV##*_p}

require multilib alternatives

export_exlib_phases src_prepare src_test_expensive src_install

SUMMARY="Berkeley DB embeddable database engine"
HOMEPAGE="http://www.oracle.com/database/berkeley-${PN}/${PN}/index.html"
DOWNLOADS="http://download.oracle.com/berkeley-${PN}/${PN}-${MY_PNV}.tar.gz
    $(for ((i=1 ; i<=PATCH_LEVEL ; i++ )) ; do
        echo "http://www.oracle.com/technology/products/berkeley-db/${PN}/update/${MY_PNV}/patch.${MY_PNV}.${i} -> ${PN}-${MY_PNV}.${i}.patch"
      done)"

LICENCES="as-is"
SLOT="$(ever range 1-2)"
MYOPTIONS="doc
    tcl [[ description = [ Build tcl bindings. Should be enabled if you want to run expensive tests ] ]]"

DEPENDENCIES="
    test-expensive:
        dev-lang/tcl
    build+run:
        !sys-libs/db:0 [[ description = [ Uninstall sys-libs/db:0 before installing slotted versions of Berkely DB ] ]]
        tcl? ( dev-lang/tcl )
"

ECONF_SOURCE="${WORKBASE}/${PN}-${MY_PNV}/dist"
WORK="${WORKBASE}/${PN}-${MY_PNV}/build_unix"

AT_M4DIR=( aclocal aclocal_java )
DEFAULT_SRC_CONFIGURE_PARAMS=(
    --includedir=/usr/include/${PN}${SLOT}
    --enable-compat185
    --enable-cxx
    --disable-java
)
DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=( tcl 'tcl test' )
DEFAULT_SRC_CONFIGURE_OPTION_WITHS=( "tcl tcl /usr/$(get_libdir)" )
DEFAULT_SRC_INSTALL_PARAMS=( STRIP=: )

db_src_prepare() {
    cd "${WORKBASE}/${PN}-${MY_PNV}/" || die "Couldn't enter ${WORKBASE}/${PN}-${MY_PNV}/"

    local patches=()
    for ((i=1; i<=PATCH_LEVEL; i++)); do
        patches+=( "${FETCHEDDIR}/${PN}-${MY_PNV}.${i}.patch" )
    done
    expatch -p0 "${patches[@]}"

    cd "${WORKBASE}/${PN}-${MY_PNV}/dist/" || die "Couldn't enter ${WORKBASE}/${PN}-${MY_PNV}/dist/"

    # Allow --docdir to work
    sed -re "/^docdir/s:=\s+.*:= \$(prefix)/share/doc/${PNVR}:" -i ./Makefile.in || die "Docdir sed"
    # Hack in something similar --program-transform-name, simplifies slotting
    sed -e '/INSTALLER.*bindir/s:$(bindir)/$$i:$(bindir)/`echo $$i | sed '"'s/${PN}/${PN}${SLOT}/'"'`:' \
        -e     '/CHMOD.*bindir/s:$(bindir)/$$i:$(bindir)/`echo $$i | sed '"'s/${PN}/${PN}${SLOT}/'"'`:' \
        -i ./Makefile.in || die "Program-transform-suffix sed"
}

db_src_test_expensive() {
    if option !tcl ; then
        ewarn "${CATEGORY}/${PN} needs the 'tcl' option enabled to run expensive tests"
        return
    fi

cat <<EOF > testrunner.tcl
source ../test/test.tcl
run_std
EOF
    tclsh testrunner.tcl
    grep -qs '^FAIL' ALL.OUT && die "Some tests failed, see ${WORK}/ALL.OUT"
}

db_src_install() {
    default

    if option !doc ; then
        rm -r "${IMAGE}"/usr/share || die 'Failed to remove api docs'
    fi

    rm "${IMAGE}"/usr/$(get_libdir)/libdb{,_cxx}{.so,.a,-$(ever major).so} ||
        die "Couldn't remove unversioned libraries"

    option tcl && edo rm "${IMAGE}"/usr/$(get_libdir)/libdb_tcl.so

    local alternatives=() replace_me
    pushd "${IMAGE}" || die "Couldn't enter IMAGE"

    # Binaries,     /usr/bin/${PN}_*                -> /usr/bin/${PN}${SLOT}_*
    for src in usr/bin/${PN}${SLOT}_* ; do
        target=${src/${SLOT}/}
        alternatives+=( /${target} ${src##*/} )
    done

    # Includes      /usr/include/*.h                -> /usr/include/${PN}${SLOT}/*.h
    replace_me=${PN}${SLOT}/
    for src in usr/include/${replace_me}/*.h ; do
        target=${src/${replace_me}}
        alternatives+=( /${target} ${src##usr/include/} )
    done

    # Libraries,    /usr/lib/lib*.*                 -> /usr/lib/lib*-${SLOT}.*
    replace_me=-${SLOT}
    for src in usr/$(get_libdir)/lib*${replace_me}.* ; do
        target=${src/${replace_me}}
        alternatives+=( /${target} ${src##*/} )
    done

    # Libraries,    /usr/lib/lib*-$(ever major).so   -> /usr/lib/lib*-${SLOT}.so
    replace_me=-$(ever major)
    for src in usr/$(get_libdir)/libdb{,_cxx}${replace_me}.so ; do
        target=${src/${replace_me}/-${SLOT}}
        alternatives+=( /${target} ${src##*/} )
    done
    popd || die "Couldn't leave IMAGE"

    alternatives_for ${PN} ${SLOT} ${SLOT} "${alternatives[@]}"
}

