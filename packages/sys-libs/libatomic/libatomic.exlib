# Copyright 2015 Saleem Abdulrasool <compnerd@compnerd.org>
# Distributed under the terms of the GNU General Public License v2

require gnu [ suffix=bz2 subdir=gcc-${PV} pn=gcc ]
require toolchain-runtime-libraries

SUMMARY="GNU Atomic Library"
LICENCES="GPL-2"
if [[ ${PV} == *_pre* ]] ; then
    DOWNLOADS="ftp://gcc.gnu.org/pub/gcc/snapshots/$(ever major)-${PV##*_pre}/gcc-$(ever major)-${PV//*_pre}.tar.bz2"
elif [[ ${PV} == *_rc* ]] ; then
    DOWNLOADS="ftp://gcc.gnu.org/pub/gcc/snapshots/$(ever major)-RC-${PV##*_rc}/gcc-${PV%_rc*}-RC-${PV##*_rc}.tar.bz2"
fi

# TODO(compnerd) drop the 5.x -> 5.1 mapping for the SLOT when 5.x is removed.
# TODO(compnerd) drop the old slotting when gcc 4.x is removed
if ever at_least 6.0 ; then
    SLOT="$(ever major)"
elif ever at_least 5.2 ; then
    SLOT=5.1
else
    SLOT="$(ever range 1-2)"
fi

MYOPTIONS=""

DEPENDENCIES="
    build:
        sys-devel/binutils[>=2.20.1] [[ note = [ minimal version of binutils for LTO ] ]]
"

REMOTE_IDS="freecode:gcc"

UPSTREAM_RELEASE_NOTES="${HOMEPAGE}gcc-${SLOT}/"
UPSTREAM_CHANGELOG="${UPSTREAM_RELEASE_NOTES}changes.html"

DEFAULT_SRC_PREPARE_PATCHES+=( "${FILES}/libatomic-4.8.1-dependency-tracking.patch" )

if [[ ${PV} == *_pre* ]] ; then
    ECONF_SOURCE="${WORKBASE}/gcc-$(ever major)-${PV##*_pre}/libatomic"
    WORK="${WORKBASE}/gcc-$(ever major)-${PV##*_pre}/build/$(exhost --target)/libatomic"
else
    ECONF_SOURCE="${WORKBASE}/gcc-${PV/_p?(re)/-}/libatomic"
    WORK="${WORKBASE}/gcc-${PV/_p?(re)/-}/build/$(exhost --target)/libatomic"
fi

# Those tests previously only ran during gcc's test_expensive phase, however
# they fail completely now:  "... unexpected failures: 22 ..." (4.9.2)
RESTRICT="test"

DEFAULT_SRC_CONFIGURE_PARAMS=( --disable-multilib )

libatomic_src_unpack() {
    default
    mkdir -p "${WORK}"
}

libatomic_src_prepare() {
    cd "${ECONF_SOURCE}/.."
    default
}

libatomic_src_install() {
    default

    symlink_dynamic_libs ${PN}
    slot_dynamic_libs ${PN}
    slot_other_libs ${PN}.{a,la}

    nonfatal edo rmdir "${IMAGE}"/usr/$(exhost --target)/lib
}

export_exlib_phases src_unpack src_prepare src_install

