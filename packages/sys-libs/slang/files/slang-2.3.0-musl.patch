Upstream: yes
Reason: fixes musl build

From 0a1865999da108bf354262239f5705451e51bdf0 Mon Sep 17 00:00:00 2001
From: "John E. Davis" <jed@jedsoft.org>
Date: Mon, 14 Dec 2015 18:24:12 -0500
Subject: [PATCH] pre2.3.1-36: Rename the posix_close function to avoid
 conflict with an upcoming POSIX standard.

---
 src/slposio.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/slposio.c b/src/slposio.c
index 94f20dd..22447fc 100644
--- a/src/slposio.c
+++ b/src/slposio.c
@@ -372,7 +372,7 @@ static int posix_close_fd (int *fd)
    return 0;
 }
 
-static int posix_close (SLFile_FD_Type *f)
+static int posix_close_slfd (SLFile_FD_Type *f)
 {
    int status = do_close (f);
 
@@ -1011,7 +1011,7 @@ static SLang_Intrin_Fun_Type Fd_Name_Table [] =
    MAKE_INTRINSIC_2("write", posix_write, V, F, B),
    MAKE_INTRINSIC_1("dup_fd", posix_dup, V, F),
    MAKE_INTRINSIC_2("dup2_fd", posix_dup2, I, F, I),
-   MAKE_INTRINSIC_1("close", posix_close, I, F),
+   MAKE_INTRINSIC_1("close", posix_close_slfd, I, F),
    MAKE_INTRINSIC_1("_close", posix_close_fd, I, I),
 #if defined(TTYNAME_R)
    MAKE_INTRINSIC_0("ttyname", posix_ttyname, V),
-- 
2.9.0

