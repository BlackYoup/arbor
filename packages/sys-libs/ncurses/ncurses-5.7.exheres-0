# Copyright 2007 Bryan Ã˜stergaard
# Distributed under the terms of the GNU General Public License v2

require multilib gnu [ suffix=gz ]

SUMMARY="Free software emulation of curses using Terminfo formats"

LICENCES="as-is"
SLOT="0"
PLATFORMS="~amd64 ~arm ~ia64 ~ppc64 ~x86"
MYOPTIONS="gpm unicode"

DEPENDENCIES="
    build+run:
        gpm? ( sys-libs/gpm )"

DEFAULT_SRC_CONFIGURE_PARAMS=( '--with-shared' '--with-normal' '--without-termcap' '--without-hashed-db' )
DEFAULT_SRC_CONFIGURE_OPTION_WITHS=( gpm )

WORK="${WORKBASE}/build"
ECONF_SOURCE="${WORKBASE}/${PNV}"

src_unpack() {
    default
    mkdir "${WORK}" || die "mkdir ${WORK} failed"
}

src_configure() {
    local abi

    for abi in ${ABIS_C} ; do
        switch_abi_env C ${abi}

        mkdir "${WORK}/${abi}" || die "mkdir ${abi} failed"

        mkdir "${WORK}/${abi}/narrow" || die "mkdir narrow failed"
        cd "${WORK}/${abi}/narrow" || die "entering narrow failed"

        if [[ ${abi} == ${DEFAULT_ABI_C} ]] ; then
            CTARGET= default
        else
            default
        fi

        if option unicode ; then
            mkdir "${WORK}/${abi}/wide" || die "mkdir wide failed"
            cd "${WORK}/${abi}/wide" || die "entering wide failed"

            if [[ ${abi} == ${DEFAULT_ABI_C} ]] ; then
                CTARGET= econf "${DEFAULT_SRC_CONFIGURE_PARAMS[@]}"  \
                               --includedir=/usr/include/ncursesw    \
                               --enable-widec $(option_with gpm)
            else
                econf "${DEFAULT_SRC_CONFIGURE_PARAMS[@]}"  \
                      --includedir=/usr/include/ncursesw    \
                      --enable-widec $(option_with gpm)
            fi
        fi
    done
}

src_compile() {
    local abi

    for abi in ${ABIS_C} ; do
        switch_abi_env C ${abi}

        cd "${WORK}/${abi}/narrow" || die "entering narrow failed"
        default

        if option unicode ; then
            cd "${WORK}/${abi}/wide" || die "entering wide failed"
            default
        fi
    done
}

src_install() {
    local abi

    for abi in ${ABIS_C} ; do
        switch_abi_env C ${abi}

        cd "${WORK}/${abi}/narrow" || die "entering narrow failed"
        default

        if option unicode ; then
            cd "${WORK}/${abi}/wide" || die "entering wide failed"
            default
        fi
    done
}

