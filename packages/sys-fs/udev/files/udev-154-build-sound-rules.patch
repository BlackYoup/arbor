Upstream: no.  Similar patch has been ack'ed on the mailing list, waiting on an updated copy to apply.
Source: Saleem Abdulrasool <compnerd@compnerd.org>
Reason: sound rules are needed for pulseaudio to function, however, not everyone needs the functionality or the dependencies

Edited by Daniel Mierswa <impulze@impulze.org> for udev-156.

diff -Naur udev-154/configure.ac udev-154/configure.ac
--- udev-154/configure.ac	2010-05-15 05:46:22.000000000 +0200
+++ udev-154/configure.ac	2010-05-15 06:00:59.000000000 +0200
@@ -56,6 +56,44 @@
 fi
 AM_CONDITIONAL([ENABLE_GUDEV], [test x"$enable_gudev" = x"yes"])
 
+AC_ARG_ENABLE([usb-db],
+	AS_HELP_STRING([--disable-usb-db], [disable USB device database]),
+	[], [enable_usb_db=yes])
+if test x"$enable_usb_db" = x"yes" ; then
+	PKG_CHECK_MODULES(USBUTILS, usbutils >= 0.82)
+	AC_SUBST([USB_DATABASE], [$($PKG_CONFIG --variable=usbids usbutils)])
+fi
+AM_CONDITIONAL([ENABLE_USB_DB], [test x"$enable_usb_db" = x"yes"])
+
+AC_ARG_ENABLE([pci-db],
+	AS_HELP_STRING([--disable-pci-db], [disable PCI device database]),
+	[], [enable_pci_db=yes])
+if test x"$enable_pci_db" = x"yes" ; then
+	AC_CHECK_FILES([/usr/share/pci.ids], [pciids=/usr/share/pci.ids])
+	AC_CHECK_FILES([/usr/share/hwdata/pci.ids], [pciids=/usr/share/hwdata/pci.ids])
+	AC_CHECK_FILES([/usr/share/misc/pci.ids], [pciids=/usr/share/misc/pci.ids])
+	AC_ARG_WITH(pci-ids-path,
+		AS_HELP_STRING([--with-pci-ids-path=DIR], [Path to pci.ids file]),
+		[PCI_DATABASE=${withval}],
+		[if test -n "$pciids" ; then
+			PCI_DATABASE="$pciids"
+		else
+			AC_MSG_ERROR([pci.ids not found, try --with-pci-ids-path=])
+		fi])
+	AC_SUBST(PCI_DATABASE)
+fi
+AM_CONDITIONAL([ENABLE_PCI_DB], [test x"$enable_pci_db" = x"yes"])
+
+AC_ARG_ENABLE([sound-rules],
+	AS_HELP_STRING([--disable-sound-rules], [disable sound rules]),
+	[], [enable_sound_rules=yes])
+if test x"$enable_sound_rules" = x"yes" ; then
+	if test x"enable_usb_db" = x"no" || test x"$enable_pci_db" = x"no" ; then
+		AC_MSG_ERROR([sound rules require usb-db and pci-db to be built])
+	fi
+fi
+AM_CONDITIONAL([ENABLE_SOUND_RULES], [test x"$enable_sound_rules" = x"yes"])
+
 AC_ARG_WITH(firmware-path,
 	AS_HELP_STRING([--with-firmware-path=DIR[[[:DIR[...]]]]],
 	   [Firmware search path (default=/lib/firmware/updates:/lib/firmware)]),
@@ -90,22 +128,6 @@
 	AC_SUBST(LIBUSB_CFLAGS)
 	AC_SUBST(LIBUSB_LIBS)
 
-	PKG_CHECK_MODULES(USBUTILS, usbutils >= 0.82)
-	AC_SUBST([USB_DATABASE], [$($PKG_CONFIG --variable=usbids usbutils)])
-
-	AC_CHECK_FILES([/usr/share/pci.ids], [pciids=/usr/share/pci.ids])
-	AC_CHECK_FILES([/usr/share/hwdata/pci.ids], [pciids=/usr/share/hwdata/pci.ids])
-	AC_CHECK_FILES([/usr/share/misc/pci.ids], [pciids=/usr/share/misc/pci.ids])
-	AC_ARG_WITH(pci-ids-path,
-		AS_HELP_STRING([--with-pci-ids-path=DIR], [Path to pci.ids file]),
-		[PCI_DATABASE=${withval}],
-		[if test -n "$pciids" ; then
-			PCI_DATABASE="$pciids"
-		else
-			AC_MSG_ERROR([pci.ids not found, try --with-pci-ids-path=])
-		fi])
-	AC_SUBST(PCI_DATABASE)
-
 	AC_CHECK_HEADER([linux/input.h], [:], AC_MSG_ERROR([kernel headers not found]))
 	AC_SUBST([INCLUDE_PREFIX], [$(echo '#include <linux/input.h>' | eval $ac_cpp -E - | sed -n '/linux\/input.h/ {s:.*"\(.*\)/linux/input.h".*:\1:; p; q}')])
 fi
@@ -115,6 +137,10 @@
 	AS_HELP_STRING([--disable-introspection], [disable GObject introspection]),
 	[], [enable_introspection=yes])
 if test "x$enable_introspection" = xyes; then
+	if test x"$enable_gudev" != x"yes" ; then
+		AC_MSG_ERROR(["introspection requires that gudev is built"])
+	fi
+
 	PKG_CHECK_MODULES([INTROSPECTION], [gobject-introspection-1.0 >= 0.6.2])
 	AC_DEFINE([ENABLE_INTROSPECTION], [1], [enable GObject introspection support])
 	AC_SUBST([G_IR_SCANNER], [$($PKG_CONFIG --variable=g_ir_scanner gobject-introspection-1.0)])
diff -Naur udev-154/Makefile.am udev-154/Makefile.am
--- udev-154/Makefile.am	2010-05-15 05:53:38.000000000 +0200
+++ udev-154/Makefile.am	2010-05-15 06:03:23.000000000 +0200
@@ -405,14 +405,37 @@
 
 endif # ENABLE_GUDEV
 
+if ENABLE_USB_DB
+# ------------------------------------------------------------------------------
+# usb-db - read USB vendor/device string database
+# ------------------------------------------------------------------------------
+extras_usb_db_usb_db_SOURCES = extras/usb-db/usb-db.c
+extras_usb_db_usb_db_CPPFLAGS = $(AM_CPPFLAGS) -DUSB_DATABASE=\"$(USB_DATABASE)\" -DBUILD_FOR_USB
+extras_usb_db_usb_db_LDADD = libudev/libudev-private.la
+libexec_PROGRAMS += extras/usb-db/usb-db
+endif # ENABLE_USB_DB
+
+if ENABLE_PCI_DB
+# ------------------------------------------------------------------------------
+# pci-db - read PCI vendor/device string database
+# ------------------------------------------------------------------------------
+extras_usb_db_pci_db_SOURCES = extras/usb-db/usb-db.c
+extras_usb_db_pci_db_CPPFLAGS = $(AM_CPPFLAGS) -DPCI_DATABASE=\"$(PCI_DATABASE)\" -DBUILD_FOR_PCI
+extras_usb_db_pci_db_LDADD = libudev/libudev-private.la
+libexec_PROGRAMS += extras/usb-db/pci-db
+endif # ENABLE_PCI_DB
+
+if ENABLE_SOUND_RULES
+dist_udevrules_DATA += rules/rules.d/78-sound-card.rules
+endif # ENABLE_SOUND_RULES
+
 if ENABLE_EXTRAS
 # ------------------------------------------------------------------------------
 # conditional extras (need glib, libusb, libacl, ...)
 # ------------------------------------------------------------------------------
 dist_udevrules_DATA += \
 	rules/rules.d/75-net-description.rules \
-	rules/rules.d/75-tty-description.rules \
-	rules/rules.d/78-sound-card.rules
+	rules/rules.d/75-tty-description.rules
 
 # ------------------------------------------------------------------------------
 # Bluetooth HID devices with special magic to switch the device
@@ -439,22 +462,6 @@
 INSTALL_EXEC_HOOKS += udevacl-install-hook
 
 # ------------------------------------------------------------------------------
-# usb-db - read USB vendor/device string database
-# ------------------------------------------------------------------------------
-extras_usb_db_usb_db_SOURCES = extras/usb-db/usb-db.c
-extras_usb_db_usb_db_CPPFLAGS = $(AM_CPPFLAGS) -DUSB_DATABASE=\"$(USB_DATABASE)\" -DBUILD_FOR_USB
-extras_usb_db_usb_db_LDADD = libudev/libudev-private.la
-libexec_PROGRAMS += extras/usb-db/usb-db
-
-# ------------------------------------------------------------------------------
-# pci-db - read PCI vendor/device string database
-# ------------------------------------------------------------------------------
-extras_usb_db_pci_db_SOURCES = extras/usb-db/usb-db.c
-extras_usb_db_pci_db_CPPFLAGS = $(AM_CPPFLAGS) -DPCI_DATABASE=\"$(PCI_DATABASE)\" -DBUILD_FOR_PCI
-extras_usb_db_pci_db_LDADD = libudev/libudev-private.la
-libexec_PROGRAMS += extras/usb-db/pci-db
-
-# ------------------------------------------------------------------------------
 # mobile-action-modeswitch - switch Mobile Action cables into serial mode
 # ------------------------------------------------------------------------------
 extras_mobile_action_modeswitch_mobile_action_modeswitch_SOURCES =\
