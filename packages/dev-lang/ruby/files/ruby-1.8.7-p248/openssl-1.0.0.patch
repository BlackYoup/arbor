Source: upstream, SVN r26781, r27465, r27460 (slightly modified)
Upstream: yes
Reason: fix build with >=openssl-1.0.0

diff -r -u ruby-1.8.7-p248/ext/openssl/extconf.rb ruby-1.8.7-p248.new/ext/openssl/extconf.rb
--- ruby-1.8.7-p248/ext/openssl/extconf.rb	2007-06-18 11:03:15.000000000 +0200
+++ ruby-1.8.7-p248.new/ext/openssl/extconf.rb	2010-07-15 18:43:03.968097306 +0200
@@ -95,6 +95,7 @@
 have_func("X509_STORE_set_ex_data")
 have_func("OBJ_NAME_do_all_sorted")
 have_func("SSL_SESSION_get_id")
+have_func("SSL_SESSION_cmp")
 have_func("OPENSSL_cleanse")
 if try_compile("#define FOO(a, ...) foo(a, ##__VA_ARGS__)\n int x(){FOO(1);FOO(1,2);FOO(1,2,3);}\n")
   $defs.push("-DHAVE_VA_ARGS_MACRO")
@@ -106,6 +107,14 @@
   have_func("ENGINE_get_digest")
   have_func("ENGINE_get_cipher")
   have_func("ENGINE_cleanup")
+  have_func("ENGINE_load_4758cca")
+  have_func("ENGINE_load_aep")
+  have_func("ENGINE_load_atalla")
+  have_func("ENGINE_load_chil")
+  have_func("ENGINE_load_cswift")
+  have_func("ENGINE_load_nuron")
+  have_func("ENGINE_load_sureware")
+  have_func("ENGINE_load_ubsec")
 end
 if try_compile(<<SRC)
 #include <openssl/opensslv.h>
diff -r -u ruby-1.8.7-p248/ext/openssl/ossl.c ruby-1.8.7-p248.new/ext/openssl/ossl.c
--- ruby-1.8.7-p248/ext/openssl/ossl.c	2007-06-08 17:02:04.000000000 +0200
+++ ruby-1.8.7-p248.new/ext/openssl/ossl.c	2010-07-15 18:55:52.473848318 +0200
@@ -92,7 +92,7 @@

 #define OSSL_IMPL_SK2ARY(name, type)	        \
 VALUE						\
-ossl_##name##_sk2ary(STACK *sk)			\
+ossl_##name##_sk2ary(STACK_OF(type) *sk)	\
 {						\
     type *t;					\
     int i, num;					\
@@ -102,7 +102,7 @@
 	OSSL_Debug("empty sk!");		\
 	return Qnil;				\
     }						\
-    num = sk_num(sk);				\
+    num = sk_##type##_num(sk);			\
     if (num < 0) {				\
 	OSSL_Debug("items in sk < -1???");	\
 	return rb_ary_new();			\
@@ -110,7 +110,7 @@
     ary = rb_ary_new2(num);			\
 						\
     for (i=0; i<num; i++) {			\
-	t = (type *)sk_value(sk, i);		\
+	t = sk_##type##_value(sk, i);		\
 	rb_ary_push(ary, ossl_##name##_new(t));	\
     }						\
     return ary;					\
diff -r -u ruby-1.8.7-p248/ext/openssl/ossl_config.c ruby-1.8.7-p248.new/ext/openssl/ossl_config.c
--- ruby-1.8.7-p248/ext/openssl/ossl_config.c	2009-11-18 06:20:22.000000000 +0100
+++ ruby-1.8.7-p248.new/ext/openssl/ossl_config.c	2010-07-15 20:25:55.752097933 +0200
@@ -302,15 +302,16 @@
     return ossl_config_get_section(self, section);
 }

-#ifdef IMPLEMENT_LHASH_DOALL_ARG_FN
+#if defined(IMPLEMENT_LHASH_DOALL_ARG_FN) && defined(LHASH_OF)
 static void
-get_conf_section(CONF_VALUE *cv, VALUE ary)
+get_conf_section_doall_arg(CONF_VALUE *cv, void* tmp)
 {
+    VALUE ary = (VALUE) tmp;
     if(cv->name) return;
     rb_ary_push(ary, rb_str_new2(cv->section));
 }

-static IMPLEMENT_LHASH_DOALL_ARG_FN(get_conf_section, CONF_VALUE*, VALUE);
+static IMPLEMENT_LHASH_DOALL_ARG_FN(get_conf_section, CONF_VALUE, void);

 static VALUE
 ossl_config_get_sections(VALUE self)
@@ -320,14 +321,16 @@

     GetConfig(self, conf);
     ary = rb_ary_new();
-    lh_doall_arg(conf->data, LHASH_DOALL_ARG_FN(get_conf_section), (void*)ary);
+    lh_doall_arg((_LHASH *)conf->data, LHASH_DOALL_ARG_FN(get_conf_section),
+		 (void*)ary);

     return ary;
 }

 static void
-dump_conf_value(CONF_VALUE *cv, VALUE str)
+dump_conf_value_doall_arg(CONF_VALUE *cv, void *tmp)
 {
+    VALUE str = (VALUE)tmp;
     STACK_OF(CONF_VALUE) *sk;
     CONF_VALUE *v;
     int i, num;
@@ -348,7 +351,7 @@
     rb_str_cat2(str, "\n");
 }

-static IMPLEMENT_LHASH_DOALL_ARG_FN(dump_conf_value, CONF_VALUE*, VALUE);
+static IMPLEMENT_LHASH_DOALL_ARG_FN(dump_conf_value, CONF_VALUE, void);

 static VALUE
 dump_conf(CONF *conf)
@@ -356,7 +359,8 @@
     VALUE str;

     str = rb_str_new(0, 0);
-    lh_doall_arg(conf->data, LHASH_DOALL_ARG_FN(dump_conf_value), (void*)str);
+    lh_doall_arg((_LHASH *)conf->data, LHASH_DOALL_ARG_FN(dump_conf_value),
+		 (void*)str);

     return str;
 }
@@ -372,7 +376,7 @@
 }

 static void
-each_conf_value(CONF_VALUE *cv, void* dummy)
+each_conf_value_doall_arg(CONF_VALUE *cv, void *dummy)
 {
     STACK_OF(CONF_VALUE) *sk;
     CONF_VALUE *v;
@@ -392,7 +396,7 @@
     }
 }

-static IMPLEMENT_LHASH_DOALL_ARG_FN(each_conf_value, CONF_VALUE*, void*);
+static IMPLEMENT_LHASH_DOALL_ARG_FN(each_conf_value, CONF_VALUE, void *);

 static VALUE
 ossl_config_each(VALUE self)
@@ -400,7 +404,8 @@
     CONF *conf;

     GetConfig(self, conf);
-    lh_doall_arg(conf->data, LHASH_DOALL_ARG_FN(each_conf_value), (void*)NULL);
+    lh_doall_arg((_LHASH *)conf->data, LHASH_DOALL_ARG_FN(each_conf_value),
+		 (void*)NULL);

     return self;
 }
diff -r -u ruby-1.8.7-p248/ext/openssl/ossl_engine.c ruby-1.8.7-p248.new/ext/openssl/ossl_engine.c
--- ruby-1.8.7-p248/ext/openssl/ossl_engine.c	2007-06-08 17:02:04.000000000 +0200
+++ ruby-1.8.7-p248.new/ext/openssl/ossl_engine.c	2010-07-15 18:43:03.972097515 +0200
@@ -61,16 +61,34 @@
     }
     StringValue(name);
 #ifndef OPENSSL_NO_STATIC_ENGINE
+#if HAVE_ENGINE_LOAD_DYNAMIC
     OSSL_ENGINE_LOAD_IF_MATCH(dynamic);
+#endif
+#if HAVE_ENGINE_LOAD_CSWIFT
     OSSL_ENGINE_LOAD_IF_MATCH(cswift);
+#endif
+#if HAVE_ENGINE_LOAD_CHIL
     OSSL_ENGINE_LOAD_IF_MATCH(chil);
+#endif
+#if HAVE_ENGINE_LOAD_ATALLA
     OSSL_ENGINE_LOAD_IF_MATCH(atalla);
+#endif
+#if HAVE_ENGINE_LOAD_NURON
     OSSL_ENGINE_LOAD_IF_MATCH(nuron);
+#endif
+#if HAVE_ENGINE_LOAD_UBSEC
     OSSL_ENGINE_LOAD_IF_MATCH(ubsec);
+#endif
+#if HAVE_ENGINE_LOAD_AEP
     OSSL_ENGINE_LOAD_IF_MATCH(aep);
+#endif
+#if HAVE_ENGINE_LOAD_SUREWARE
     OSSL_ENGINE_LOAD_IF_MATCH(sureware);
+#endif
+#if HAVE_ENGINE_LOAD_4758CCA
     OSSL_ENGINE_LOAD_IF_MATCH(4758cca);
 #endif
+#endif
 #ifdef HAVE_ENGINE_LOAD_OPENBSD_DEV_CRYPTO
     OSSL_ENGINE_LOAD_IF_MATCH(openbsd_dev_crypto);
 #endif
diff -r -u ruby-1.8.7-p248/ext/openssl/ossl.h ruby-1.8.7-p248.new/ext/openssl/ossl.h
--- ruby-1.8.7-p248/ext/openssl/ossl.h	2008-06-29 10:16:02.000000000 +0200
+++ ruby-1.8.7-p248.new/ext/openssl/ossl.h	2010-07-15 18:55:52.478848458 +0200
@@ -108,6 +108,13 @@
 } while (0)

 /*
+ * Compatibility
+ */
+#if OPENSSL_VERSION_NUMBER >= 0x10000000L
+#define STACK _STACK
+#endif
+
+/*
  * String to HEXString conversion
  */
 int string2hex(char *, int, char **, int *);
diff -r -u ruby-1.8.7-p248/ext/openssl/ossl_pkcs7.c ruby-1.8.7-p248.new/ext/openssl/ossl_pkcs7.c
--- ruby-1.8.7-p248/ext/openssl/ossl_pkcs7.c	2007-06-08 17:02:04.000000000 +0200
+++ ruby-1.8.7-p248.new/ext/openssl/ossl_pkcs7.c	2010-07-15 18:55:52.479847480 +0200
@@ -570,12 +570,11 @@
     return self;
 }

-static STACK *
-pkcs7_get_certs_or_crls(VALUE self, int want_certs)
+static STACK_OF(X509) *
+pkcs7_get_certs(VALUE self)
 {
     PKCS7 *pkcs7;
     STACK_OF(X509) *certs;
-    STACK_OF(X509_CRL) *crls;
     int i;

     GetPKCS7(self, pkcs7);
@@ -583,17 +582,38 @@
     switch(i){
     case NID_pkcs7_signed:
         certs = pkcs7->d.sign->cert;
-        crls = pkcs7->d.sign->crl;
         break;
     case NID_pkcs7_signedAndEnveloped:
         certs = pkcs7->d.signed_and_enveloped->cert;
+        break;
+    default:
+        certs = NULL;
+    }
+
+    return certs;
+}
+
+static STACK_OF(X509_CRL) *
+pkcs7_get_crls(VALUE self)
+{
+    PKCS7 *pkcs7;
+    STACK_OF(X509_CRL) *crls;
+    int i;
+
+    GetPKCS7(self, pkcs7);
+    i = OBJ_obj2nid(pkcs7->type);
+    switch(i){
+    case NID_pkcs7_signed:
+        crls = pkcs7->d.sign->crl;
+        break;
+    case NID_pkcs7_signedAndEnveloped:
         crls = pkcs7->d.signed_and_enveloped->crl;
         break;
     default:
-        certs = crls = NULL;
+        crls = NULL;
     }

-    return want_certs ? certs : crls;
+    return crls;
 }

 static VALUE
@@ -608,7 +628,7 @@
     STACK_OF(X509) *certs;
     X509 *cert;

-    certs = pkcs7_get_certs_or_crls(self, 1);
+    certs = pkcs7_get_certs(self);
     while((cert = sk_X509_pop(certs))) X509_free(cert);
     rb_block_call(ary, rb_intern("each"), 0, 0, ossl_pkcs7_set_certs_i, self);

@@ -618,7 +638,7 @@
 static VALUE
 ossl_pkcs7_get_certificates(VALUE self)
 {
-    return ossl_x509_sk2ary(pkcs7_get_certs_or_crls(self, 1));
+    return ossl_x509_sk2ary(pkcs7_get_certs(self));
 }

 static VALUE
@@ -648,7 +668,7 @@
     STACK_OF(X509_CRL) *crls;
     X509_CRL *crl;

-    crls = pkcs7_get_certs_or_crls(self, 0);
+    crls = pkcs7_get_crls(self);
     while((crl = sk_X509_CRL_pop(crls))) X509_CRL_free(crl);
     rb_block_call(ary, rb_intern("each"), 0, 0, ossl_pkcs7_set_crls_i, self);

@@ -658,7 +678,7 @@
 static VALUE
 ossl_pkcs7_get_crls(VALUE self)
 {
-    return ossl_x509crl_sk2ary(pkcs7_get_certs_or_crls(self, 0));
+    return ossl_x509crl_sk2ary(pkcs7_get_crls(self));
 }

 static VALUE
diff -r -u ruby-1.8.7-p248/ext/openssl/ossl_ssl.c ruby-1.8.7-p248.new/ext/openssl/ossl_ssl.c
--- ruby-1.8.7-p248/ext/openssl/ossl_ssl.c	2008-06-06 10:05:24.000000000 +0200
+++ ruby-1.8.7-p248.new/ext/openssl/ossl_ssl.c	2010-07-15 18:55:52.480847480 +0200
@@ -1196,10 +1196,10 @@
     }
     chain = SSL_get_peer_cert_chain(ssl);
     if(!chain) return Qnil;
-    num = sk_num(chain);
+    num = sk_X509_num(chain);
     ary = rb_ary_new2(num);
     for (i = 0; i < num; i++){
-	cert = (X509*)sk_value(chain, i);
+	cert = sk_X509_value(chain, i);
 	rb_ary_push(ary, ossl_x509_new(cert));
     }

diff -r -u ruby-1.8.7-p248/ext/openssl/ossl_ssl_session.c ruby-1.8.7-p248.new/ext/openssl/ossl_ssl_session.c
--- ruby-1.8.7-p248/ext/openssl/ossl_ssl_session.c	2008-06-06 10:05:24.000000000 +0200
+++ ruby-1.8.7-p248.new/ext/openssl/ossl_ssl_session.c	2010-07-15 18:43:03.973097655 +0200
@@ -74,6 +74,16 @@
 	return self;
 }

+#if HAVE_SSL_SESSION_CMP == 0
+static int SSL_SESSION_cmp(const SSL_SESSION *a,const SSL_SESSION *b)
+{
+    if (a->ssl_version != b->ssl_version ||
+	a->session_id_length != b->session_id_length)
+	return 1;
+    return memcmp(a->session_id,b-> session_id, a->session_id_length);
+}
+#endif
+
 /*
  * call-seq:
  *    session1 == session2 -> boolean
diff -r -u ruby-1.8.7-p248/ext/openssl/ossl_x509attr.c ruby-1.8.7-p248.new/ext/openssl/ossl_x509attr.c
--- ruby-1.8.7-p248/ext/openssl/ossl_x509attr.c	2007-06-08 17:02:04.000000000 +0200
+++ ruby-1.8.7-p248.new/ext/openssl/ossl_x509attr.c	2010-07-15 18:55:52.480847480 +0200
@@ -217,8 +217,9 @@
 	ossl_str_adjust(str, p);
     }
     else{
-	length = i2d_ASN1_SET_OF_ASN1_TYPE(attr->value.set, NULL,
-			i2d_ASN1_TYPE, V_ASN1_SET, V_ASN1_UNIVERSAL, 0);
+	length = i2d_ASN1_SET_OF_ASN1_TYPE(attr->value.set,
+			(unsigned char **) NULL, i2d_ASN1_TYPE,
+			V_ASN1_SET, V_ASN1_UNIVERSAL, 0);
 	str = rb_str_new(0, length);
 	p = RSTRING_PTR(str);
 	i2d_ASN1_SET_OF_ASN1_TYPE(attr->value.set, &p,
diff -r -u ruby-1.8.7-p248/ext/openssl/ossl_x509crl.c ruby-1.8.7-p248.new/ext/openssl/ossl_x509crl.c
--- ruby-1.8.7-p248/ext/openssl/ossl_x509crl.c	2007-06-08 17:02:04.000000000 +0200
+++ ruby-1.8.7-p248.new/ext/openssl/ossl_x509crl.c	2010-07-15 18:55:52.480847480 +0200
@@ -262,7 +262,7 @@
     VALUE ary, revoked;

     GetX509CRL(self, crl);
-    num = sk_X509_CRL_num(X509_CRL_get_REVOKED(crl));
+    num = sk_X509_REVOKED_num(X509_CRL_get_REVOKED(crl));
     if (num < 0) {
 	OSSL_Debug("num < 0???");
 	return rb_ary_new();
@@ -270,7 +270,7 @@
     ary = rb_ary_new2(num);
     for(i=0; i<num; i++) {
 	/* NO DUP - don't free! */
-	rev = (X509_REVOKED *)sk_X509_CRL_value(X509_CRL_get_REVOKED(crl), i);
+	rev = sk_X509_REVOKED_value(X509_CRL_get_REVOKED(crl), i);
 	revoked = ossl_x509revoked_new(rev);
 	rb_ary_push(ary, revoked);
     }
