# Copyright 2011 Michael Thomas <aelmalinka@gmail.com>
# Distributed under the terms of the GNU General Public Licesnse v2

MY_PV="v${PV}"
MY_PNV="${PN}-${MY_PV}"
WORK="${WORKBASE}/${MY_PNV}"

SUMMARY="Evented I/O for V8 Javascript"
DESCRIPTION="Designed to provide an easy way to build scalable network applications, similar to Event Machine or Twisted"
DOWNLOADS="https://nodejs.org/dist/${MY_PV}/${MY_PNV}.tar.gz"
HOMEPAGE="https://nodejs.org/"
LICENCES="MIT"
SLOT="0"
PLATFORMS="~amd64 ~x86"
MYOPTIONS="
    npm [[ description = [ install bundled npm module ] ]]
    ( providers: libressl openssl ) [[ number-selected = exactly-one ]]
"

DEPENDENCIES="
    build:
        dev-lang/python:*[<3.0]
    build+run:
        dev-libs/icu:=
        dev-libs/libpthread-stubs
        dev-libs/v8
        sys-libs/zlib
        npm? ( !dev-node/npm )
        providers:libressl? ( dev-libs/libressl:= )
        providers:openssl? ( dev-libs/openssl )
"

DEFAULT_SRC_COMPILE_PARAMS=(
    V=1
)

LD="${CXX}"

RESTRICT="test"

export PATH="${TMPDIR}:${PATH}"

src_prepare() {
    default
    # normally we would change the #! line to use python2, but the build STILL
    # tries to access python, which fails if it's python3. stupid.
    echo "printf '#!/bin/sh\nexec python2 \"\$@\"\n' > \"${TMPDIR}\"/python"
    printf '#!/bin/sh\nexec python2 "$@"\n' > "${TMPDIR}"/python
    edo chmod +x "${TMPDIR}"/python

    edo sed -e "s:pkg-config :${PKG_CONFIG} :g" -i configure
}

src_configure() {
    edo ./configure --prefix=/usr/$(exhost --target)    \
                    --shared-openssl --shared-zlib --with-intl=system-icu \
                    $(option npm '' --without-npm)
}

src_install() {
    default
    edo mv "${IMAGE}"/usr/{$(exhost --target)/,}share/man
    edo mv "${IMAGE}"/usr/{$(exhost --target)/,}share/doc
    edo mv "${IMAGE}"/usr/{$(exhost --target)/,}share/systemtap
    edo rmdir "${IMAGE}"/usr/$(exhost --target)/share
}

src_test() {
    # rebuild certificates, using updated parameters from ef046bf4f64161c6d0f4c4920ab62895789d576c.patch
    emake -j1 -C test/fixtures/keys clean
    emake -j1 -C test/fixtures/keys

    esandbox allow_net "inet:0.0.0.0@0"
    esandbox allow_net "inet:0.0.0.0@12346"
    esandbox allow_net "unix:${WORK}/test/tmp/test.sock"

    emake test
}

