# Copyright 2007-2007 Bryan Ã˜stergaard
# Copyright 2008 Ali Polatel
# Copyright 2009, 2010 Ingmar Vanhassel
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'python-2.5.2-r4.ebuild' from Gentoo, which is:
#  Copyright 1999-2008 Gentoo Foundation

# python: no has_lib as it needs only the pyc part of the exlib
require flag-o-matic python [ has_lib=false ] alternatives \
        autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ 1.11 1.10 ] ]

export_exlib_phases src_prepare src_configure src_test src_install pkg_preinst

MY_PNV="Python-${PV}"

SUMMARY="Python interpreter"
HOMEPAGE="http://www.${PN}.org/"
DOWNLOADS="http://${PN}.org/ftp/${PN}/${PV}/${MY_PNV}.tar.bz2"

UPSTREAM_DOCUMENTATION="
http://docs.${PN}.org/$(ever range 1-2)/
"
UPSTREAM_CHANGELOG="${HOMEPAGE}/download/releases/${PV}/NEWS.txt"
UPSTREAM_RELEASE_NOTES="${HOMEPAGE}/download/releases/${PV}/"

LICENCES="PSF-2.2"
SLOT="$(ever range 1-2)"
MYOPTIONS="dbm examples ipv6 readline sqlite tk
( berkdb gdbm ) [[ requires = dbm ]]
dbm? ( ( berkdb gdbm ) [[ number-selected = exactly-one ]] )
"

# FIXME: Internal copy of dev-libs/expat
DEPENDENCIES="
    build:
        dev-util/pkg-config
    build+run:
        app-arch/bzip2
        dev-libs/libffi
        dev-libs/openssl
        sys-libs/ncurses
        sys-libs/zlib[>=1.1.3]
        berkdb? ( sys-libs/db:=[>=4.6.21&<4.8] ) [[ note = [ python:2.7 also supports 4.8 ] ]]
        gdbm? ( sys-libs/gdbm )
        readline? ( sys-libs/readline[>=4.1] )
        sqlite? ( dev-db/sqlite:3[>=3.0.8] )
        tk? ( dev-lang/tk[>=8.0] )
"

WORK="${WORKBASE}/${MY_PNV}"
DEFAULT_SRC_CONFIGURE_PARAMS=(
    --enable-shared
    $(ever at_least 3 || echo --enable-unicode=ucs4)
    --with-system-ffi
)
DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=( ipv6 )

python-build_src_prepare() {
    # linux-3 support, applied upstream
    edo cp -r "${WORK}/Lib/plat-linux2" "${WORK}/Lib/plat-linux3"

    [[ -d ${FILES}/${PV} ]] && expatch "${FILES}/${PV}/"

    edo sed -i -e "s:@@EXHERBO_LIBDIR@@:${LIBDIR}:g" \
        Lib/distutils/command/install.py \
        Lib/distutils/sysconfig.py \
        Lib/site.py \
        Makefile.pre.in \
        Modules/Setup.dist \
        Modules/getpath.c \
        setup.py

    eautoreconf
}

python-build_src_configure() {
    # dbm module can link to berkdb or gdbm.
    # default to gdbm when both are enabled.
    local disable="ndbm" # not available

    option berkdb   || disable+=" _bsddb"
    if ever at_least 3 ; then
        option dbm  || disable+=" _dbm"
        option gdbm || disable+=" _gdbm"
    else
        option dbm  || disable+=" dbm"
        option gdbm || disable+=" gdbm"
    fi
    option readline || disable+=" readline"
    option sqlite   || disable+=" _sqlite3"
    option tk       || disable+=" _tkinter"
    export PYTHON_DISABLE_MODULES="${disable}"

    export OPT="${CFLAGS}"
    export CPPFLAGS="$(pkg-config --cflags-only-I libffi) ${CPPFLAGS}"

    default
}

python-build_src_test() {
    unset DISPLAY

    python_enable_pyc

    # for test_multiprocessing
    esandbox allow_net "unix:${TEMP%/}/pymp-*/listener-*"

    # rerun failed tests in verbose mode (regrtest -w)
    EXTRATESTOPTS="-w" emake test

    esandbox disallow_net "unix:${TEMP%/}/pymp-*/listener-*"

    python_disable_pyc
}

python-build_src_install() {
    default

    # for backward compatibility, have plat-linux3 and plat-linux2 folders
    # as long as they are identical, this shouldn't be a problem
    pushd "${IMAGE}/usr/${LIBDIR}/python${SLOT}/"
    if [[ -d plat-linux2 ]]; then
        edo cp -r plat-linux2 plat-linux3
    else
        edo cp -r plat-linux3 plat-linux2
    fi
    popd

    ! ever at_least 3.1 && edo rm "${IMAGE}"/usr/bin/smtpd.py
    ever at_least 3 && edo mv "${IMAGE}"/usr/bin/2to3 "${IMAGE}"/usr/bin/2to3-3
    edo mv "${IMAGE}"/usr/${LIBDIR}/{${PN}${SLOT}/config,}/libpython${SLOT}.a

    # alternatives handling
    local alternatives=("${PN}$(ever major)" "${SLOT}" "${SLOT}")
    PYTHON_MAJOR="$(ever at_least 3 && echo 3)"
    edo rm "${IMAGE}/usr/bin/python${SLOT}"
    edo mv "${IMAGE}/usr/bin/python${SLOT}-config" "${IMAGE}/usr/bin/python${PYTHON_MAJOR}-config"

    alternatives+=(
        /usr/bin/2to3$(ever at_least 3 && echo "-")${PYTHON_MAJOR} 2to3${SLOT}
        /usr/bin/idle${PYTHON_MAJOR} idle${SLOT}
        /usr/bin/pydoc${PYTHON_MAJOR} pydoc${SLOT}
        /usr/bin/python${PYTHON_MAJOR} python${SLOT}
        /usr/bin/python${PYTHON_MAJOR}-config python${SLOT}-config
    )

    alternatives_for "${alternatives[@]}"
}

# replace symlinks with directories
# accidentally incorrectly introduced with 52cca7bfe38138653fe2b329472bcb90e43a548d
python-build_pkg_preinst() {
    if [[ -L "${ROOT}"/usr/${LIBDIR}/python${SLOT}/plat-linux2 ]]; then
        edo rm "${ROOT}"/usr/${LIBDIR}/python${SLOT}/plat-linux2
    elif [[ -L "${ROOT}"/usr/${LIBDIR}/python${SLOT}/plat-linux3 ]]; then
        edo rm "${ROOT}"/usr/${LIBDIR}/python${SLOT}/plat-linux3
    fi
}

