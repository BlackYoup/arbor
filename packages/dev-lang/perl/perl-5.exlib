# Copyright 2007, 2008 Bryan Ã˜stergaard
# Copyright 2008 Anders Ossowicki
# Copyright 2008, 2009, 2010 Ingmar Vanhassel
# Copyright 2008, 2009 Mike Kelly
# Copyright 2010 Ali Polatel
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'perl-5.8.8-r4.ebuild' from Gentoo, which is:
#     Copyright 1999-2007 Gentoo Foundation

MY_PVM=$(ever range 1-3)

require multilib alternatives flag-o-matic

export_exlib_phases src_unpack src_prepare src_configure src_test src_install

myexparam Module_Build_pv=

SUMMARY="Perl is a general-purpose programming language originally developed for text manipulation"
HOMEPAGE="http://www.perl.org"

REMOTE_IDS="cpan:${PN} freshmeat:${PN}"

UPSTREAM_CHANGELOG="http://search.cpan.org/dist/${PN}/pod/${PN}$(ever delete_all ${MY_PVM})delta.pod"
UPSTREAM_DOCUMENTATION=

LICENCES="|| ( Artistic GPL-1 GPL-2 GPL-3 )"
SLOT="$(ever range 1-2)"
MYOPTIONS="dbm
( berkdb gdbm ) [[ requires = dbm ]]
dbm? ( ( berkdb gdbm ) [[ number-selected = at-least-one ]] )
"

DEPENDENCIES="
    build+run:
        berkdb? ( sys-libs/db:= )
        gdbm? ( sys-libs/gdbm )
"

DEFAULT_SRC_INSTALL_EXTRA_DOCS=( Changes5 )

# WORK="${TEMP}/build"
WORK="${WORKBASE}/build"

db_define() {
    option "${1}" && echo 'D' || echo 'U'
}

perl-5_src_unpack() {
    default
    edo mkdir "${WORK}"
}

perl-5_src_prepare() {
    edo cd "${WORKBASE}/${MY_PNV:-${PNV}}"
    default
}

perl-5_src_configure() {
    # Binaries are installed to /usr/bin/, with ${MY_PVM} appended
    # Alternatives manages executables in /usr/bin/
    # Libraries go into /usr/$(get_libdir)/${PN}5/${MY_PVM}/${CHOST%%-*}-linux/CORE/, which is appended to LDPATH
    # `man 1` are installed with a version

    # -Dfoo = define foo, -Ufoo = undefine foo.

    # This probably needs some further work... but should be okay for
    # now. At least parrot breaks if we don't have -$osname in $archname
    local archname="${CHOST%%-*}-linux"

    # -O3 breaks ext/XS/APItest/t/exception.t and maybe other stuff
    replace-flags -O3 -O2

    edo sh \
        "${WORKBASE}/${MY_PNV:-${PNV}}/Configure" \
        -des \
        -Dcc="${CC}" \
        -Dcf_by='Exherbo' \
        -Dprefix=/usr \
        -Dvendorprefix=/usr \
        -Dsiteprefix=/usr \
        -Doptimize="${CFLAGS}" \
        -Darchname="${CHOST%%-*}-linux" \
        -Dlibperl="libperl.so.1.${MY_PVM}" \
        -Dprivlib="/usr/$(get_libdir)/perl5/${MY_PVM}" \
        -Darchlib="/usr/$(get_libdir)/perl5/${MY_PVM}/$archname" \
        -Dsitelib="/usr/$(get_libdir)/perl5/site_perl/${MY_PVM}" \
        -Dsitearch="/usr/$(get_libdir)/perl5/site_perl/${MY_PVM}/$archname" \
        -Dvendorlib="/usr/$(get_libdir)/perl5/vendor_perl/${MY_PVM}" \
        -Dvendorarch="/usr/$(get_libdir)/perl5/vendor_perl/${MY_PVM}/$archname" \
        -Uinstallusrbinperl= \
        -Duseshrplib \
        -Dmksymlinks \
        -Duselargefiles \
        -Ui_ndbm \
        -$(db_define gdbm)i_gdbm \
        -$(db_define berkdb)i_db \
        "${PERL5_CONFIGURE_PARAMS[@]}"
}

perl-5_src_test() {
    # This is necessary for the ExtUtils::Embed tests
    edo ln -s libperl.so.1{.${MY_PVM},}
    edo ln -s libperl.so{.1,}

    # This is necessary for ext/IO/t/io_unix.t
    sydboxcmd "net/whitelist/bind/unix://${WORK}/t/sock-*"
    # This is necessary for Net/Ping/t/510_ping_udp.t
    sydboxcmd "net/whitelist/connect/inet://127.0.0.1@7"
    if ever at_least 5.10.1 ; then
        TEST_JOBS="${EXJOBS:-1}" emake test_harness
    else
        emake test
    fi
    sydboxcmd "net/unwhitelist/bind/unix://${WORK}/t/sock-*"
    sydboxcmd "net/unwhitelist/connect/inet://127.0.0.1@7"
}

perl-5_src_install() {
    default

    # Library symlinks
    local perllibdir="/usr/$(get_libdir)/${PN}5/${MY_PVM}/${CHOST%%-*}-linux/CORE/"
    dosym ${perllibdir}/libperl.so.1{.${MY_PVM},}
    dosym ${perllibdir}/libperl.so{.1,}

    # We only want /usr/bin/perl5.8.8, not /usr/bin/perl (without the dash, standard across distros)
    # with -Uinstallusrbinperl this shouldn't even get installed, but it does happen anyway, for some reason..
    if [[ -f "${IMAGE}"/usr/bin/${PN} ]]; then
        edo rm "${IMAGE}"/usr/bin/${PN}
    fi

    # Version executables
    local executable
    for executable in "${IMAGE}"/usr/bin/*; do
        if egrep -q '^#!/usr/bin/perl( +.*)?$' "${executable}"; then
            edo sed -i -e '/^#!\/usr\/bin\/perl$/s/perl/perl'${MY_PVM}/ "${executable}"
        fi
        if [[ ${executable##*/} != *${MY_PVM} ]]; then
            edo mv "${executable}" "${executable}-${MY_PVM}"
        fi
    done

    # Version man1 manpages, discard man3 manpages (use perldoc)
    edo rm -r "${IMAGE}"/usr/share/man/man3
    local manpage
    for manpage in "${IMAGE}"/usr/share/man/man1/*.1; do
        edo mv "${manpage}" "${manpage/%.1/-${MY_PVM}.1}"
    done

    keepdir /usr/$(get_libdir)/${PN}5/{site,vendor}_perl/${MY_PVM}/${CHOST%%-*}-linux

    # We don't need packlists
    edo find "${IMAGE}/usr/$(get_libdir)" -type f -name .packlist -delete

    # Save a list of what executables & man-pages we're installing
    edo cd "${IMAGE}"
    local src target alternatives=() Module_Build_pv Module_Build_importance
    exparam -v Module_Build_pv Module_Build_pv
    if [[ -n ${Module_Build_pv} ]]; then
        Module_Build_importance=${Module_Build_pv%.*}
        local decimal=${Module_Build_pv#*.}
        while [[ -n ${decimal} ]]; do
            Module_Build_importance+=.${decimal:0:2}
            decimal=${decimal:2}
        done
    fi

    for src in usr/bin/*${MY_PVM} usr/share/man/man1/*${MY_PVM}.1; do
        if [[ ${src} == usr/bin/config_data*${MY_PVM} ]]; then
            [[ -n ${Module_Build_pv} ]] || die "Module_Build_pv not set"
            edo mv ${src} usr/bin/config_data-perl-${MY_PVM}
            alternatives_for config_data ${Module_Build_pv}_perl-${SLOT} ${Module_Build_importance} \
                /usr/bin/config_data config_data-perl-${MY_PVM}
        elif [[ ${src} == usr/share/man/man1/config_data-${MY_PVM}.1 ]]; then
            [[ -n ${Module_Build_pv} ]] || die "Module_Build_pv not set"
            edo mv ${src} usr/share/man/man1/config_data-perl-${MY_PVM}.1
            alternatives_for config_data ${Module_Build_pv}_perl-${SLOT} ${Module_Build_importance} \
                /usr/share/man/man1/config_data.1 config_data-perl-${MY_PVM}.1
        else
            [[ ${src/-${MY_PVM}} == ${src} ]] && target=${src/${MY_PVM}} || target=${src/-${MY_PVM}}
            alternatives+=( /${target} ${src##*/} )
        fi
    done

    alternatives_for ${PN} ${SLOT} ${SLOT} "${alternatives[@]}"
}

