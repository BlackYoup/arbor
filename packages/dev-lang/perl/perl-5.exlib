# Copyright 2007, 2008 Bryan Ã˜stergaard
# Copyright 2008 Anders Ossowicki
# Copyright 2008, 2009, 2010 Ingmar Vanhassel
# Copyright 2008, 2009 Mike Kelly
# Copyright 2010 Ali Polatel
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'perl-5.8.8-r4.ebuild' from Gentoo, which is:
#     Copyright 1999-2007 Gentoo Foundation

MY_PVM=$(ever range 1-3)

require alternatives flag-o-matic

export_exlib_phases src_unpack src_prepare src_configure src_test src_install

myexparam Module_Build_pv=

SUMMARY="Perl is a general-purpose programming language originally developed for text manipulation"
HOMEPAGE="http://www.perl.org"
DOWNLOADS="mirror://cpan/src/5.0/${PNV}.tar.bz2"

REMOTE_IDS="cpan:${PN} freecode:${PN}"

UPSTREAM_CHANGELOG="http://search.cpan.org/dist/${PN}/pod/${PN}$(ever delete_all ${MY_PVM})delta.pod"
UPSTREAM_DOCUMENTATION=

LICENCES="|| ( Artistic GPL-1 GPL-2 GPL-3 )"
SLOT="$(ever range 1-2)"
MYOPTIONS="dbm ithreads
( berkdb gdbm ) [[ requires = dbm ]]
dbm? ( ( berkdb gdbm ) [[ number-selected = at-least-one ]] )
"

DEPENDENCIES="
    build+run:
        berkdb? ( sys-libs/db:= )
        gdbm? ( sys-libs/gdbm )
"

DEFAULT_SRC_INSTALL_EXTRA_DOCS=( Changes5 )

WORK="${WORKBASE}/build"

define() {
    echo "-D${1}=${2}"
}

option_define() {
    option "${1}" '-D' '-U'
}

perl-5_src_unpack() {
    default
    edo mkdir "${WORK}"
}

perl-5_src_prepare() {
    edo cd "${WORKBASE}/${PNV}"
    default

    # https://rt.perl.org/rt3//Public/Bug/Display.html?id=113022
    test-flag-CC -fno-lto && edo sed -e '/if(p())/{n; s/$ldflags/& -fno-lto/}' \
                                     -i Configure
}

perl-5_src_configure() {
    # Binaries are installed to /usr/bin/, with ${MY_PVM} appended
    # Alternatives manages executables in /usr/bin/
    # Libraries go into /usr/${LIBDIR}/perl5/${MY_PVM}/${CHOST%%-*}-linux/CORE/, which is appended to LDPATH
    # `man 1` are installed with a version

    # -Dfoo = define foo, -Ufoo = undefine foo.

    # This probably needs some further work... but should be okay for
    # now. At least parrot breaks if we don't have -${osname} in ${archname}
    local archname="${CHOST%%-*}-linux"

    # -O3 breaks ext/XS/APItest/t/exception.t and maybe other stuff
    replace-flags -O3 -O2

    local myconf=(
        "${WORKBASE}/${PNV}/Configure"
        -des
        $(define cf_by Exherbo)
        "$(define cc     "${CC}"    )"
        "$(define ar     "${AR}"    )"
        "$(define nm     "${NM}"    )"
        "$(define ranlib "${RANLIB}")"
        $(define prefix       /usr)
        $(define vendorprefix /usr)
        $(define siteprefix   /usr)
        "$(define optimize "${CFLAGS}"  )"
        "$(define ldflags  "${LDFLAGS}" )"
        "$(define archname "${archname}")"
        "$(define privlib    "/usr/${LIBDIR}/perl5/${MY_PVM}"                        )"
        "$(define archlib    "/usr/${LIBDIR}/perl5/${MY_PVM}/${archname}"            )"
        "$(define sitelib    "/usr/${LIBDIR}/perl5/site_perl/${MY_PVM}"              )"
        "$(define sitearch   "/usr/${LIBDIR}/perl5/site_perl/${MY_PVM}/${archname}"  )"
        "$(define vendorlib  "/usr/${LIBDIR}/perl5/vendor_perl/${MY_PVM}"            )"
        "$(define vendorarch "/usr/${LIBDIR}/perl5/vendor_perl/${MY_PVM}/${archname}")"
        $(define scriptdir /usr/bin)
        $(define libperl libperl.so.1.${MY_PVM})
        -Duseshrplib
        -Dmksymlinks
        -Duselargefiles
        -Uinstallusrbinperl
        -Ui_ndbm
        $(option_define ithreads)usethreads
        $(option_define gdbm)i_gdbm
        $(option_define berkdb)i_db
    )

    edo sh "${myconf[@]}" "${PERL5_CONFIGURE_PARAMS[@]}"
}

perl-5_src_test() {
    # This is necessary for the ExtUtils::Embed tests
    edo ln -s libperl.so.1{.${MY_PVM},}
    edo ln -s libperl.so{.1,}

    # This is necessary for t/cachepropagate-unix.t
    esandbox allow_net "unix:${TEMP}/**"
    # This is necessary for ext/IO/t/io_unix.t
    esandbox allow_net "unix:${WORK}/t/sock-*"
    # This is necessary for Net/Ping/t/510_ping_udp.t
    esandbox allow_net --connect "inet:127.0.0.1@7"
    # This is necessary for dist/IO/t/io_unix.t
    esandbox allow_net "unix:${WORK}/dist/IO/sock-*"

    [[ -v http_proxy ]] && unset http_proxy

    TEST_JOBS="${EXJOBS:-1}" emake test_harness

    esandbox disallow_net "unix:${TEMP}/**"
    esandbox disallow_net "unix:${WORK}/t/sock-*"
    esandbox disallow_net --connect "inet:127.0.0.1@7"
    esandbox disallow_net "unix:${WORK}/dist/IO/sock-*"
}

perl-5_src_install() {
    default

    edo cd "${IMAGE}"

    # see configure
    local archname="${CHOST%%-*}-linux"

    # Library symlinks
    local perllibdir="/usr/${LIBDIR}/perl5/${MY_PVM}/${archname}/CORE/"
    dosym libperl.so.1.${MY_PVM} ${perllibdir}/libperl.so.1
    dosym libperl.so.1           ${perllibdir}/libperl.so

    # We only want /usr/bin/perl5.8.8, not /usr/bin/perl (without the dash, standard across distros)
    nonfatal edo rm usr/bin/perl

    # Version executables
    local executable
    for executable in usr/bin/*; do
        if egrep -q '^#!/usr/bin/perl( +.*)?$' "${executable}"; then
            edo sed -i -e '/^#!\/usr\/bin\/perl$/s/perl/perl'${MY_PVM}/ "${executable}"
        fi
    done

    # Create & keep site and vendor dirs
    keepdir /usr/${LIBDIR}/perl5/{site,vendor}_perl/${MY_PVM}/${archname}

    # We don't need packlists or perllocal.pod
    edo find usr/${LIBDIR} -type f -name .packlist -or -name perllocal.pod -delete

    # Discard man3 manpages (use perldoc)
    edo rm -r usr/share/man/man3

    # Add alternative for Module-Build's config_data
    local Module_Build_pv Module_Build_alternatives=()
    exparam -v Module_Build_pv Module_Build_pv
    [[ -z ${Module_Build_pv} ]] && die "Module_Build_pv exparam is not set"

    Module_Build_alternatives+=(
        /usr/bin/config_data              config_data-perl-${MY_PVM}
        /usr/share/man/man1/config_data.1 config_data-perl-${MY_PVM}.1
    )
    alternatives_for config_data        \
        ${Module_Build_pv}_perl-${SLOT} \
        ${Module_Build_pv}              \
        "${Module_Build_alternatives[@]}"

    # Add alternative for perl tools and manpages
    # perl${MY_PVM} doesn't have a dash, handle that here
    local perl_alternatives=( /usr/bin/perl perl${MY_PVM} )
    local bin manpage manfile

    for bin in usr/bin/* ; do
        [[ ${bin} == usr/bin/perl${MY_PVM} ]] && continue
        perl_alternatives+=( "/${bin}" "${bin##*/}-${MY_PVM}" )
    done
    for manpage in usr/share/man/man1/*.1; do
        manfile=${manpage##*/}
        perl_alternatives+=( "/${manpage}" "${manfile/%.1/-${MY_PVM}.1}" )
    done

    alternatives_for ${PN} ${SLOT} ${SLOT} "${perl_alternatives[@]}"
}

