Source: Ali Polatel <alip@exherbo.org>
Upstream: No
Reason: Fix sydbox access violations for perl tests

--- perl-5.10.1/ext/IO/t/io_multihomed.t	2010-01-14 13:40:10.000000000 +0200
+++ perl-5.10.1/ext/IO/t/io_multihomed.t	2010-01-14 13:40:58.000000000 +0200
@@ -79,7 +79,8 @@
 
 use IO::Socket;
 
-$listen = IO::Socket::INET->new(Listen => 2,
+$listen = IO::Socket::INET->new(LocalAddr => 'localhost',
+				Listen => 2,
 				Proto => 'tcp',
 				Timeout => 5,
 			       ) or die "$!";
--- perl-5.10.1/ext/IO/t/io_sock.t	2010-01-14 13:42:50.000000000 +0200
+++ perl-5.10.1/ext/IO/t/io_sock.t	2010-01-14 14:18:48.285199363 +0200
@@ -43,7 +43,8 @@
 
 use IO::Socket;
 
-$listen = IO::Socket::INET->new(Listen => 2,
+$listen = IO::Socket::INET->new(LocalAddr => 'localhost',
+				Listen => 2,
 				Proto => 'tcp',
 				# some systems seem to need as much as 10,
 				# so be generous with the timeout
@@ -104,7 +105,7 @@
 
 # Test various other ways to create INET sockets that should
 # also work.
-$listen = IO::Socket::INET->new(Listen => '', Timeout => 15) or die "$!";
+$listen = IO::Socket::INET->new(LocalAddr => 'localhost', Listen => '', Timeout => 15) or die "$!";
 $port = $listen->sockport;
 
 if($pid = fork()) {
@@ -231,7 +232,7 @@
 ### TEST 16
 ### Start the server
 #
-my $listen = IO::Socket::INET->new( Listen => 2, Proto => 'tcp', Timeout => 15) ||
+my $listen = IO::Socket::INET->new(LocalAddr=> 'localhost',  Listen => 2, Proto => 'tcp', Timeout => 15) ||
     print "not ";
 print "ok 16\n";
 die if( !defined( $listen));
