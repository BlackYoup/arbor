From b45272547947b550c8fc5537e05d353d803325f1 Mon Sep 17 00:00:00 2001
From: Niels Ole Salscheider <niels_ole@salscheider-online.de>
Date: Wed, 22 Apr 2015 21:55:09 +0200
Subject: [PATCH 1/2] exherbo multi-arch paths
Upstream: No, this is Exherbo specific
Reason: Adjust the loader paths to our multiarch layout

---
 lib/Driver/Tools.cpp | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/lib/Driver/Tools.cpp b/lib/Driver/Tools.cpp
index 2135b77..7ebaec4 100644
--- a/lib/Driver/Tools.cpp
+++ b/lib/Driver/Tools.cpp
@@ -7986,7 +7986,7 @@ static std::string getLinuxDynamicLinker(const ArgList &Args,
       return "/system/bin/linker";
   } else if (Arch == llvm::Triple::x86 || Arch == llvm::Triple::sparc ||
              Arch == llvm::Triple::sparcel)
-    return "/lib/ld-linux.so.2";
+    return "/usr/i686-pc-linux-gnu/lib/ld-linux.so.2";
   else if (Arch == llvm::Triple::aarch64)
     return "/lib/ld-linux-aarch64.so.1";
   else if (Arch == llvm::Triple::aarch64_be)
@@ -7994,9 +7994,9 @@ static std::string getLinuxDynamicLinker(const ArgList &Args,
   else if (Arch == llvm::Triple::arm || Arch == llvm::Triple::thumb) {
     if (ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUEABIHF ||
         tools::arm::getARMFloatABI(ToolChain.getDriver(), Args, ToolChain.getTriple()) == "hard")
-      return "/lib/ld-linux-armhf.so.3";
+      return "/usr/arm-exherbo-linux-gnueabi/lib/ld-linux-armhf.so.3";
     else
-      return "/lib/ld-linux.so.3";
+      return "/usr/arm-exherbo-linux-gnueabi/lib/ld-linux.so.3";
   } else if (Arch == llvm::Triple::armeb || Arch == llvm::Triple::thumbeb) {
     // TODO: check which dynamic linker name.
     if (ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUEABIHF ||
@@ -8024,11 +8024,11 @@ static std::string getLinuxDynamicLinker(const ArgList &Args,
 
     return (LibDir + "/" + LibName).str();
   } else if (Arch == llvm::Triple::ppc)
-    return "/lib/ld.so.1";
+    return "/usr/powerpc64-unknown-linux-gnueabi/lib/ld.so.1";
   else if (Arch == llvm::Triple::ppc64) {
     if (ppc::hasPPCAbiArg(Args, "elfv2"))
-      return "/lib64/ld64.so.2";
-    return "/lib64/ld64.so.1";
+      return "/usr/powerpc64-unknown-linux-gnueabi/lib/ld64.so.1";
+    return "/usr/powerpc64-unknown-linux-gnueabi/lib/ld.so.1";
   } else if (Arch == llvm::Triple::ppc64le) {
     if (ppc::hasPPCAbiArg(Args, "elfv1"))
       return "/lib64/ld64.so.1";
@@ -8039,9 +8039,9 @@ static std::string getLinuxDynamicLinker(const ArgList &Args,
     return "/lib64/ld-linux.so.2";
   else if (Arch == llvm::Triple::x86_64 &&
            ToolChain.getTriple().getEnvironment() == llvm::Triple::GNUX32)
-    return "/libx32/ld-linux-x32.so.2";
+    return "/usr/x86_64-pc-linux-gnu/lib/ld-linux-x32.so.2";
   else
-    return "/lib64/ld-linux-x86-64.so.2";
+    return "/usr/x86_64-pc-linux-gnu/lib/ld-linux-x86-64.so.2";
 }
 
 static void AddRunTimeLibs(const ToolChain &TC, const Driver &D,
-- 
2.4.6

