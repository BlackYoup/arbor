# Copyright 2008 Ingmar Vanhassel <ingmar@exherbo.org>
# Copyright 2008-2011 Wulf C. Krueger <philantrop@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require systemd-service

export_exlib_phases src_configure src_install pkg_postinst

MY_PV=${PV/_p/-P}
MY_PNV=${PN}-${MY_PV}

SUMMARY="Berkeley Internet Name Domain"
DESCRIPTION="
The Berkeley Internet Name Domain (BIND) implements an Internet name server for
Unix operating systems. BIND consists of a server (or \`daemon') called \`named'
and a resolver library.
A name server is a network service that enables clients to name resources or objects
and share this information with other objects in the network.
"
HOMEPAGE="https://www.isc.org/software/${PN}"
DOWNLOADS="
    http://ftp.isc.org/isc/${PN}${PV%%.*}/${MY_PV}/${MY_PNV}.tar.gz
    ftp://ftp.internic.net/domain/named.cache
"

UPSTREAM_DOCUMENTATION="https://www.isc.org/faq/bind [[ note = [ FAQ ] ]]"
UPSTREAM_RELEASE_NOTES="http://oldwww.isc.org/sw/${PN}/view/?release=${MY_PV}&noframes=1#RELEASE"

LICENCES="as-is"
SLOT="0"
MYOPTIONS="
    baselayout
    berkdb
    idn
    ipv6
    ldap
    mysql [[ requires = [ -threads ] ]]
    postgres [[ description = [ Adds support for the PostgreSQL backend. ] ]]
    ssl
    threads [[ requires = [ -mysql ] ]]
"

DEPENDENCIES="
    build+run:
        dev-libs/libxml2
        berkdb? ( sys-libs/db:= )
        idn? ( net-dns/idnkit )
        ldap? ( net-directory/openldap )
        mysql? ( dev-db/mysql )
        postgres? ( dev-db/postgresql )
        ssl? ( dev-libs/openssl )
        threads? ( sys-libs/libcap[>=2.1.0] )
        group/named
        user/named
"

WORK=${WORKBASE}/${MY_PNV}

# Parallel make is not supported upstream
DEFAULT_SRC_COMPILE_PARAMS=( -j1 )
DEFAULT_SRC_INSTALL_EXTRA_DOCS=( KNOWN-DEFECTS )

bind_src_configure() {
    myoption() {
        if option ${2}; then
            echo "--${1}-${3:-$(optionfmt ${2} )}=yes"
        else
            echo "--${1}-${3:-$(optionfmt ${2} )}=no"
        fi
    }

    # --enable-isc-spnego: Bundled kerberos parts
    econf \
        --includedir=/usr/include \
        --localstatedir=/var \
        --sysconfdir=/etc/${PN} \
        --enable-isc-spnego=no \
        --enable-largefile=yes \
        --with-dlz-filesystem=yes \
        --with-dlz-odbc=no \
        --with-dlz-stub=yes \
        --with-docbook-xsl=no \
        --with-gssapi=no \
        --with-libtool=yes \
        --with-libxml2=yes \
        --with-randomdev=/dev/urandom \
        $(myoption enable ipv6) \
        $(myoption enable threads) \
        $(myoption enable threads linux-caps) \
        $(myoption with berkdb dlz-bdb) \
        $(myoption with idn) \
        $(myoption with ldap dlz-ldap) \
        $(myoption with mysql dlz-mysql) \
        $(myoption with postgres dlz-postgres) \
        $(myoption with ssl openssl)
}

# Note to self or anyone who's going to work on bind: It will fail with a cryptic
# error ("RUNTIME_CHECK(dst_initialized == isc_boolean_true) failed") if you try
# to disable pkcs11 with either of the following switches:
#        --with-pkcs11=no \
#        --without-pkcs11 \
# *Not* using any switches turns pkcs11 off, though... Upstreams...

bind_src_install() {
    default

    keepdir /etc/${PN} /var/${PN}/{pri,sec} /var/run/named
    edo chown named:named "${IMAGE}"/var/${PN}/{pri,sec} "${IMAGE}"/var/run/named

    # Install a basic configuration.
    insinto /etc/${PN}
    doins "${FILES}"/named.conf

    # html documentation and a sample with everything bind can do.
    dodoc "${WORK}"/bin/named/named.conf.html
    newins "${WORK}"/bin/tests/named.conf named.conf.complex_sample

    # Install the Administrator Reference Manual (ARM)
    docinto Administrator_Reference_Manual
    dodoc doc/arm/*

    docinto misc
    dodoc doc/misc/*

    # Creating a CONFIG_PROTECT file for /var/bind
    hereenvd 30bind <<EOF
CONFIG_PROTECT="/var/bind"
EOF

    if option baselayout ; then
        # Installing init file as well as confd file
        newinitd "${FILES}"/named.init named
        newconfd "${FILES}"/named.confd named
    fi

    install_systemd_files

    # Install standard zones and root cache
    insinto /var/bind
    doins "${FETCHEDDIR}"/named.cache
    insinto /var/bind/pri
    doins "${FILES}"/{127,localhost}.zone
}

bind_pkg_postinst() {
    if [[ ! -f /etc/bind/rndc.key ]]; then
        if [[ -c /dev/urandom ]]; then
            nonfatal edo /usr/sbin/rndc-confgen -r /dev/urandom -a -u named
        else
            nonfatal edo /usr/sbin/rndc-confgen -a -u named
        fi
    fi
}

