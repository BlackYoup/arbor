# Copyright 2008, 2009, 2010 Ingmar Vanhassel <ingmar@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'clamav-0.93.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation.

require github [ user='vrtadmin' pn="${PN}-devel" tag="${PNV}" ]

export_exlib_phases src_install

SUMMARY="Clam Anti-Virus Scanner"
HOMEPAGE="http://www.${PN}.net"

UPSTREAM_RELEASE_NOTES="https://github.com/vrtadmin/${PN}-devel/blob/master/README"
UPSTREAM_DOCUMENTATION="
    https://github.com/vrtadmin/${PN}-faq [[ lang = en description = [ Official FAQs ] ]]
"

LICENCES="
    || ( GPL-2 ( GPL-2 unRAR ) [ [[ note = [ libclamunrar uses code under unRAR licence ] ]] )
"
SLOT="0"
MYOPTIONS="
    baselayout
    milter [[ description = [ antivirus scanner using mail-filter/libmilter ] ]]
    unrar [[ description = [ build libclamunrar to enable scanning rar archives ] ]]
"

# Sydbox violations, failures (last checked: 0.98.4)
# unit tests likely need to use a clamav socket in /var/run/ or /run/, etc.
# many tests also need valgrind (those are disabled by default)
RESTRICT="test"

DEPENDENCIES="
    build+run:
        dev-libs/gmp:= [[ note = [ optional; for digital signatures ] ]]
        dev-libs/json-c [[ note = [ optional; for file property meta data collecting ] ]]
        dev-libs/libxml2:2.0 [[ note = [ optional; for DMG and XAR support ] ]]
        sys-libs/ncurses [[ note = [ optional; for clamdtop ] ]]
        virtual/libssl
        milter? (
            mail-filter/libmilter
            net-misc/curl [[ note = [ for following mail URLs ] ]]
        )
        group/clamav
        user/clamav
    test:
        dev-libs/check
"

DEFAULT_SRC_CONFIGURE_PARAMS=(
    --enable-bzip2
    --enable-clamdtop
    --enable-dns-fix
    --enable-id-check       # Use id utility instead of /etc/passwd parsing (Gentoo #72540)
    --enable-ipv6
    --enable-xml
    --disable-check
    --disable-experimental
    --disable-llvm
    --with-dbdir=/var/lib/clamav
    --with-iconv
    --with-libjson=/usr
)
DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=( milter unrar )

clamav_src_install() {
    default

    insinto /usr/$(exhost --target)/lib/tmpfiles.d
    hereins ${PN}.conf <<EOF
d /run/clamav 0755 clamav clamav
EOF

    if option baselayout ; then
        # Install /etc/logrotate.d/clamavd ?
        hereconfd clamd <<EOF
# NOTICE: Since clamav-0.85-r1, only START_CLAMD and START_FRESHCLAM settings
#      are used, other are silently ignored

START_CLAMD=yes
START_FRESHCLAM=yes
CLAMD_NICELEVEL=3
FRESHCLAM_NICELEVEL=19
EOF
        newinitd "${FILES}"/clamd.rc clamd
    fi

    dodir /var/log/${PN}
    keepdir /var/log/${PN}
    edo chown clamav:clamav "${IMAGE}"/var/log/${PN}

    # Set up some default configs
    edo sed -e "s:.*\(PidFile\) .*:\1 /run/clamav/clamd.pid:" \
            -e "s:.*\(LocalSocket\) .*:\1 /run/clamav/clamd.sock:" \
            -e "s:.*\(User\) .*:\1 clamav:" \
            -e "s:^\#\(LogFile\) .*:\1 /var/log/clamav/clamd.log:" \
            -i "${IMAGE}"/etc/clamd.conf.sample

    edo sed -e "s:.*\(PidFile\) .*:\1 /run/clamav/freshclam.pid:" \
            -e "s:.*\(DatabaseOwner\) .*:\1 clamav:" \
            -e "s:^\#\(UpdateLogFile\) .*:\1 /var/log/clamav/freshclam.log:" \
            -e "s:^\#\(NotifyClamd\).*:\1 /etc/clamd.conf:" \
            -i "${IMAGE}"/etc/freshclam.conf.sample
}

