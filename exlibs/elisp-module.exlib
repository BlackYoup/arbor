# Copyright 2009 Elias Pipping <elias@pipping.org>
# Distributed under the terms of the GNU General Public License v2

# Compile and install emacs lisp source.
#
# The main functions provided by this exlib are elisp-compile and
# elisp-install, which are self-explanatory.
#
# In addition, elisp-install-site-file can be used to install the
# site-file ELISP_SITE_FILE, which defaults to FILES/PN-exherbo.el.in,
# after which the global site-file ELISP_GLOBAL_SITE_FILE needs to be
# regenerated. elisp-module_pkg_postinst and elisp-module_pkg_postrm
# take care of that.
#
# ELISP_COMPILE_FLAGS can be used to pass additional flags to emacs
# during compilation

export_exlib_phases pkg_postinst pkg_postrm

readonly ELISP_SITE_LISP=/usr/share/emacs/site-lisp
readonly ELISP_GLOBAL_SITE_FILE=${ELISP_SITE_LISP}/site-exherbo.el
readonly ELISP_SITE_DIR=${ELISP_SITE_LISP}/site-exherbo.d

EMACS=/usr/bin/emacs
ELISP_FLAGS=( --batch --no-site-file )
ELISP_COMPILE_FLAGS=( --directory . )

# Byte-compile the given set of files
elisp-compile() {
    illegal_in_global_scope

    edo ${EMACS} "${ELISP_FLAGS[@]}" "${ELISP_COMPILE_FLAGS[@]}" \
        -f batch-byte-compile "$@"
}

# Install the given set of files (arguments #2-) to the given location
# (argument #1), relative to ELISP_SITE_LISP
elisp-install() {
    illegal_in_global_scope

    (
        insinto ${ELISP_SITE_LISP}/$1;
        shift;
        doins "$@"
    )
}

# Install a site-file
elisp-install-site-file() {
    illegal_in_global_scope

    local esf=${ELISP_SITE_FILE:-${FILES}/${PN}-exherbo.el.in}
    echo "Installing emacs lisp site file"
    (
        insinto "${ELISP_SITE_DIR}"
        doins "${esf}"
    )
}

# Concatenate all the site-files into a single file, in no particular order
elisp-generate-global-site-file() {
    illegal_in_global_scope

    echo "Generating global emacs lisp site file"
    local gsf=${ROOT}${ELISP_GLOBAL_SITE_FILE} file reset_shopts=`shopt -p nullglob`
    rm -f "${gsf}"
    shopt -s nullglob
    echo ";;;; Generated by elisp-module.exlib" >> "${gsf}"
    echo ";;;; Please do not modify" >> "${gsf}"
    for file in "${ROOT}${ELISP_SITE_DIR}"/*.el.in; do
        echo ";;; Generated from ${file}" >> "${gsf}"
        sed -e "s:@SITE_LISP@:${ELISP_SITE_LISP}:g" "${file}" >> "${gsf}"
        echo >> "${gsf}"
    done
    echo "(provide 'site-exherbo)" >> "${gsf}"
    ${reset_shopts}
}

elisp-generate-autoload() {
    illegal_in_global_scope

    ewarn "elisp-generate-autoload has been renamed to elisp-generate-autoloads";
    elisp-generate-autoloads "$@"
}

elisp-generate-autoloads() {
    illegal_in_global_scope

    edo ${EMACS} "${ELISP_FLAGS[@]}" \
        --eval "(let ((generated-autoload-file \"${PWD}/${1}\"))
                  (update-directory-autoloads \".\"))"
}

elisp-module_pkg_postinst() {
    elisp-generate-global-site-file
}

elisp-module_pkg_postrm() {
    elisp-generate-global-site-file
}

