# Copyright 2009 Ingmar Vanhassel
# Distributed under the terms of the GNU General Public License v2

# Based in part upon 'python.eclass' v1.32 from Gentoo, which is:
#   Copyright 1999-2004 Gentoo Foundation

myexparam python_dep=

myexparam -b has_lib=true
myexparam -b has_bin=false

if exparam -b has_bin; then
    [[ -n $(exparam python_dep) ]] && DEPENDENCIES+="
    build+run:
        dev-lang/python:*[>=$(exparam python_dep)]
"
elif exparam -b has_lib; then
    [[ -n $(exparam python_dep) ]] && DEPENDENCIES+="
    build+run:
        dev-lang/python:=[>=$(exparam python_dep)]
"
fi

# BIG TODO: this assumes the `build` can execute `target` python
# For now, we only allow native builds
export PYTHON="/usr/$(exhost --target)/bin/python"


# Tells python not to automatically recompile modules to .pyc/.pyo even if the timestamps/version
# stamps don't match. this is done to protect sandbox.
#
# NOTE: Supported by dev-lang/python[>=2.6] only.
python_disable_pyc() {
    illegal_in_global_scope

    export PYTHONDONTWRITEBYTECODE=1
}

python_enable_pyc() {
    illegal_in_global_scope

    unset PYTHONDONTWRITEBYTECODE
}

# Returns the current python abi
python_get_abi() {
    illegal_in_global_scope

    local python_abi

    python_abi=$(${PYTHON} -V 2>&1)
    python_abi=${python_abi#Python }
    python_abi=$(ever range 1-2 ${python_abi})

    echo -n "${python_abi}"
}

# Run without arguments, returns the python library directory.
python_get_libdir() {
    illegal_in_global_scope

    echo -n "/usr/$(exhost --target)/lib/python$(python_get_abi)"
}

# Run without arguments, returns the python site-packages directory.
python_get_sitedir() {
    illegal_in_global_scope

    echo -n "$(python_get_libdir)/site-packages"
}

# Byte-compiles all .py files in ${IMAGE}$(python_get_libdir). Changing the mtime of a .py file
# invalidates the byte-compiled versions. python_bytecompile() should thus be run at the end of
# src_install(). Both .pyc & .pyo (optimized & byte-compiled) files are generated.
python_bytecompile() {
    illegal_in_global_scope

    [[ ${EXHERES_PHASE} != install ]] && die "${FUNCNAME} should only be run in src_install()"

    [[ -n ${@} ]] && die "${FUNCNAME} takes no arguments"

    edo find "${IMAGE}$(python_get_libdir)" -type f -name '*.py' -exec touch {} +

    edo python$(python_get_abi)    -mcompileall -f -q -d $(python_get_libdir) "${IMAGE}$(python_get_libdir)"
    edo python$(python_get_abi) -O -mcompileall -f -q -d $(python_get_libdir) "${IMAGE}$(python_get_libdir)"
}

