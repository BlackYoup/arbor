# Copyright 2008, 2009 Ali Polatel
# Copyright 2009 Ingmar Vanhassel
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'distutils.eclass' from Gentoo, which is:
#   Copyright 1999-2008 Gentoo Foundation

# The distutils eclass is designed to allow easier installation of distutils-based python modules
# and their incorporation into Exherbo.

myexparam python_dep=

myexparam -b has_lib=true
myexparam -b has_bin=false

exparam -v PYTHON_DEP python_dep
exparam -v PYTHON_HAS_LIB has_lib
exparam -v PYTHON_HAS_BIN has_bin

PYTHON_EXLIB_API=2

if [[ -n $(exparam python_dep) ]]; then
    exparam -v PYTHON_DEP python_dep
    if ([ "${PYTHON_DEP:0:1}" != '[' ] && [ "${PYTHON_DEP:0:1}" != '' ]); then
        PYTHON_EXLIB_API=1
    fi
else
    # if not bin nor lib, we don't have a dependency and everything should work
    if exparam -b has_lib || exparam -b has_bin; then
        PYTHON_EXLIB_API=1
    fi
fi

case ${PYTHON_EXLIB_API} in
    1)
        require python [ python_dep="${PYTHON_DEP}" has_lib="${PYTHON_HAS_LIB}" has_bin="${PYTHON_HAS_BIN}" ]

        export_exlib_phases src_prepare src_compile src_install

        distutils_src_prepare() {
            default

            # remove ez_setup stuff to prevent packages
            # from installing setuptools on their own
            rm -rf ez_setup*
            echo "def use_setuptools(*args, **kwargs): pass" > ez_setup.py
        }

        distutils_src_compile() {
            [[ -n ${@} ]] && die "${FUNCNAME} takes no arguments"

            # get the sysconfig.py and friends for the target
            local target=$(exhost --target)
            export _PYTHON_HOST_PLATFORM=linux-${target%%-*}
            export PYTHONPATH=$(python_get_libdir)

            edo ${PYTHON} -B setup.py build_ext     \
                --include-dirs=$(python_get_incdir) \
                --library-dirs=$(python_get_libdir) \
                "${DISTUTILS_SRC_COMPILE_PARAMS[@]}"

            edo ${PYTHON} -B setup.py build         \
                "${DISTUTILS_SRC_COMPILE_PARAMS[@]}"
        }

        distutils_src_install() {
            [[ -n ${@} ]] && die "${FUNCNAME} takes no arguments"

            # get the sysconfig.py and friends for the target
            local target=$(exhost --target)
            export _PYTHON_HOST_PLATFORM=linux-${target%%-*}
            export PYTHONPATH=$(python_get_libdir)

            edo ${PYTHON} -B setup.py install       \
                --root="${IMAGE}"                   \
                --install-lib=$(python_get_libdir)  \
                --install-data=/usr                 \
                --prefix=/usr/$(exhost --target)    \
                --no-compile                        \
                "${DISTUTILS_SRC_INSTALL_PARAMS[@]}"

            emagicdocs

            python_bytecompile
        }
        ;;
    2)
        myexparam python_sup="2.6 2.7 3.1 3.2 3.3"
        myexparam -b multibuild=true
        myexparam -b with_opt=false

        exparam -v PYTHON_SUP python_sup
        exparam -v DISTUTILS_MULTIBUILD multibuild
        exparam -v DISTUTILS_WITH_OPT with_opt

        if exparam -b multibuild; then
            myexparam work=${PNV}
            exparam -v DISTUTILS_WORK work
            DISTUTILS_MULTIBUILD="${DISTUTILS_MULTIBUILD} multiunpack=true work=${DISTUTILS_WORK}"
        fi

        if exparam -b with_opt; then
            myexparam option_name=python
            exparam -v OPTION_NAME option_name
            DISTUTILS_WITH_OPT="${DISTUTILS_WITH_OPT} option_name=${OPTION_NAME}"
        fi

        require python [ python_dep="${PYTHON_DEP}" python_sup="${PYTHON_SUP}" \
                         has_lib="${PYTHON_HAS_LIB}" has_bin="${PYTHON_HAS_BIN}" \
                         multibuild=${DISTUTILS_MULTIBUILD} with_opt=${DISTUTILS_WITH_OPT} ]

        distutils_run_phase() {
            if exparam -b multibuild; then
                python_run_phase
            else
                distutils_${EXHERES_PHASE}_one_multibuild
            fi
        }

        export_exlib_phases src_prepare src_compile src_install

        distutils_prepare_one_multibuild() {
            default

            # remove ez_setup stuff to prevent packages
            # from installing setuptools on their own
            rm -rf ez_setup*
            echo "def use_setuptools(*args, **kwargs): pass" > ez_setup.py
        }

        prepare_one_multibuild() {
            distutils_prepare_one_multibuild
        }

        distutils_src_prepare() {
            distutils_run_phase
        }

        distutils_compile_one_multibuild() {
            [[ -n ${@} ]] && die "${FUNCNAME} takes no arguments"

            # get the sysconfig.py and friends for the target
            local target=$(exhost --target)
            export _PYTHON_HOST_PLATFORM=linux-${target%%-*}
            export PYTHONPATH=$(python_get_libdir)

            edo ${PYTHON} -B setup.py build_ext     \
                --include-dirs=$(python_get_incdir) \
                --library-dirs=$(python_get_libdir) \
                "${DISTUTILS_SRC_COMPILE_PARAMS[@]}"

            edo ${PYTHON} -B setup.py build         \
                "${DISTUTILS_SRC_COMPILE_PARAMS[@]}"
        }

        compile_one_multibuild() {
            distutils_compile_one_multibuild
        }

        distutils_src_compile() {
            distutils_run_phase
        }

        distutils_install_one_multibuild() {
            [[ -n ${@} ]] && die "${FUNCNAME} takes no arguments"

            # get the sysconfig.py and friends for the target
            local target=$(exhost --target)
            export _PYTHON_HOST_PLATFORM=linux-${target%%-*}
            export PYTHONPATH=$(python_get_libdir)

            edo ${PYTHON} -B setup.py install       \
                --root="${IMAGE}"                   \
                --install-lib=$(python_get_libdir)  \
                --install-data=/usr                 \
                --prefix=/usr/$(exhost --target)    \
                --no-compile                        \
                "${DISTUTILS_SRC_INSTALL_PARAMS[@]}"

            emagicdocs

            python_bytecompile
        }

        install_one_multibuild() {
            distutils_install_one_multibuild
        }

        distutils_src_install() {
            distutils_run_phase
        }
        ;;
    *)
        die "Detecting python exlib api went wrong"
        ;;
esac

