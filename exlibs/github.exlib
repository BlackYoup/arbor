# Copyright 2012, 2014 Benedikt Morbach <benedikt.morbach@googlemail.com>
# Distributed under the terms of the GNU General Public License v2

# Exlib for projects hosted on github
# 
# Many of the exparams can be set using variables as well.
# However, you should pass them explicitely whenever possible!


# Name of the repository on github
myexparam pn=${MY_PN:-${PN}}
# Name of the user/project that owns the repository on github
myexparam user=$(exparam pn)

# Name of a tag. Use this if you are packaging a release!
# You often want something like  tag=v${PV}
myexparam tag=${GITHUB_TAG:-${MY_PV:-${PV}}}
# Short git revision. Use this if you want to package an unreleased snapshot
myexparam rev=${GITHUB_REVISION}

# Name of a git branch. Can only be used for scm versions
myexparam branch=${GITHUB_BRANCH}

# For manually generated tarballs that can be uploaded.
# github has deprecated this API though and it might vanish in the future.
# Not sure if the downloads will stay then.
# Automatically generated tarballs from git trees (see below) always use tar.gz
myexparam suffix=
myexparam pv=${MY_PV:-${PV}}
myexparam pnv=${MY_PNV:-$(exparam pn)-$(exparam pv)}

HOMEPAGE="https://github.com/$(exparam user)/$(exparam pn)"

if ever is_scm ; then
    SCM_REPOSITORY="git://github.com/$(exparam user)/$(exparam pn).git"
    exparam -v SCM_BRANCH branch
    require scm-git
elif [[ -n $(exparam suffix) ]] ; then
    DOWNLOADS="https://github.com/downloads/$(exparam user)/$(exparam pn)/$(exparam pnv).$(exparam suffix)"
    WORK="${WORKBASE}"/$(exparam pnv)
else
    if [[ -n $(exparam rev) ]] ; then
        exparam -v what rev
        exparam -v work rev
    elif [[ -n $(exparam tag) ]] ; then
        exparam -v what tag
        exparam -v work tag
        # github strips the one leading 'v' from tags if it is followed by a number
        [[ ${work} =~ ^v[0-9] ]] && work=${work#v}
    fi

    DOWNLOADS="https://github.com/$(exparam user)/$(exparam pn)/archive/${what}.tar.gz -> ${PNV}.tgz"
    WORK="${WORKBASE}/$(exparam pn)-${work////-}"
fi

