# Copyright 2008 Ingmar Vanhassel <ingmar@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
#
# Based in part upon 'perl-module.eclass' which is
#   Copyright 1999-2007 Gentoo Foundation
#
#   Original Authors:
#       Seemant Kulleen <seemant@gentoo.org>
#       Robin Johnson <robbat2@gentoo.org>
#       Michael Cummings <mcummings@gentoo.org>

export_exlib_phases src_configure src_compile src_test src_install


if [[ -z ${HOMEPAGE} && -z ${DOWNLOADS} && -n ${MODULE_AUTHOR} ]]; then
    HOMEPAGE="http://search.cpan.org/~${MODULE_AUTHOR//\/*}/"
    DOWNLOADS="mirror://cpan/authors/id/${MODULE_AUTHOR:0:1}/${MODULE_AUTHOR:0:2}/${MODULE_AUTHOR}/${MY_PNV:-${PNV}}${MODULE_EXTENSION:-.tar.gz}"
    BUGS_TO="arkanoid@exherbo.org ingmar@exherbo.org"
    REMOTE_IDS="cpan:${MY_PNV:-${PN//-/::}}"
    UPSTREAM_CHANGELOG="http://search.cpan.org/src/${MODULE_AUTHOR}/${MY_PNV:-${PNV}}/Changes"
fi

# Default license, for packages licensed under perl's terms.
LICENCES="${LICENCES:-|| ( Artistic GPL GPL-2 GPL-3 )}"

case ${PN} in
    # Avoid circular dependencies
    Pod-Parser) : ;;
    *) DEPENDENCIES="build+run: dev-lang/perl" ;;
esac


PERL_VERSION=""
SITE_ARCH=""
SITE_LIB=""
VENDOR_LIB=""
VENDOR_ARCH=""
ARCH_LIB=""
POD_DIR=""
BUILDER_VER=""
PREFER_BUILDPL="yes"
pm_echovar=""

perl-module_src_configure() {
    perlinfo

    export PERL_MM_USE_DEFAULT="1"
    # Disable ExtUtils::AutoInstall from prompting
    export PERL_EXTUTILS_AUTOINSTALL="--skipdeps"

    if [[ "${PREFER_BUILDPL}" == "yes" && ( -f Build.PL || ${PN} == "module-build" ) ]]; then
        einfo "Using Module::Build"
        perl Build.PL ${myconf} --installdirs=vendor --destdir="${IMAGE}" --libdoc= <<< ${pm_echovar} \
            || die "Unable to build!"
    elif [[ -f Makefile.PL && ! ${PN} == "module-build" ]]; then
        einfo "Using ExtUtils::MakeMaker"
        perl Makefile.PL ${myconf} INSTALLMAN3DIR='none' PREFIX=/usr INSTALLDIRS=vendor DESTDIR="${IMAGE}" <<< ${pm_echovar} \
            || die "Unable to build!"
    fi

    if [[ ! -f Build.PL && ! -f Makefile.PL ]]; then
        einfo "No Make or Build file detected..."
    fi
}

perl-module_src_compile() {
    perlinfo
    if [[ -f Makefile ]]; then
        default
    elif [[ -f Build ]]; then
        perl Build build || die "Compilation failed"
    fi
}

perl-module_src_test() {
    perlinfo
    if [[ -f Makefile ]]; then
        default
    elif [[ -f Build ]]; then
        perl Build test || die "Test failed"
    fi
}

perl-module_src_install() {
    perlinfo

    if [[ -f Makefile ]]; then
        default
    elif [[ -f Build ]]; then
        perl "${WORK}/Build" install
        default
    fi


    einfo "Cleaning out stray man files"
    local file stat
    find "${IMAGE}" -type f -name "*.3pm*" | while read file
    do
        rm -f "${file}"
    done
    find "${IMAGE}"/usr/share/man -depth -type d -print0 2>/dev/null | xargs -0 -r rmdir

    fixlocalpod

    find "${IMAGE}" -type f | grep -v '.so' | while read file
    do
        stat=$(file "${file}" | grep -i " text")
        if [[ -n "${stat}" ]]; then
            sed -i -e "s:${IMAGE}:/:g" "${file}"
        fi
    done
}

perlinfo() {
    local v version installsitearch installsitelib installarchlib installvendorlib installvendorarch
    for v in version installsitearch installsitelib installarchlib \
        installvendorlib installvendorarch; do
        eval "$(perl -V:${v})"
    done

    PERL_VERSION=${version}
    SITE_ARCH=${installsitearch}
    SITE_LIB=${installsitelib}
    ARCH_LIB=${installarchlib}
    VENDOR_LIB=${installvendorlib}
    VENDOR_ARCH=${installvendorarch}

    if [[ "${PREFER_BUILDPL}" == "yes" ]]; then
        if [[ ! -f ${WORK}/Makefile.PL ]] || [[ ${PN} == "module-build" ]]; then
            if [[ -f ${WORK}/Build.PL ]]; then
                if [[ ${PN} == "module-build" ]]; then
                    # A bootstrapping if you will
                    BUILDER_VER="1"
                else
                    BUILDER_VER=$(perl -MModule::Build -e 'print "$Module::Build::VERSION;"')
                fi
            fi
        fi
    fi
}

fixlocalpod() {
    perlinfo

    for perldir in "${IMAGE}${ARCH_LIB}" "${IMAGE}${SITE_LIB}" "${IMAGE}${VENDOR_LIB}"; do
        if [[ -f ${perldir}/perllocal.pod ]]; then
            rm -f "${perldir}/perllocal.pod"
            # Don't leave empty directories behind.
            rmdir "${perldir}" "$(dirname "${perldir}")" "$(dirname "$(dirname "${perldir}")")" 2>/dev/null
        fi
    done
}

