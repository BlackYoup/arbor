# Copyright 2008 David Leverton <dleverton@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

if [[ -z ${SCM_TYPE} ]]; then
    SCM_TYPE=svn
    require scm
fi

scm-svn_do_dependencies() {
    local svn='>=dev-scm/subversion-1.5.0_alpha1'
    if [[ $(scm_get_var REPOSITORY) == https://* ]]; then
        echo "${svn} net-misc/neon[ssl]"
    #elif [[ $(scm_get_var REPOSITORY) == http://* ]]; then
    elif [[ $(scm_get_var REPOSITORY) == svn+ssh://* ]]; then
        echo "${svn} net-misc/openssh"
    else
        echo "${svn}"
    fi
}

scm-svn_do_check_vars() {
    [[ -n $(scm_get_var SVN_RAW_URI) ]] \
        && [[ -n $(scm_get_var BRANCH) || -n $(scm_get_var TAG) ||
                  -n $(scm_get_var SUBPATH) ]] \
        && die "$(scm_var_name SVN_RAW_URI) must not be set at the same time as $(scm_var_name BRANCH) or $(scm_var_name TAG) or $(scm_var_name SUBPATH)"
    [[ -n $(scm_get_var BRANCH) && -n $(scm_get_var TAG) ]] \
        && die "for svn, $(scm_var_name TAG) must not be set at the same time as $(scm_var_name BRANCH)"
    [[ -n $(scm_get_var REVISION) ]] && \
        [[ "$(scm_get_var REVISION)" == *[^[:digit:]]* || "$(scm_get_var REVISION)" -eq 0 ]] \
        && die "for svn, $(scm_var_name REVISION) must be a positive integer"

    scm_trim_slashes REPOSITORY -scheme -trailing
    scm_trim_slashes BRANCH  -leading -trailing
    scm_trim_slashes TAG     -leading -trailing
    scm_trim_slashes SUBPATH -leading -trailing
}

scm-svn_uri() {
    if [[ -n $(scm_get_var SVN_RAW_URI) ]]; then
        scm_get_var REPOSITORY
        return
    fi

    local uri=$(scm_get_var REPOSITORY)
    if [[ -n $(scm_get_var TAG) ]]; then
        uri+=/tags/$(scm_get_var TAG)
    elif [[ -n $(scm_get_var BRANCH) ]]; then
        uri+=/branches/$(scm_get_var BRANCH)
    else
        uri+=/trunk
    fi

    [[ -n $(scm_get_var SUBPATH) ]] && uri+=/$(scm_get_var SUBPATH)

    echo "${uri}"
}

scm-svn_svn() {
    local echo=echo
    if [[ ${1} == -q ]]; then
        shift
        echo=:
    fi

    local cmd=${1} extra=( --non-interactive )
    shift
    has "${cmd}" checkout co export status stat st switch sw update up && extra+=( --ignore-externals )

    ${echo} svn "${cmd}" "${extra[@]}" "${@}"
    svn "${cmd}" "${extra[@]}" "${@}" || die_unless_nonfatal "svn ${cmd} failed"
}

scm-svn_info() {
    local what=${2:-$(scm_get_var CHECKOUT_TO)}
    local info=$(scm-svn_svn -q info "${what}" | sed -ne "s/^${1}: //p")
    [[ -n ${info} ]] || die "could not determine ${1} for ${what}"
    echo "${info}"
}

scm-svn_do_appraise() {
    local dir=$(scm_get_var CHECKOUT_TO)

    if [[ ! -d ${dir}/.svn ]]; then
        echo "${dir} is not a svn checkout"
        return 3
    fi

    if [[ $(scm-svn_info URL) != $(scm-svn_uri) ]]; then
        echo "${dir} is a checkout of $(scm-svn_info URL), but wanted $(scm-svn_uri)"

        return 1
    fi

    if [[ -n $(scm_get_var REVISION) ]]; then
        if [[ $(scm_get_var REVISION) -eq $(scm-svn_do_revision) ]]; then
            return 2
        else
            echo "${dir} is a checkout of revision $(scm-svn_do_revision), but wanted $(scm_get_var REVISION)"
            return 1
        fi
    fi

    if [[ -n $(scm_get_var TAG) && -z $(scm_get_var SVN_SLOPPY_TAG) ]]; then
        return 2
    else
        return 0
    fi
}

scm-svn_do_checkout() {
    local rev=$(scm_get_var REVISION)
    scm-svn_svn checkout ${rev:+-r${rev}} "$(scm-svn_uri)" "$(scm_get_var CHECKOUT_TO)"
}

scm-svn_do_update() {
    local dir=$(scm_get_var CHECKOUT_TO)

    if [[ $(scm-svn_uri) != $(scm-svn_info URL) ]]; then
        local oldroot=$(scm-svn_info 'Repository Root')
        local newroot=$(scm-svn_info 'Repository Root' "$(scm-svn_uri)")
        if [[ ${newroot} != ${oldroot} ]]; then
            if [[ $(scm-svn_info 'Repository UUID') != $(scm-svn_info 'Repository UUID' "$(scm-svn_uri)") ]]; then
                echo rm -rf "${dir}"
                rm -rf "${dir}"
                [[ -d "${dir}" ]] && die "rm failed"
                scm-svn_do_checkout
                return
            fi

            scm-svn_svn switch --relocate "${oldroot}" "${newroot}" "${dir}"
        fi
    fi

    local rev=$(scm_get_var REVISION)
    if [[ $(scm-svn_uri) != $(scm-svn_info URL) ]]; then
        scm-svn_svn switch ${rev:+-r${rev}} "$(scm-svn_uri)" "${dir}"
    else
        scm-svn_svn update ${rev:+-r${rev}} "${dir}"
    fi
}

scm-svn_do_revision() {
    scm-svn_info 'Last Changed Rev'
}

scm-svn_do_unpack() {
    scm-svn_svn export "$(scm_get_var CHECKOUT_TO)" "$(scm_get_var UNPACK_TO)"
}

