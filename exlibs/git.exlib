# Copyright 2008 Fernando J. Pereda
# Distributed under the terms of the GNU General Public License v2
# Based upon 'git.eclass' which is:
#    Copyright 1999-2007 Gentoo Foundation

##
# This exlib fetches sources from git repositories
#
# Description:
#   ${S} is ${WORKDIR}/${P}.
#   EGIT_REPO_URI needs to be set before 'require'
#

export_exlib_phases src_unpack

DEPENDENCIES="
    build,host:
        dev-scm/git
"
##
# git sources store directory
#
EGIT_STORE_DIR="${FETCHEDDIR}/git-src"

##
# Repository uri
#
: ${EGIT_REPO_URI:=}

##
# Local repository name
#
: ${EGIT_REPO_NAME:=${CATEGORY}--${PN}}

##
# Set before 'require' to use a branch other than master
#
: ${EGIT_BRANCH:=master}

##
# Set before 'require' to use a tree other than EGIT_BRANCH
#
: ${EGIT_TREE:=${EGIT_BRANCH}}

git_die()
{
    die "git.exlib: $1"
}

git_cmd()
{
    local cmd="git --git-dir=${EGIT_REPO_NAME}"
    echo ${cmd} $@ >&2
    GIT_PAGER=cat ${cmd} $@ || git_die "$1 failed"
}

git_fetch()
{
    [[ -z ${EGIT_REPO_URI} ]] && git_die "EGIT_REPO_URI is empty."

    if [[ ! -d ${EGIT_STORE_DIR} ]] ; then
        addwrite /
        mkdir -p "${EGIT_STORE_DIR}" \
            || git_die "can't mkdir ${EGIT_STORE_DIR}."
        export SANDBOX_WRITE="${SANDBOX_WRITE%%:/}"
    fi

    cd -P "${EGIT_STORE_DIR}" || git_die "can't chdir to ${EGIT_STORE_DIR}"
    addwrite "${PWD}"

    if [[ ! -d ${EGIT_REPO_NAME} ]] ; then
        git_cmd clone --bare ${EGIT_REPO_URI} ${EGIT_REPO_NAME}
        git_cmd config remote.origin.url ${EGIT_REPO_URI}
    else
        git_cmd config remote.origin.url ${EGIT_REPO_URI}
        local oldsha1=$(git_cmd rev-parse ${EGIT_BRANCH})
        git_cmd fetch -f -u origin ${EGIT_BRANCH}:${EGIT_BRANCH}
        git_cmd diff --stat ${oldsha1}..${EGIT_BRANCH}
    fi

    git_cmd gc --auto

    mkdir -p "${S}"
    git_cmd archive --format=tar ${EGIT_TREE} | ( cd "${S}" ; tar xf - )
}

git_src_unpack()
{
    git_fetch || git_die 'unknown problem in git_fetch'
}
