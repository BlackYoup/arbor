# Copyright 2008, 2009 Bo Ã˜rsted Andresen
# Copyright 2008 Mike Kelly
# Copyright 2009 David Leverton
# Distributed under the terms of the GNU General Public License v2

# If your package provides pkg_postinst or pkg_prerm phases, you need to be
# sure you explicitly run alternatives_pkg_{postinst,prerm} where appropriate.

ALTERNATIVES_DIR="/etc/env.d/alternatives"

DEPENDENCIES="
    build+run:
        app-admin/eclectic"

# alternatives_for alternative provider importance source target [ source target [...]]
alternatives_for() {
    illegal_in_global_scope

    (( $# >= 5 )) && (( ($#-3)%2 == 0)) || die "${FUNCNAME} requires exactly 3+N*2 arguments where N>=1"
    local x dupl alternative=${1} provider=${2} importance=${3} index unique src target ret=0
    shift 3

    # make sure importance is a signed integer
    if [[ -n ${importance} ]] && ! [[ ${importance} =~ ^[0-9]+(\.[0-9]+)*$ ]]; then
        eerror "Invalid importance (${importance}) detected"
        ((ret++))
    fi

    [[ -d "${IMAGE}${ALTERNATIVES_DIR}/${alternative}/${provider}" ]] || dodir "${ALTERNATIVES_DIR}/${alternative}/${provider}"

    # keep track of provided alternatives for use in pkg_{postinst,prerm}. keep a mapping between importance and
    # provided alternatives and make sure the former is set to only one value
    if ! has "${alternative}:${provider}" "${ALTERNATIVES_PROVIDED[@]}"; then
        index=${#ALTERNATIVES_PROVIDED[@]}
        ALTERNATIVES_PROVIDED+=( "${alternative}:${provider}" )
        ALTERNATIVES_IMPORTANCE[index]=${importance}
        [[ -n ${importance} ]] && echo "${importance}" > "${IMAGE}${ALTERNATIVES_DIR}/${alternative}/${provider}/_importance"
    else
        for((index=0;index<${#ALTERNATIVES_PROVIDED[@]};index++)); do
            if [[ ${alternative}:${provider} == ${ALTERNATIVES_PROVIDED[index]} ]]; then
                if [[ -n ${ALTERNATIVES_IMPORTANCE[index]} ]]; then
                    if [[ -n ${importance} && ${ALTERNATIVES_IMPORTANCE[index]} != ${importance} ]]; then
                        eerror "Differing importance (${ALTERNATIVES_IMPORTANCE[index]} != ${importance}) detected"
                        ((ret++))
                    fi
                else
                    ALTERNATIVES_IMPORTANCE[index]=${importance}
                    [[ -n ${importance} ]] && echo "${importance}" > "${IMAGE}${ALTERNATIVES_DIR}/${alternative}/${provider}/_importance"
                fi
            fi
        done
    fi

    while (( $# >= 2 )); do
        src=${1//+(\/)/\/}; target=${2//+(\/)/\/}
        if [[ ${src} != /* ]]; then
            eerror "Source path must be absolute, but got ${src}"
            ((ret++))

        else
            local reltarget= dir=${ALTERNATIVES_DIR}/${alternative}/${provider}${src%/*}
            while [[ -n ${dir} ]]; do
                reltarget+=../
                dir=${dir%/*}
            done

            reltarget=${reltarget%/}
            [[ ${target} == /* ]] || reltarget+=${src%/*}/
            reltarget+=${target}
            dodir "${ALTERNATIVES_DIR}/${alternative}/${provider}${src%/*}"
            dosym "${reltarget}" "${ALTERNATIVES_DIR}/${alternative}/${provider}${src}"

            if [[ -e ${IMAGE}${src} ]]; then
                local fulltarget=${target}
                [[ ${fulltarget} != /* ]] && fulltarget=${src%/*}/${fulltarget}
                mv "${IMAGE}${src}" "${IMAGE}${fulltarget}" || die "mv ${src} failed"
            fi
        fi
        shift 2
    done

    [[ ${ret} -eq 0 ]] || die "Errors detected for ${provider}, provided for ${alternative}"
}

export_exlib_phases pkg_postinst pkg_prerm

alternatives_pkg_postinst() {
    illegal_in_global_scope

    local a alt provider module_version="20080924"
    for a in "${ALTERNATIVES_PROVIDED[@]}"; do
        alt="${a%:*}"
        provider="${a#*:}"
        if [[ ! -f "${ROOT}/usr/share/eclectic/modules/${alt}.eclectic" \
            || "$(source "${ROOT}/usr/share/eclectic/modules/${alt}.eclectic" &>/dev/null; echo "${VERSION}")" \
                -ne "${module_version}" ]]; then
            einfo "Creating alternatives module for ${alt}"
            if [[ ! -d ${ROOT}/usr/share/eclectic/modules ]]; then
                install -d "${ROOT}"/usr/share/eclectic/modules || eerror "Could not create eclectic modules dir"
            fi
            cat > "${ROOT}/usr/share/eclectic/modules/${alt}.eclectic" << EOF
# This module was automatically generated by alternatives.exlib
DESCRIPTION="Alternatives for ${alt}"
VERSION="${module_version}"
MAINTAINER="eclectic@exherbo.org"

ALTERNATIVE="${alt}"

inherit alternatives
EOF
        fi

        echo eclectic "${alt}" update "${provider}"
        eclectic "${alt}" update "${provider}"
    done
}

alternatives_pkg_prerm() {
    illegal_in_global_scope

    local a alt provider p ignore
    [[ -n ${REPLACED_BY_ID} ]] || ignore=" --ignore"
    for a in "${ALTERNATIVES_PROVIDED[@]}"; do
        alt="${a%:*}"
        provider="${a#*:}"
        einfo "Making sure ${alt} has a valid provider"
        echo eclectic "${alt}" update${ignore} "${provider}"
        eclectic "${alt}" update${ignore} "${provider}" && continue
        if [[ $? -eq 2 ]]; then
            einfo "Cleaning up unused alternatives module for ${alt}"
            echo rm "${ROOT}/usr/share/eclectic/modules/${alt}.eclectic"
            rm "${ROOT}/usr/share/eclectic/modules/${alt}.eclectic" ||
                eerror rm "${ROOT}/usr/share/eclectic/modules/${alt}.eclectic" failed
        fi
    done
}

